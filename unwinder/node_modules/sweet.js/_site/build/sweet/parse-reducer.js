import Term from "./terms";
import {CloneReducer} from "shift-reducer";
export default class ParseReducer extends CloneReducer {
  reduceModule(node_412, state_413) {
    return new Term("Module", {directives: state_413.directives.toArray(), items: state_413.items.toArray()});
  }
  reduceImport(node_414, state_415) {
    let moduleSpecifier_416 = state_415.moduleSpecifier ? state_415.moduleSpecifier.val() : null;
    return new Term("Import", {defaultBinding: state_415.defaultBinding, namedImports: state_415.namedImports.toArray(), moduleSpecifier: moduleSpecifier_416, forSyntax: node_414.forSyntax});
  }
  reduceImportNamespace(node_417, state_418) {
    let moduleSpecifier_419 = state_418.moduleSpecifier ? state_418.moduleSpecifier.val() : null;
    return new Term("ImportNamespace", {defaultBinding: state_418.defaultBinding, namespaceBinding: state_418.namespaceBinding, moduleSpecifier: moduleSpecifier_419, forSyntax: node_417.forSyntax});
  }
  reduceExport(node_420, state_421) {
    return new Term("Export", {declaration: state_421.declaration});
  }
  reduceExportAllFrom(node_422, state_423) {
    let moduleSpecifier_424 = state_423.moduleSpecifier ? state_423.moduleSpecifier.val() : null;
    return new Term("ExportAllFrom", {moduleSpecifier: moduleSpecifier_424});
  }
  reduceExportFrom(node_425, state_426) {
    let moduleSpecifier_427 = state_426.moduleSpecifier ? state_426.moduleSpecifier.val() : null;
    return new Term("ExportFrom", {moduleSpecifier: moduleSpecifier_427, namedExports: state_426.namedExports.toArray()});
  }
  reduceExportSpecifier(node_428, state_429) {
    let name_430 = state_429.name, exportedName_431 = state_429.exportedName;
    if (name_430 == null) {
      name_430 = exportedName_431.resolve();
      exportedName_431 = exportedName_431.val();
    } else {
      name_430 = name_430.resolve();
      exportedName_431 = exportedName_431.val();
    }
    return new Term("ExportSpecifier", {name: name_430, exportedName: exportedName_431});
  }
  reduceImportSpecifier(node_432, state_433) {
    let name_434 = state_433.name ? state_433.name.resolve() : null;
    return new Term("ImportSpecifier", {name: name_434, binding: state_433.binding});
  }
  reduceIdentifierExpression(node_435, state_436) {
    return new Term("IdentifierExpression", {name: node_435.name.resolve()});
  }
  reduceLiteralNumericExpression(node_437, state_438) {
    return new Term("LiteralNumericExpression", {value: node_437.value.val()});
  }
  reduceLiteralBooleanExpression(node_439, state_440) {
    return new Term("LiteralBooleanExpression", {value: node_439.value.val() === "true"});
  }
  reduceLiteralStringExpression(node_441, state_442) {
    return new Term("LiteralStringExpression", {value: node_441.value.token.str});
  }
  reduceCallExpression(node_443, state_444) {
    return new Term("CallExpression", {callee: state_444.callee, arguments: state_444.arguments.toArray()});
  }
  reduceFunctionBody(node_445, state_446) {
    return new Term("FunctionBody", {directives: state_446.directives.toArray(), statements: state_446.statements.toArray()});
  }
  reduceFormalParameters(node_447, state_448) {
    return new Term("FormalParameters", {items: state_448.items.toArray(), rest: state_448.rest});
  }
  reduceBindingIdentifier(node_449, state_450) {
    return new Term("BindingIdentifier", {name: node_449.name.resolve()});
  }
  reduceBinaryExpression(node_451, state_452) {
    return new Term("BinaryExpression", {left: state_452.left, operator: node_451.operator.val(), right: state_452.right});
  }
  reduceObjectExpression(node_453, state_454) {
    return new Term("ObjectExpression", {properties: state_454.properties.toArray()});
  }
  reduceVariableDeclaration(node_455, state_456) {
    return new Term("VariableDeclaration", {kind: state_456.kind, declarators: state_456.declarators.toArray()});
  }
  reduceStaticPropertyName(node_457, state_458) {
    return new Term("StaticPropertyName", {value: node_457.value.val().toString()});
  }
  reduceArrayExpression(node_459, state_460) {
    return new Term("ArrayExpression", {elements: state_460.elements.toArray()});
  }
  reduceStaticMemberExpression(node_461, state_462) {
    return new Term("StaticMemberExpression", {object: state_462.object, property: state_462.property.val()});
  }
}
