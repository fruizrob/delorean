"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.processTemplate = processTemplate;
exports.replaceTemplate = replaceTemplate;

var _immutable = require("immutable");

var _ramdaFantasy = require("ramda-fantasy");

var _ramda = require("ramda");

var _ramda2 = _interopRequireDefault(_ramda);

var _syntax = require("./syntax");

var _syntax2 = _interopRequireDefault(_syntax);

var _errors = require("./errors");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var isDolar_694 = function isDolar_694(s_702) {
  return s_702 && s_702 instanceof _syntax2.default && s_702.isIdentifier() && s_702.val() === "$";
};
var isDelimiter_695 = function isDelimiter_695(s_703) {
  return s_703 && typeof s_703.isDelimiter === "function" && s_703.isDelimiter();
};
var isBraces_696 = function isBraces_696(s_704) {
  return s_704 && typeof s_704.isBraces === "function" && s_704.isBraces();
};
var isParens_697 = function isParens_697(s_705) {
  return s_705 && typeof s_705.isParens === "function" && s_705.isParens();
};
var isBrackets_698 = function isBrackets_698(s_706) {
  return s_706 && typeof s_706.isBrackets === "function" && s_706.isBrackets();
};
var insertIntoDelimiter_699 = _ramda2.default.cond([[isBraces_696, function (s_707, r_708) {
  return _syntax2.default.fromBraces(r_708, s_707);
}], [isParens_697, function (s_709, r_710) {
  return _syntax2.default.fromParens(r_710, s_709);
}], [isBrackets_698, function (s_711, r_712) {
  return _syntax2.default.fromBrackets(r_712, s_711);
}]]);
var process_700 = function process_700(acc_713, s_714) {
  if (isBraces_696(s_714) && isDolar_694(acc_713.template.last())) {
    return { template: acc_713.template.push(_syntax2.default.fromBraces(_immutable.List.of(_syntax2.default.fromNumber(acc_713.interp.size)), s_714)), interp: acc_713.interp.push(s_714.inner()) };
  } else if (isDelimiter_695(s_714)) {
    var innerResult = processTemplate(s_714.inner(), acc_713.interp);
    return { template: acc_713.template.push(insertIntoDelimiter_699(s_714, innerResult.template)), interp: innerResult.interp };
  } else {
    return { template: acc_713.template.push(s_714), interp: acc_713.interp };
  }
};
var replace_701 = function replace_701(acc_715, s_716) {
  if (isBraces_696(s_716) && isDolar_694(acc_715.template.last())) {
    var index = s_716.inner().first().val();
    (0, _errors.assert)(acc_715.rep.size > index, "unknown replacement value");
    return { template: acc_715.template.pop().concat(acc_715.rep.get(index)), rep: acc_715.rep };
  } else if (isDelimiter_695(s_716)) {
    var innerResult = replaceTemplate(s_716.inner(), acc_715.rep);
    return { template: acc_715.template.push(insertIntoDelimiter_699(s_716, innerResult)), rep: acc_715.rep };
  } else {
    return { template: acc_715.template.push(s_716), rep: acc_715.rep };
  }
};
function processTemplate(temp_717) {
  var interp_718 = arguments.length <= 1 || arguments[1] === undefined ? (0, _immutable.List)() : arguments[1];

  return temp_717.reduce(process_700, { template: (0, _immutable.List)(), interp: interp_718 });
}
function replaceTemplate(temp_719, rep_720) {
  return temp_719.reduce(replace_701, { template: (0, _immutable.List)(), rep: rep_720 }).template;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3N3ZWV0L3RlbXBsYXRlLXByb2Nlc3Nvci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztRQWlDZ0I7UUFHQTs7QUFwQ2hCOztBQUNBOztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBLElBQU0sY0FBYyxTQUFkLFdBQWM7U0FBUyxTQUFTLGlDQUFULElBQW9DLE1BQU0sWUFBTixFQUFwQyxJQUE0RCxNQUFNLEdBQU4sT0FBZ0IsR0FBaEI7Q0FBckU7QUFDcEIsSUFBTSxrQkFBa0IsU0FBbEIsZUFBa0I7U0FBUyxTQUFTLE9BQU8sTUFBTSxXQUFOLEtBQXNCLFVBQTdCLElBQTJDLE1BQU0sV0FBTixFQUFwRDtDQUFUO0FBQ3hCLElBQU0sZUFBZSxTQUFmLFlBQWU7U0FBUyxTQUFTLE9BQU8sTUFBTSxRQUFOLEtBQW1CLFVBQTFCLElBQXdDLE1BQU0sUUFBTixFQUFqRDtDQUFUO0FBQ3JCLElBQU0sZUFBZSxTQUFmLFlBQWU7U0FBUyxTQUFTLE9BQU8sTUFBTSxRQUFOLEtBQW1CLFVBQTFCLElBQXdDLE1BQU0sUUFBTixFQUFqRDtDQUFUO0FBQ3JCLElBQU0saUJBQWlCLFNBQWpCLGNBQWlCO1NBQVMsU0FBUyxPQUFPLE1BQU0sVUFBTixLQUFxQixVQUE1QixJQUEwQyxNQUFNLFVBQU4sRUFBbkQ7Q0FBVDtBQUN2QixJQUFNLDBCQUEwQixnQkFBRSxJQUFGLENBQU8sQ0FBQyxDQUFDLFlBQUQsRUFBZSxVQUFDLEtBQUQsRUFBUSxLQUFSO1NBQWtCLGlCQUFPLFVBQVAsQ0FBa0IsS0FBbEIsRUFBeUIsS0FBekI7Q0FBbEIsQ0FBaEIsRUFBb0UsQ0FBQyxZQUFELEVBQWUsVUFBQyxLQUFELEVBQVEsS0FBUjtTQUFrQixpQkFBTyxVQUFQLENBQWtCLEtBQWxCLEVBQXlCLEtBQXpCO0NBQWxCLENBQW5GLEVBQXVJLENBQUMsY0FBRCxFQUFpQixVQUFDLEtBQUQsRUFBUSxLQUFSO1NBQWtCLGlCQUFPLFlBQVAsQ0FBb0IsS0FBcEIsRUFBMkIsS0FBM0I7Q0FBbEIsQ0FBeEosQ0FBUCxDQUExQjtBQUNOLElBQU0sY0FBYyxTQUFkLFdBQWMsQ0FBQyxPQUFELEVBQVUsS0FBVixFQUFvQjtBQUN0QyxNQUFJLGFBQWEsS0FBYixLQUF1QixZQUFZLFFBQVEsUUFBUixDQUFpQixJQUFqQixFQUFaLENBQXZCLEVBQTZEO0FBQy9ELFdBQU8sRUFBQyxVQUFVLFFBQVEsUUFBUixDQUFpQixJQUFqQixDQUFzQixpQkFBTyxVQUFQLENBQWtCLGdCQUFLLEVBQUwsQ0FBUSxpQkFBTyxVQUFQLENBQWtCLFFBQVEsTUFBUixDQUFlLElBQWYsQ0FBMUIsQ0FBbEIsRUFBbUUsS0FBbkUsQ0FBdEIsQ0FBVixFQUE0RyxRQUFRLFFBQVEsTUFBUixDQUFlLElBQWYsQ0FBb0IsTUFBTSxLQUFOLEVBQXBCLENBQVIsRUFBcEgsQ0FEK0Q7R0FBakUsTUFFTyxJQUFJLGdCQUFnQixLQUFoQixDQUFKLEVBQTRCO0FBQ2pDLFFBQUksY0FBYyxnQkFBZ0IsTUFBTSxLQUFOLEVBQWhCLEVBQStCLFFBQVEsTUFBUixDQUE3QyxDQUQ2QjtBQUVqQyxXQUFPLEVBQUMsVUFBVSxRQUFRLFFBQVIsQ0FBaUIsSUFBakIsQ0FBc0Isd0JBQXdCLEtBQXhCLEVBQStCLFlBQVksUUFBWixDQUFyRCxDQUFWLEVBQXVGLFFBQVEsWUFBWSxNQUFaLEVBQXZHLENBRmlDO0dBQTVCLE1BR0E7QUFDTCxXQUFPLEVBQUMsVUFBVSxRQUFRLFFBQVIsQ0FBaUIsSUFBakIsQ0FBc0IsS0FBdEIsQ0FBVixFQUF3QyxRQUFRLFFBQVEsTUFBUixFQUF4RCxDQURLO0dBSEE7Q0FIVztBQVVwQixJQUFNLGNBQWMsU0FBZCxXQUFjLENBQUMsT0FBRCxFQUFVLEtBQVYsRUFBb0I7QUFDdEMsTUFBSSxhQUFhLEtBQWIsS0FBdUIsWUFBWSxRQUFRLFFBQVIsQ0FBaUIsSUFBakIsRUFBWixDQUF2QixFQUE2RDtBQUMvRCxRQUFJLFFBQVEsTUFBTSxLQUFOLEdBQWMsS0FBZCxHQUFzQixHQUF0QixFQUFSLENBRDJEO0FBRS9ELHdCQUFPLFFBQVEsR0FBUixDQUFZLElBQVosR0FBbUIsS0FBbkIsRUFBMEIsMkJBQWpDLEVBRitEO0FBRy9ELFdBQU8sRUFBQyxVQUFVLFFBQVEsUUFBUixDQUFpQixHQUFqQixHQUF1QixNQUF2QixDQUE4QixRQUFRLEdBQVIsQ0FBWSxHQUFaLENBQWdCLEtBQWhCLENBQTlCLENBQVYsRUFBaUUsS0FBSyxRQUFRLEdBQVIsRUFBOUUsQ0FIK0Q7R0FBakUsTUFJTyxJQUFJLGdCQUFnQixLQUFoQixDQUFKLEVBQTRCO0FBQ2pDLFFBQUksY0FBYyxnQkFBZ0IsTUFBTSxLQUFOLEVBQWhCLEVBQStCLFFBQVEsR0FBUixDQUE3QyxDQUQ2QjtBQUVqQyxXQUFPLEVBQUMsVUFBVSxRQUFRLFFBQVIsQ0FBaUIsSUFBakIsQ0FBc0Isd0JBQXdCLEtBQXhCLEVBQStCLFdBQS9CLENBQXRCLENBQVYsRUFBOEUsS0FBSyxRQUFRLEdBQVIsRUFBM0YsQ0FGaUM7R0FBNUIsTUFHQTtBQUNMLFdBQU8sRUFBQyxVQUFVLFFBQVEsUUFBUixDQUFpQixJQUFqQixDQUFzQixLQUF0QixDQUFWLEVBQXdDLEtBQUssUUFBUSxHQUFSLEVBQXJELENBREs7R0FIQTtDQUxXO0FBWWIsU0FBUyxlQUFULENBQXlCLFFBQXpCLEVBQXdEO01BQXJCLG1FQUFhLHNDQUFROztBQUM3RCxTQUFPLFNBQVMsTUFBVCxDQUFnQixXQUFoQixFQUE2QixFQUFDLFVBQVUsc0JBQVYsRUFBa0IsUUFBUSxVQUFSLEVBQWhELENBQVAsQ0FENkQ7Q0FBeEQ7QUFHQSxTQUFTLGVBQVQsQ0FBeUIsUUFBekIsRUFBbUMsT0FBbkMsRUFBNEM7QUFDakQsU0FBTyxTQUFTLE1BQVQsQ0FBZ0IsV0FBaEIsRUFBNkIsRUFBQyxVQUFVLHNCQUFWLEVBQWtCLEtBQUssT0FBTCxFQUFoRCxFQUErRCxRQUEvRCxDQUQwQztDQUE1QyIsImZpbGUiOiJ0ZW1wbGF0ZS1wcm9jZXNzb3IuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0xpc3R9IGZyb20gXCJpbW11dGFibGVcIjtcbmltcG9ydCB7TWF5YmV9IGZyb20gXCJyYW1kYS1mYW50YXN5XCI7XG5pbXBvcnQgXyBmcm9tIFwicmFtZGFcIjtcbmltcG9ydCBTeW50YXggZnJvbSBcIi4vc3ludGF4XCI7XG5pbXBvcnQge2Fzc2VydH0gZnJvbSBcIi4vZXJyb3JzXCI7XG5jb25zdCBpc0RvbGFyXzY5NCA9IHNfNzAyID0+IHNfNzAyICYmIHNfNzAyIGluc3RhbmNlb2YgU3ludGF4ICYmIHNfNzAyLmlzSWRlbnRpZmllcigpICYmIHNfNzAyLnZhbCgpID09PSBcIiRcIjtcbmNvbnN0IGlzRGVsaW1pdGVyXzY5NSA9IHNfNzAzID0+IHNfNzAzICYmIHR5cGVvZiBzXzcwMy5pc0RlbGltaXRlciA9PT0gXCJmdW5jdGlvblwiICYmIHNfNzAzLmlzRGVsaW1pdGVyKCk7XG5jb25zdCBpc0JyYWNlc182OTYgPSBzXzcwNCA9PiBzXzcwNCAmJiB0eXBlb2Ygc183MDQuaXNCcmFjZXMgPT09IFwiZnVuY3Rpb25cIiAmJiBzXzcwNC5pc0JyYWNlcygpO1xuY29uc3QgaXNQYXJlbnNfNjk3ID0gc183MDUgPT4gc183MDUgJiYgdHlwZW9mIHNfNzA1LmlzUGFyZW5zID09PSBcImZ1bmN0aW9uXCIgJiYgc183MDUuaXNQYXJlbnMoKTtcbmNvbnN0IGlzQnJhY2tldHNfNjk4ID0gc183MDYgPT4gc183MDYgJiYgdHlwZW9mIHNfNzA2LmlzQnJhY2tldHMgPT09IFwiZnVuY3Rpb25cIiAmJiBzXzcwNi5pc0JyYWNrZXRzKCk7XG5jb25zdCBpbnNlcnRJbnRvRGVsaW1pdGVyXzY5OSA9IF8uY29uZChbW2lzQnJhY2VzXzY5NiwgKHNfNzA3LCByXzcwOCkgPT4gU3ludGF4LmZyb21CcmFjZXMocl83MDgsIHNfNzA3KV0sIFtpc1BhcmVuc182OTcsIChzXzcwOSwgcl83MTApID0+IFN5bnRheC5mcm9tUGFyZW5zKHJfNzEwLCBzXzcwOSldLCBbaXNCcmFja2V0c182OTgsIChzXzcxMSwgcl83MTIpID0+IFN5bnRheC5mcm9tQnJhY2tldHMocl83MTIsIHNfNzExKV1dKTtcbmNvbnN0IHByb2Nlc3NfNzAwID0gKGFjY183MTMsIHNfNzE0KSA9PiB7XG4gIGlmIChpc0JyYWNlc182OTYoc183MTQpICYmIGlzRG9sYXJfNjk0KGFjY183MTMudGVtcGxhdGUubGFzdCgpKSkge1xuICAgIHJldHVybiB7dGVtcGxhdGU6IGFjY183MTMudGVtcGxhdGUucHVzaChTeW50YXguZnJvbUJyYWNlcyhMaXN0Lm9mKFN5bnRheC5mcm9tTnVtYmVyKGFjY183MTMuaW50ZXJwLnNpemUpKSwgc183MTQpKSwgaW50ZXJwOiBhY2NfNzEzLmludGVycC5wdXNoKHNfNzE0LmlubmVyKCkpfTtcbiAgfSBlbHNlIGlmIChpc0RlbGltaXRlcl82OTUoc183MTQpKSB7XG4gICAgbGV0IGlubmVyUmVzdWx0ID0gcHJvY2Vzc1RlbXBsYXRlKHNfNzE0LmlubmVyKCksIGFjY183MTMuaW50ZXJwKTtcbiAgICByZXR1cm4ge3RlbXBsYXRlOiBhY2NfNzEzLnRlbXBsYXRlLnB1c2goaW5zZXJ0SW50b0RlbGltaXRlcl82OTkoc183MTQsIGlubmVyUmVzdWx0LnRlbXBsYXRlKSksIGludGVycDogaW5uZXJSZXN1bHQuaW50ZXJwfTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4ge3RlbXBsYXRlOiBhY2NfNzEzLnRlbXBsYXRlLnB1c2goc183MTQpLCBpbnRlcnA6IGFjY183MTMuaW50ZXJwfTtcbiAgfVxufTtcbmNvbnN0IHJlcGxhY2VfNzAxID0gKGFjY183MTUsIHNfNzE2KSA9PiB7XG4gIGlmIChpc0JyYWNlc182OTYoc183MTYpICYmIGlzRG9sYXJfNjk0KGFjY183MTUudGVtcGxhdGUubGFzdCgpKSkge1xuICAgIGxldCBpbmRleCA9IHNfNzE2LmlubmVyKCkuZmlyc3QoKS52YWwoKTtcbiAgICBhc3NlcnQoYWNjXzcxNS5yZXAuc2l6ZSA+IGluZGV4LCBcInVua25vd24gcmVwbGFjZW1lbnQgdmFsdWVcIik7XG4gICAgcmV0dXJuIHt0ZW1wbGF0ZTogYWNjXzcxNS50ZW1wbGF0ZS5wb3AoKS5jb25jYXQoYWNjXzcxNS5yZXAuZ2V0KGluZGV4KSksIHJlcDogYWNjXzcxNS5yZXB9O1xuICB9IGVsc2UgaWYgKGlzRGVsaW1pdGVyXzY5NShzXzcxNikpIHtcbiAgICBsZXQgaW5uZXJSZXN1bHQgPSByZXBsYWNlVGVtcGxhdGUoc183MTYuaW5uZXIoKSwgYWNjXzcxNS5yZXApO1xuICAgIHJldHVybiB7dGVtcGxhdGU6IGFjY183MTUudGVtcGxhdGUucHVzaChpbnNlcnRJbnRvRGVsaW1pdGVyXzY5OShzXzcxNiwgaW5uZXJSZXN1bHQpKSwgcmVwOiBhY2NfNzE1LnJlcH07XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHt0ZW1wbGF0ZTogYWNjXzcxNS50ZW1wbGF0ZS5wdXNoKHNfNzE2KSwgcmVwOiBhY2NfNzE1LnJlcH07XG4gIH1cbn07XG5leHBvcnQgZnVuY3Rpb24gcHJvY2Vzc1RlbXBsYXRlKHRlbXBfNzE3LCBpbnRlcnBfNzE4ID0gTGlzdCgpKSB7XG4gIHJldHVybiB0ZW1wXzcxNy5yZWR1Y2UocHJvY2Vzc183MDAsIHt0ZW1wbGF0ZTogTGlzdCgpLCBpbnRlcnA6IGludGVycF83MTh9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiByZXBsYWNlVGVtcGxhdGUodGVtcF83MTksIHJlcF83MjApIHtcbiAgcmV0dXJuIHRlbXBfNzE5LnJlZHVjZShyZXBsYWNlXzcwMSwge3RlbXBsYXRlOiBMaXN0KCksIHJlcDogcmVwXzcyMH0pLnRlbXBsYXRlO1xufVxuIl19