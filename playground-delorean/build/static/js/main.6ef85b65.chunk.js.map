{"version":3,"sources":["markdown.js","../node_modules/codemirror/mode lazy /^/.//.*/.js$/ groupOptions: {} namespace object","../../src/delorean.js","../../unwinder/runtime/vm.js","../../unwinder/lib/util.js","../../src/debugger.js","../../node_modules/babel-core/lib/transformation/file/options sync","../../node_modules/babel-core/lib/transformation/file sync","../../src/heap.js","../../unwinder/main.js","../../unwinder/lib/emit.js","App.js","components/Layout.js","components/Console.js","components/Output.js","../../example/input1.js","../../example/input2.js","../../example/input3.js","components/Tab.js","components/StatusBar.js","index.js","../../src/staticAnalysis.js","../../src/visitors/watch.js","../../src/visitors/declarator.js","../../src/visitors/assignment.js","../../src/visitors/createContinuation.js","../../src/visitors/storeContinuations.js","../../src/visitors/heapRestore.js","../../src/visitors/continuationRestore.js","../../src/visitors/tryCatch.js","../../src/visitors/loop.js","../../src/visitors/ifBlock.js","../../index.js","../../unwinder/bin/compile.js","../../unwinder/lib/visit.js","../../unwinder/lib/hoist.js","../../unwinder/lib/leap.js","../../unwinder/lib/meta.js","../../unwinder/lib/debug.js"],"names":["module","exports","map","./apl/apl.js","./asciiarmor/asciiarmor.js","./asn.1/asn.1.js","./asterisk/asterisk.js","./brainfuck/brainfuck.js","./clike/clike.js","./clojure/clojure.js","./cmake/cmake.js","./cobol/cobol.js","./coffeescript/coffeescript.js","./commonlisp/commonlisp.js","./crystal/crystal.js","./css/css.js","./cypher/cypher.js","./d/d.js","./dart/dart.js","./diff/diff.js","./django/django.js","./dockerfile/dockerfile.js","./dtd/dtd.js","./dylan/dylan.js","./ebnf/ebnf.js","./ecl/ecl.js","./eiffel/eiffel.js","./elm/elm.js","./erlang/erlang.js","./factor/factor.js","./fcl/fcl.js","./forth/forth.js","./fortran/fortran.js","./gas/gas.js","./gfm/gfm.js","./gherkin/gherkin.js","./go/go.js","./groovy/groovy.js","./haml/haml.js","./handlebars/handlebars.js","./haskell-literate/haskell-literate.js","./haskell/haskell.js","./haxe/haxe.js","./htmlembedded/htmlembedded.js","./htmlmixed/htmlmixed.js","./http/http.js","./idl/idl.js","./javascript/javascript.js","./jinja2/jinja2.js","./jsx/jsx.js","./julia/julia.js","./livescript/livescript.js","./lua/lua.js","./markdown/markdown.js","./mathematica/mathematica.js","./mbox/mbox.js","./meta.js","./mirc/mirc.js","./mllike/mllike.js","./modelica/modelica.js","./mscgen/mscgen.js","./mumps/mumps.js","./nginx/nginx.js","./nsis/nsis.js","./ntriples/ntriples.js","./octave/octave.js","./oz/oz.js","./pascal/pascal.js","./pegjs/pegjs.js","./perl/perl.js","./php/php.js","./pig/pig.js","./powershell/powershell.js","./properties/properties.js","./protobuf/protobuf.js","./pug/pug.js","./puppet/puppet.js","./python/python.js","./q/q.js","./r/r.js","./rpm/rpm.js","./rst/rst.js","./ruby/ruby.js","./rust/rust.js","./sas/sas.js","./sass/sass.js","./scheme/scheme.js","./shell/shell.js","./sieve/sieve.js","./slim/slim.js","./smalltalk/smalltalk.js","./smarty/smarty.js","./solr/solr.js","./soy/soy.js","./sparql/sparql.js","./spreadsheet/spreadsheet.js","./sql/sql.js","./stex/stex.js","./stylus/stylus.js","./swift/swift.js","./tcl/tcl.js","./textile/textile.js","./tiddlywiki/tiddlywiki.js","./tiki/tiki.js","./toml/toml.js","./tornado/tornado.js","./troff/troff.js","./ttcn-cfg/ttcn-cfg.js","./ttcn/ttcn.js","./turtle/turtle.js","./twig/twig.js","./vb/vb.js","./vbscript/vbscript.js","./velocity/velocity.js","./verilog/verilog.js","./vhdl/vhdl.js","./vue/vue.js","./webidl/webidl.js","./xml/xml.js","./xquery/xquery.js","./yacas/yacas.js","./yaml-frontmatter/yaml-frontmatter.js","./yaml/yaml.js","./z80/z80.js","webpackAsyncContext","req","ids","Promise","all","slice","__webpack_require__","e","then","id","t","resolve","Error","code","keys","Object","heapSnapshot","insertTimePoint","watch","array","console","log","process","fs","compiler","IDLE","prototype","hasOwnProperty","Machine","this","debugInfo","stack","error","undefined","doRestore","evalResult","state","running","_events","stepping","prevStates","tryStack","machineBreaks","machineWatches","Frame","machineId","name","fn","next","scope","thisPtr","tmpid","DebugInfo","data","ContinuationExc","initialFrame","savedFrames","fnstack","reuse","loadScript","path","src","readFileSync","argv","output","includeDebug","setDebugInfo","setCode","run","loadModule","loadString","str","execute","args","prevState","ret","prevStepping","rootFrame","apply","fire","checkStatus","rootFn","Function","Array","call","arguments","join","bind","globalFn","abort","invokingContinuation","capturingContinuation","getNextStepId","stepId","offset","locs","stepIds","idx","indexOf","length","continue","getRootFrame","top","getTopFrame","hasBreakpoints","restore","step","_step","getLocation","stepOver","curloc","finalLoc","biggest","forEach","k","loc","start","line","end","column","ldiff","cdiff","evaluate","expr","asExpr","evalArg","withTopFrame","suppressEvents","onCapture","onInvoke","dispatchException","toggleBreakpoint","pos","lineToMachinePos","locId","callCC","x","arg","invokeContinuation","handleWatch","res","value","on","event","handler","arr","push","off","i","splice","setTimeout","getFrameOffset","count","child","depth","info","machines","isStepping","getOutput","getState","disableBreakpoints","enableBreakpoints","pushState","popState","pop","pushTry","catchLoc","finallyLoc","finallyTempVar","popCatch","entry","popFinally","exc","dispatched","obj","reverse","popFrame","r","nextFrame","frame","prev","newFrame","machine","prevNext","stackEach","func","stackMap","stackReduce","acc","hasCaught","hasFinally","finallyEntries","cur","len","parseInt","closestMachinePos","l","sort","a","b","ch","setWatch","Math","random","watches","pushFrame","$Machine","$Frame","$DebugInfo","$ContinuationExc","hasOwn","guessTabWidth","source","counts","lastIndent","split","indent","exec","diff","abs","maxCount","result","tabWidth","defaults","extension","key","withLoc","node","babel","_require","dependenciesVisitor","initConfigVisitor","storeContinuationsVisitor","tryCatchVisitor","ifBlockVisitor","restoreHeap","snapshot","heap","snapshots","element","timePointId","dependencies","eval","concat","init","inputCode","_babel$transform","transform","plugins","compile","unwindedCode","kont","continuations","webpackEmptyContext","global","addDependencies","flag","loop","counter","originId","find","dependecy","toString","__dirname","assert","builders","utils","recast","esprimaHarmony","blockBindingExp","regenerator","options","supportBlockBinding","test","recastOptions","esprima","range","recastAst","parse","ast","program","defsResult","disallowUnknownReferences","disallowDuplicated","disallowVars","loopClosures","errors","transformed","body","unshift","debugAST","print","ok","version","runtime","dev","min","types","builtInTypes","n","namedTypes","leap","meta","makeSetBreakpointAST","blockStatement","traverse","Identifier","check","replace","Emitter","debugId","tmpId","maxTmpId","defineProperties","listing","marked","sourceLocations","leapManager","LeapManager","Ep","lit","literal","_location","getDeclError","JSON","stringify","mark","Literal","index","getLastMark","markAndBreak","emitAssign","identifier","emit","breakStatement","internal","Expression","expressionStatement","Statement","addSourceLocation","lhs","rhs","assign","assignmentExpression","declareVar","variableDeclaration","variableDeclarator","getProperty","prop","computed","memberExpression","vmProperty","clearPendingException","assignee","cp","jump","toLoc","jumpIf","srcLoc","ifStatement","jumpIfNot","unaryExpression","getTempVar","currentTempId","releaseTempVar","numTempVars","withTempVars","cb","prevId","getMachine","funcName","varNames","getDispatchLoop","resolveEmptyJumps","self","forwards","stmt","ReturnStatement","BreakStatement","ExpressionStatement","AssignmentExpression","expression","MemberExpression","left","object","property","right","current","alreadyEnded","cases","switchCase","ContinueStatement","ThrowStatement","isSwitchCaseEnder","addFinalLocation","addStepIds","reduce","val","returnStatement","callExpression","throwStatement","newExpression","whileStatement","logicalExpression","binaryExpression","switchStatement","explode","ignoreResult","NodePath","Node","explodeStatement","explodeExpression","Declaration","type","get","labelId","BlockStatement","each","label","before","after","withEntry","LoopEntry","first","head","update","tmpLoc","emitBreak","emitContinue","disc","defaultLoc","condition","caseLocs","c","SwitchCase","conditionalExpression","SwitchEntry","casePath","strictEqual","elseLoc","alternate","tmp","handlers","catchEntry","CatchEntry","param","finalizer","finallyEntry","FinallyEntry","nextLocTempVar","tryEntry","TryEntry","bodyPath","safeParam","catchScope","catchParamName","CatchClause","lookup","nil","method","firstLoc","finish","containsLeap","onlyChildren","explodeViaTempVar","tempVar","childPath","ignoreChildResult","keepTempVar","ThisExpression","shouldRelease","oldCalleePath","callArgs","newCallee","argPath","callee","objectExpression","propPath","kind","arrayExpression","elemPath","lastIndex","expressions","exprPath","operator","prefix","updateExpression","delorean","require","vm","App","props","_this","_Users_fruiz_Desktop_delorean_playground_delorean_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_fruiz_Desktop_delorean_playground_delorean_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_fruiz_Desktop_delorean_playground_delorean_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","tabs","input","example1","example2","example3","tabSelected","isRunning","readOnly","selected","selectedTarget","timePointValues","selectedTimePoint","updateCode","ev","setState","getValue","selectTimePoint","currentTarget","getAttribute","alert","el","selectTab","example","o","firstChild","selectTabColor","classList","remove","add","updateSnapshots","updateDependencies","toggleIsRunning","executeCode","debuggerDelorean","consoleFeed","logs","stopExecution","editor","setOption","snapshotCounter","createRef","theme","tabSize","keyMap","mode","lineNumbers","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_8__","_components_StatusBar__WEBPACK_IMPORTED_MODULE_11__","className","_uiw_react_codemirror__WEBPACK_IMPORTED_MODULE_12___default","ref","onChange","_components_Console__WEBPACK_IMPORTED_MODULE_9__","_components_Output__WEBPACK_IMPORTED_MODULE_10__","Component","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","Layout","children","ConsoleContainer","_this2","Hook","window","_ref","_Users_fruiz_Desktop_delorean_playground_delorean_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","Decode","react__WEBPACK_IMPORTED_MODULE_6___default","style","backgroundColor","console_feed__WEBPACK_IMPORTED_MODULE_7__","variant","Output","markdown","classes","display","justifyContent","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","color","size","button","onClick","_material_ui_core_Icon__WEBPACK_IMPORTED_MODULE_9___default","rightIcon","dependency","_React$createElement","_Users_fruiz_Desktop_delorean_playground_delorean_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","margin","react_markdown__WEBPACK_IMPORTED_MODULE_7___default","escapeHtml","withStyles","spacing","unit","buttonSelected","red","marginLeft","__webpack_exports__","Tab","react_default","StatusBar","tab","components_Tab","Button_default","Icon_default","leftIcon","marginRight","iconSmall","fontSize","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","_App__WEBPACK_IMPORTED_MODULE_3__","ReactDOM","render","document","getElementById","WatchVisitor","DeclaratorVisitor","AssignmentVisitor","ContinuationsConfigVisitor","StoreContinuationsVisitor","RestoreHeapVisitor","RestoreContinuationVisitor","TryCatchVisitor","LoopVisitor","IfBlockVisitor","DependenciesVisitor","Program","visitor","restoreHeapVisitor","restoreContinuationVisitor","CallExpression","elements","VariableDeclarator","some","functionDeclaration","arrowFunctionExpression","snapshotCall","findParent","isCallExpression","itIsInLoop","parent","context","parentPath","insertAfter","container","stringLiteral","continuationCall","isAssignmentExpression","numericLiteral","booleanLiteral","rightType","isTimePoint","catchClause","Program|BlockStatement","exit","block","splitPoints","isIfStatement","isDoWhileStatement","isTryStatement","isWhileStatement","isForStatement","newBlock","auxBlock","isProgram","getStatementParent","_i","startOfTryBlock","endOfTryBlock","tryStatement","_i2","pushContainer","ForStatement|DoWhileStatement|WhileStatement","hasTimepoint","IfStatement","consequent","originalCode","visitors","isString","noBabel","hoist","escope","opts","nodes","boxedVars","v","boxed","scopes","analyze","variables","defs","def","references","defBoxed","resolved","from","upper","last","functionExpression","visitNode","generator","isGlobal","isExpr","nameId","vars","localScope","params","declarations","hasTry","TryStatement","makeId","em","finalBody","inner","thisExpression","tmpSave","getRestoration","decl","VariableDeclaration","getDebugAST","getDebugInfo","restoration","fun","funDeclsToRaise","varDeclToExpr","vdec","includeIdentifiers","exprs","dec","assn","sequenceExpression","ForStatement","ForInStatement","FunctionDeclaration","funcExpr","assignment","FunctionExpression","paramNames","inherits","Entry","FunctionEntry","returnLoc","breakLoc","continueLoc","paramId","emitter","entryStack","LMp","getLeapLocation","callback","popped","_leapToEntry","predicate","skipNextTryEntry","m","makeAccessor","isArray","makePredicate","propertyName","knownTypes","eachField","opaqueTypes","sideEffectTypes","UnaryExpression","BinaryExpression","UpdateExpression","NewExpression","leapTypes","YieldExpression","DebuggerStatement","hasSideEffects","baseId","baseIndex","stmts","getSourceLocation"],"mappings":"4EAAAA,EAAOC,QAAU,4kCCAjB,IAAAC,EAAA,CACAC,eAAA,CACA,KACA,IAEAC,6BAAA,CACA,KACA,IAEAC,mBAAA,CACA,KACA,IAEAC,yBAAA,CACA,KACA,IAEAC,2BAAA,CACA,KACA,IAEAC,mBAAA,CACA,KACA,GAEAC,uBAAA,CACA,KACA,IAEAC,mBAAA,CACA,KACA,IAEAC,mBAAA,CACA,KACA,IAEAC,iCAAA,CACA,KACA,IAEAC,6BAAA,CACA,KACA,IAEAC,uBAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,GAEAC,qBAAA,CACA,KACA,IAEAC,WAAA,CACA,KACA,IAEAC,iBAAA,CACA,KACA,EACA,IAEAC,iBAAA,CACA,KACA,IAEAC,qBAAA,CACA,KACA,EACA,EACA,IAEAC,6BAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,IAEAC,mBAAA,CACA,KACA,IAEAC,iBAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,IAEAC,qBAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,IAEAC,qBAAA,CACA,KACA,IAEAC,qBAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,IAEAC,mBAAA,CACA,KACA,IAEAC,uBAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,EACA,IAEAC,uBAAA,CACA,KACA,IAEAC,aAAA,CACA,KACA,IAEAC,qBAAA,CACA,KACA,IAEAC,iBAAA,CACA,KACA,EACA,EACA,IAEAC,6BAAA,CACA,KACA,IAEAC,yCAAA,CACA,KACA,IAEAC,uBAAA,CACA,KACA,IAEAC,iBAAA,CACA,KACA,IAEAC,iCAAA,CACA,KACA,EACA,EACA,IAEAC,2BAAA,CACA,KACA,EACA,EACA,IAEAC,iBAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,IAEAC,6BAAA,CACA,KACA,GAEAC,qBAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,EACA,IAEAC,mBAAA,CACA,KACA,IAEAC,6BAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,IAEAC,yBAAA,CACA,KACA,GAEAC,+BAAA,CACA,KACA,IAEAC,iBAAA,CACA,KACA,IAEAC,YAAA,CACA,KAEAC,iBAAA,CACA,KACA,IAEAC,qBAAA,CACA,KACA,IAEAC,yBAAA,CACA,KACA,IAEAC,qBAAA,CACA,KACA,IAEAC,mBAAA,CACA,KACA,IAEAC,mBAAA,CACA,KACA,IAEAC,iBAAA,CACA,KACA,IAEAC,yBAAA,CACA,KACA,IAEAC,qBAAA,CACA,KACA,IAEAC,aAAA,CACA,KACA,IAEAC,qBAAA,CACA,KACA,IAEAC,mBAAA,CACA,KACA,EACA,IAEAC,iBAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,EACA,EACA,EACA,IAEAC,eAAA,CACA,KACA,IAEAC,6BAAA,CACA,KACA,IAEAC,6BAAA,CACA,KACA,IAEAC,yBAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,EACA,EACA,GAEAC,qBAAA,CACA,KACA,IAEAC,qBAAA,CACA,KACA,IAEAC,WAAA,CACA,KACA,IAEAC,WAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,IAEAC,iBAAA,CACA,KACA,IAEAC,iBAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,IAEAC,iBAAA,CACA,KACA,EACA,IAEAC,qBAAA,CACA,KACA,IAEAC,mBAAA,CACA,KACA,IAEAC,mBAAA,CACA,KACA,IAEAC,iBAAA,CACA,KACA,EACA,EACA,IAEAC,2BAAA,CACA,KACA,IAEAC,qBAAA,CACA,KACA,IAEAC,iBAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,EACA,EACA,IAEAC,qBAAA,CACA,KACA,IAEAC,+BAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,KAEAC,iBAAA,CACA,KACA,KAEAC,qBAAA,CACA,KACA,GAEAC,mBAAA,CACA,KACA,KAEAC,eAAA,CACA,KACA,KAEAC,uBAAA,CACA,KACA,KAEAC,6BAAA,CACA,KACA,KAEAC,iBAAA,CACA,KACA,KAEAC,iBAAA,CACA,KACA,KAEAC,uBAAA,CACA,KACA,EACA,EACA,IAEAC,mBAAA,CACA,KACA,KAEAC,yBAAA,CACA,KACA,KAEAC,iBAAA,CACA,KACA,KAEAC,qBAAA,CACA,KACA,KAEAC,iBAAA,CACA,KACA,IAEAC,aAAA,CACA,KACA,KAEAC,yBAAA,CACA,KACA,KAEAC,yBAAA,CACA,KACA,KAEAC,uBAAA,CACA,KACA,KAEAC,iBAAA,CACA,KACA,KAEAC,eAAA,CACA,KACA,EACA,EACA,EACA,EACA,GAEAC,qBAAA,CACA,KACA,KAEAC,eAAA,CACA,KACA,KAEAC,qBAAA,CACA,KACA,KAEAC,mBAAA,CACA,KACA,KAEAC,yCAAA,CACA,KACA,IAEAC,iBAAA,CACA,KACA,KAEAC,eAAA,CACA,KACA,MAGA,SAAAC,EAAAC,GACA,IAAAC,EAAA5H,EAAA2H,GACA,OAAAC,EAOAC,QAAAC,IAAAF,EAAAG,MAAA,GAAA/H,IAAAgI,EAAAC,IAAAC,KAAA,WACA,IAAAC,EAAAP,EAAA,GACA,OAAAI,EAAAI,EAAAD,EAAA,KARAN,QAAAQ,UAAAH,KAAA,WACA,IAAAD,EAAA,IAAAK,MAAA,uBAAAX,EAAA,KAEA,MADAM,EAAAM,KAAA,mBACAN,IAQAP,EAAAc,KAAA,WACA,OAAAC,OAAAD,KAAAxI,IAEA0H,EAAAS,GAAA,KACArI,EAAAC,QAAA2H,wBCnhBA,IACAgB,EADeV,EAAQ,KACvBU,aAEA5I,EAAAC,QAAA,CACA4I,gBAAA,SAAAR,GACAO,EAAAP,IAEAS,MAAA,SAAAC,GACAC,QAAAC,IAAA,cAAAF,EAAA,8BCRA,SAAAG,GAAA,IAAAC,EAASjB,EAAQ,IAEjBkB,EAAelB,EAAQ,KAgBvBmB,GAdAV,OAAAW,UAAAC,eAcA,QAIA,SAAAC,IACAC,KAAAC,UAAA,KACAD,KAAAE,MAAA,KACAF,KAAAG,WAAAC,EACAJ,KAAAK,WAAA,EACAL,KAAAM,WAAA,KACAN,KAAAO,MAAAX,EACAI,KAAAQ,SAAA,EACAR,KAAAS,QAAA,GACAT,KAAAU,UAAA,EACAV,KAAAW,WAAA,GACAX,KAAAY,SAAA,GACAZ,KAAAa,cAAA,GACAb,KAAAc,eAAA,GAkmBA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAZ,EAAAa,EAAAC,EAAAT,EAAAU,GACAtB,KAAAgB,YACAhB,KAAAiB,OACAjB,KAAAkB,KACAlB,KAAAmB,OACAnB,KAAAO,QACAP,KAAAoB,QACApB,KAAAqB,UACArB,KAAAY,WACAZ,KAAAsB,QA8GA,SAAAC,EAAAC,GACAxB,KAAAwB,OAmEA,SAAAC,EAAAtB,EAAAuB,EAAAC,GACA3B,KAAA4B,QAAAD,IAAAD,EAAA,CAAAA,GAAA,IACA1B,KAAAG,QACAH,KAAA6B,QAAAH,EA7xBA3B,EAAAF,UAAAiC,WAAA,SAAAC,GACA,IAAAC,EAAAtC,EAAAuC,aAAAxC,EAAAyC,KAAA,YACAC,EAAAxC,EAAAqC,EAAA,CACAI,cAAA,IAEAnC,EAAA,IAAAsB,EAAAY,EAAAlC,WACAD,KAAAqC,aAAApC,GACAD,KAAAsC,QAAAP,EAAAI,EAAAnD,MACAgB,KAAAuC,OAGAxC,EAAAF,UAAA2C,WAAA,SAAAT,GACA,IAAAC,EAAAtC,EAAAuC,aAAAxC,EAAAyC,KAAA,YACAvC,EAAAqC,EAAA,CACAI,cAAA,KAIArC,EAAAF,UAAA4C,WAAA,SAAAC,GACA,IAAAP,EAAAxC,EAAA+C,EAAA,CACAN,cAAA,IAEAnC,EAAA,IAAAsB,EAAAY,EAAAlC,WACAD,KAAAqC,aAAApC,GACAD,KAAAsC,QAAA,QAAAH,EAAAnD,OAGAe,EAAAF,UAAA8C,QAAA,SAAAzB,EAAAG,EAAAuB,GAEA,IAAAC,EAAA7C,KAAAO,MACAP,KAAAO,MAhDA,YAiDAP,KAAAQ,SAAA,EACA,IAGAsC,EAHAC,EAAA/C,KAAAU,SACAV,KAAAgD,UACAhD,KAAAU,UAAA,EAGA,IAEAoC,EADAzB,GAAAuB,EACA1B,EAAA+B,MAAA5B,EAAAuB,GAAA,IAEA1B,IAEG,MAAAxC,GACHsB,KAAAE,MAAAxB,EAAAkD,QACA5B,KAAAG,MAAAzB,EAAAyB,MAiBA,OAdAH,KAAAU,SAAAqC,EAIA,cAAAF,GACA7C,KAAAG,OACAH,KAAAkD,KAAA,QAAAlD,KAAAG,OAGAH,KAAAO,MAAAsC,GAEA7C,KAAAmD,cAGAL,GAGA/C,EAAAF,UAAA0C,IAAA,WACAvC,KAAA+B,KAAA,IACA/C,EAAAgB,KAAAhB,KACAzI,EAAA,CACAC,QAAA,IAIA4M,EAFA,IAAAC,SAAA,KACA,yDAAArE,EAAA,sBACAkC,CAAAlB,KACAzJ,IAAAC,QAAAuK,EAAAU,EAAA,CACAjC,IAAA,WACA,IAAAoD,EAAAU,MAAAzD,UAAArB,MAAA+E,KAAAC,WACAxD,KAAAmC,QAAAS,EAAAa,KAAA,WACKC,KAAA1D,QAELA,KAAAmC,OAAA,GACAnC,KAAA2C,QAAAS,GACApD,KAAA2D,SAAAP,GAGArD,EAAAF,UAAA+D,MAAA,WACA5D,KAAAmC,OAAA,GACAnC,KAAA2D,SAAA,KACA3D,KAAAO,MAAAX,EACAI,KAAAQ,SAAA,EACAR,KAAA+B,KAAA,GACA/B,KAAAhB,KAAA,GACAgB,KAAA6D,qBAAA,KACA7D,KAAA8D,uBAAA,EACA9D,KAAAG,MAAA,MAGAJ,EAAAF,UAAAkE,cAAA,SAAA/C,EAAAgD,EAAAC,GACA,IAAAC,EAAAlE,KAAAC,UAAAuB,KAAA2C,QAAAnD,GACAoD,EAAAF,EAAAG,QAAAL,GAEA,OAAAI,EAAAH,EAAAC,EAAAI,OACAtE,KAAAC,UAAAuB,KAAA2C,QAAAnD,GAAAoD,EAAAH,GAGA,MAGAlE,EAAAF,UAAA0E,SAAA,WACA,GAhIA,cAgIAvE,KAAAO,MAAA,CACAP,KAAAkD,KAAA,WACAlD,KAAAwE,eAAA,IACAC,EAAAzE,KAAA0E,cACA1E,KAAAQ,SAAA,EACAR,KAAAO,MApIA,YAsIAP,KAAAa,cAAA4D,EAAAzD,WAAAyD,EAAAtD,QAIAnB,KAAAU,UAAA,EACAV,KAAA2E,gBAAA,EACA3E,KAAA4E,SAAA,GAEA5E,KAAA2E,gBAAA,EACA3E,KAAAU,UAAA,GAGAV,KAAAQ,SAAA,EACAR,KAAAO,MAnJA,YAoJAP,KAAA4E,YAIA7E,EAAAF,UAAAgF,KAAA,WACA,GAAA7E,KAAAE,MAAA,CACAF,KAAAkD,KAAA,WAEA,IAAA4B,EAAA,WACA9E,KAAAQ,SAAA,EACAR,KAAAU,UAAA,EACAV,KAAA2E,gBAAA,EACA3E,KAAA4E,SAAA,GACA5E,KAAA2E,gBAAA,EACA3E,KAAAU,UAAA,GACGgD,KAAA1D,MAEH8E,IAIA,IAFA9E,KAAA0E,cAxKA,cA0KA1E,KAAAO,QAAAP,KAAA+E,eAGAD,IA7KA,cAgLA9E,KAAAO,QACAP,KAAAQ,SAAA,EACAR,KAAAkD,KAAA,aAIAnD,EAAAF,UAAAmF,SAAA,WACA,GAAAhF,KAAAgD,UAAA,CACA,IAAAyB,EAAAzE,KAAA0E,cACAO,EAAAjF,KAAA+E,cACAG,EAAAD,EACAE,EAAA,EACAjB,EAAAlE,KAAAC,UAAAuB,KAAAiD,EAAAzD,WAAAkD,KAiBA,GAdAhF,OAAAD,KAAAiF,GAAAkB,QAAA,SAAAC,GACA,IAAAC,EAAApB,EAAAmB,GAEA,GAAAC,EAAAC,MAAAC,MAAAP,EAAAM,MAAAC,MAAAF,EAAAG,IAAAD,MAAAP,EAAAQ,IAAAD,MAAAF,EAAAC,MAAAG,QAAAT,EAAAM,MAAAG,QAAAJ,EAAAG,IAAAC,QAAAT,EAAAQ,IAAAC,OAAA,CACA,IAAAC,EAAAV,EAAAM,MAAAC,KAAAF,EAAAC,MAAAC,MAAAF,EAAAG,IAAAD,KAAAP,EAAAQ,IAAAD,MACAI,EAAAX,EAAAM,MAAAG,OAAAJ,EAAAC,MAAAG,QAAAJ,EAAAG,IAAAC,OAAAT,EAAAQ,IAAAC,QAEAC,EAAAC,EAAAT,IACAD,EAAAI,EACAH,EAAAQ,EAAAC,MAKAV,IAAAD,EAAA,CACA,KAAAjF,KAAA+E,gBAAAG,GACAlF,KAAA6E,OAGA7E,KAAA6E,YAEA7E,KAAA6E,SAIA9E,EAAAF,UAAAgG,SAAA,SAAAC,GACA,UAAAA,EACA,OAAA9F,KAAAM,WAiBA,GAAAN,KAAAE,MAAA,CACA,IAAAuE,EAAAzE,KAAA0E,cACAoB,EAAAnG,EAAAmG,EAAA,CACAC,QAAA,EACA3E,MAAAqD,EAAArD,QACKpC,KACLgB,KAAAQ,SAAA,EACAR,KAAAK,WAAA,EACAL,KAAAU,UAAA,EACA+D,EAAAoB,SAAA7F,KAAA8F,GACA9F,KAAAU,UAAA,EACAV,KAAAK,WAAA,EACAL,KAAAQ,SAAA,MACG,KAAAR,KAAA2D,SAuBH,UAAA5E,MAAA,4BAtBA+G,EAAAnG,EAAAmG,EAAA,CACAC,QAAA,IACK/G,KACLgB,KAAAgG,QAAAF,EACA9F,KAAAU,UAAA,EACAV,KAAAiG,aAAA,CACA9E,MAAA,EACAZ,MAAA,IACK,WACLP,KAAAK,WAAA,EAEA,IACAL,KAAA2D,WACO,MAAAjF,GACP,GAAAA,EAAAyB,MACA,MAAAzB,EAAAyB,MAIAH,KAAAK,WAAA,GACKqD,KAAA1D,OAKL,OAAAA,KAAAM,YAGAP,EAAAF,UAAA+E,QAAA,SAAAsB,GACA,IACAlG,KAAAK,WAAA,EACAL,KAAAwE,eAAAI,UACA5E,KAAAG,WAAAC,EACG,MAAA1B,GACHsB,KAAAE,MAAAxB,EAAAkD,QACA5B,KAAAG,MAAAzB,EAAAyB,MAGAH,KAAAmD,YAAA+C,IAGAnG,EAAAF,UAAAsD,YAAA,SAAA+C,GACA,GAAAlG,KAAAE,MAAA,CACA,GAAAF,KAAA8D,sBAGA,OAFA9D,KAAA8D,uBAAA,OACA9D,KAAAmG,YAIA,GAAAnG,KAAA6D,qBAAA,CACA,IAAAjC,EAAA5B,KAAA6D,qBAGA,OAFA7D,KAAA6D,qBAAA,UACA7D,KAAAoG,SAAAxE,GAIA,GAAA5B,KAAAG,MAAA,CACA,GAAAH,KAAAqG,oBACA,OAGA,IAAAH,EAEA,MAAAlG,KAAAG,WAEK+F,GACLlG,KAAAkD,KAAA,UAGAlD,KAAAO,MA9TA,iBAgUA2F,GACAlG,KAAAkD,KAAA,UAGAlD,KAAAO,MAAAX,EAGAI,KAAAQ,SAAA,GAGAT,EAAAF,UAAAyG,iBAAA,SAAAd,GACA,IACAe,EADAvG,KAAAC,UACAuG,iBAAAhB,GAEAe,IACAvG,KAAA2E,gBAAA,EAEA3E,KAAAa,cAAA0F,EAAAvF,WAAAuF,EAAAE,OACAzG,KAAAa,cAAA0F,EAAAvF,WAAAuF,EAAAE,QAAA,EAEAzG,KAAAa,cAAA0F,EAAAvF,WAAAuF,EAAAE,QAAA,IAKA1G,EAAAF,UAAA6G,OAAA,WAEA,MADA1G,KAAA8D,uBAAA,EACA,IAAArC,GAGA1B,EAAAF,UAAAsG,UAAA,WACA,IAAAvE,EAAA5B,KAAAE,MAAAzJ,IAAA,SAAAkQ,GACA,OAAAA,IAEAlC,EAAA7C,EAAA,GACAN,EAAAmD,EAAAnD,MACAH,EAAAnB,KAAA+D,cAAAU,EAAAzD,UAAAyD,EAAAtD,KAAA,GACAsD,EAAAtD,KAAAnB,KAAA+D,cAAAU,EAAAzD,UAAAyD,EAAAtD,KAAA,GAEAsD,EAAAlE,MAAA,QAAAkE,EAAAnD,MAAA,aAAAsF,GACAnC,EAAAtD,OACAsD,EAAAlE,MAAA,OAAAe,GAAAsF,EAEA5G,KAAAQ,QACAR,KAAA6G,mBAAAjF,GAEA5B,KAAAoG,SAAAxE,IAEG8B,KAAA1D,MAEHA,KAAA4E,WAGA7E,EAAAF,UAAAgH,mBAAA,SAAAjF,GAEA,MADA5B,KAAA6D,qBAAAjC,EACA,IAAAH,GAGA1B,EAAAF,UAAAuG,SAAA,SAAAxE,GACA5B,KAAAE,MAAA0B,EAAAnL,IAAA,SAAAkQ,GACA,OAAAA,IAEA3G,KAAAkD,KAAA,gBAEAlD,KAAAU,WACAV,KAAAQ,SAAA,EACAR,KAAAO,MAjYA,YAkYAP,KAAA4E,YAIA7E,EAAAF,UAAAiH,YAAA,SAAA9F,EAAAyF,EAAAM,GACA,IAAAnI,EAAAoB,KAAAc,eAAAE,GAAAyF,GAAA7H,GACAoB,KAAAkD,KAAA,WACAtE,KACAoI,MAAAD,KAIAhH,EAAAF,UAAAoH,GAAA,SAAAC,EAAAC,GACA,IAAAC,EAAApH,KAAAS,QAAAyG,IAAA,GACAE,EAAAC,KAAAF,GACAnH,KAAAS,QAAAyG,GAAAE,GAGArH,EAAAF,UAAAyH,IAAA,SAAAJ,EAAAC,GACA,IAAAC,EAAApH,KAAAS,QAAAyG,IAAA,GAEA,GAAAC,EAAA,CACA,IAAAI,EAAAH,EAAA/C,QAAA8C,IAEA,IAAAI,GACAH,EAAAI,OAAAD,EAAA,QAGAvH,KAAAS,QAAAyG,GAAA,IAIAnH,EAAAF,UAAAqD,KAAA,SAAAgE,EAAA1F,GACAiG,WAAA,YACAzH,KAAAS,QAAAyG,IAAA,IACA9B,QAAA,SAAA+B,GACAA,EAAA3F,MAEGkC,KAAA1D,MAAA,IAGHD,EAAAF,UAAA6E,YAAA,WACA,OAAA1E,KAAAE,OAAAF,KAAAE,MAAA,IAGAH,EAAAF,UAAA2E,aAAA,WACA,OAAAxE,KAAAE,OAAAF,KAAAE,MAAAF,KAAAE,MAAAoE,OAAA,IAGAvE,EAAAF,UAAA6H,eAAA,SAAAH,GAMA,IAHA,IAAA9C,EAAAzE,KAAAgD,UACA2E,EAAA,EAEAlD,EAAAmD,OACAnD,IAAAmD,MACAD,IAGA,GAAAJ,EAAAI,EACA,YAGA,IAAAE,EAAAF,EAAAJ,EAIA,IAHA9C,EAAAzE,KAAAgD,UACA2E,EAAA,EAEAlD,EAAAmD,OAAAD,EAAAE,GACApD,IAAAmD,MACAD,IAGA,OAAAlD,GAGA1E,EAAAF,UAAAwC,aAAA,SAAAyF,GACA9H,KAAAC,UAAA6H,GAAA,IAAAvG,EAAA,IACA,IAAAwG,EAAAD,EAAAtG,KAAAuG,SACA/H,KAAAa,cAAA,IAAAyC,MAAAyE,EAAAzD,QACAtE,KAAAc,eAAA,IAAAwC,MAAAyE,EAAAzD,QAEA,QAAAiD,EAAA,EAAiBA,EAAAQ,EAAAzD,OAAqBiD,IACtCvH,KAAAa,cAAA0G,GAAA,GAGA,IAAAA,EAAA,EAAiBA,EAAAQ,EAAAzD,OAAqBiD,IACtCvH,KAAAc,eAAAyG,GAAA,IAIAxH,EAAAF,UAAAyC,QAAA,SAAAP,EAAA/C,GACAgB,KAAA+B,OACA/B,KAAAhB,QAGAe,EAAAF,UAAAmI,WAAA,WACA,OAAAhI,KAAAU,UAGAX,EAAAF,UAAAoI,UAAA,WACA,OAAAjI,KAAAmC,QAGApC,EAAAF,UAAAqI,SAAA,WACA,OAAAlI,KAAAO,OAGAR,EAAAF,UAAAkF,YAAA,WACA,GAAA/E,KAAAE,OAAAF,KAAAC,UAAA,CACA,IAAAwE,EAAAzE,KAAA0E,cACA,OAAA1E,KAAAC,UAAAuB,KAAAuG,SAAAtD,EAAAzD,WAAAkD,KAAAO,EAAAtD,QAGApB,EAAAF,UAAAsI,mBAAA,WACAnI,KAAA2E,gBAAA,GAGA5E,EAAAF,UAAAuI,kBAAA,WACApI,KAAA2E,gBAAA,GAGA5E,EAAAF,UAAAwI,UAAA,WACArI,KAAAW,WAAA0G,KAAA,CAAArH,KAAAU,SAAAV,KAAA2E,iBACA3E,KAAAU,UAAA,EACAV,KAAA2E,gBAAA,GAGA5E,EAAAF,UAAAyI,SAAA,WACA,IAAA/H,EAAAP,KAAAW,WAAA4H,MACAvI,KAAAU,SAAAH,EAAA,GACAP,KAAA2E,eAAApE,EAAA,IAGAR,EAAAF,UAAA2I,QAAA,SAAAtI,EAAAuI,EAAAC,EAAAC,GACAD,GACAxI,EAAAmH,KAAA,CACAqB,aACAC,mBAIAF,GACAvI,EAAAmH,KAAA,CACAoB,cAKA1I,EAAAF,UAAA+I,SAAA,SAAA1I,EAAAuI,GACA,IAAAI,EAAA3I,IAAAoE,OAAA,GAEAuE,KAAAJ,cACAvI,EAAAqI,OAIAxI,EAAAF,UAAAiJ,WAAA,SAAA5I,EAAAwI,GACA,IAAAG,EAAA3I,IAAAoE,OAAA,GAEAuE,KAAAH,aACAxI,EAAAqI,MACAM,EAAA3I,IAAAoE,OAAA,IAGAuE,KAAAH,gBACAxI,EAAAqI,OAIAxI,EAAAF,UAAAwG,kBAAA,WACA,SAAArG,KAAAG,MACA,SAGA,IAAA4I,EAAA/I,KAAAG,MACA6I,GAAA,EACAjG,EAAA/C,KAAAU,SACAV,KAAAU,UAAA,EAEA,QAAA6G,EAAA,EAAiBA,EAAAvH,KAAAE,MAAAoE,OAAuBiD,IAAA,CAGxC,GAFAvH,KAAAE,MAAAqH,GAEAlB,kBAAArG,KAAA+I,GAAA,CAEA/I,KAAAE,MAAAF,KAAAE,MAAA1B,MAAA+I,GACAyB,GAAA,EACA,OASA,OALAjG,GAAAiG,IACAhJ,KAAA4E,UACA5E,KAAAG,WAAAC,GAGA4I,GAGAjJ,EAAAF,UAAAZ,KAAA,SAAAgK,GACA,OAAA/J,OAAAD,KAAAgK,GAAAC,WAGAnJ,EAAAF,UAAAsJ,SAAA,WACA,IAAAC,EAAApJ,KAAAE,MAAAqI,MAOA,OALAvI,KAAAE,MAAAoE,SACAtE,KAAAK,WAAA,EACAL,KAAAE,MAAA,MAGAkJ,GAGArJ,EAAAF,UAAAwJ,UAAA,WACA,OAAArJ,KAAAE,OAAAF,KAAAE,MAAAoE,OACAtE,KAAAE,MAAAF,KAAAE,MAAAoE,OAAA,GAGA,MAGAvE,EAAAF,UAAAoG,aAAA,SAAAqD,EAAApI,GACA,IAAAqI,EAAAvJ,KAAAE,MACAF,KAAAE,MAAA,CAAAoJ,GAEA,IACA,IAAAE,GAEAA,EAAAtI,OAEAqI,EAAA,GAAAC,GAEG,QACHxJ,KAAAE,MAAAqJ,IAiBAxI,EAAAlB,UAAA+E,QAAA,WACA5E,KAAAkB,GAAAqC,KAAAvD,KAAAqB,UAGAN,EAAAlB,UAAAgG,SAAA,SAAA4D,EAAA3D,GAwBA,OAvBA2D,EAAAzD,QAAAF,EACA2D,EAAAtJ,WAAAC,EACAqJ,EAAA/I,UAAA,EACA+I,EAAAxD,aAAAjG,KAAA,WACA,IAAA0J,EAAA1J,KAAAmB,KACAnB,KAAAmB,MAAA,EAEA,IACAnB,KAAAkB,GAAAqC,KAAAvD,KAAAqB,SACK,MAAA3C,GACL,KAAAA,aAAA+C,GACA,MAAA/C,EACO,GAAAA,EAAAyB,MACP,MAAAzB,EAAAyB,MAGA,IAAAqJ,EAAA9K,EAAAkD,QAAA,GAEA,OADA4H,EAAArI,KAAAuI,EACAF,EAGA,UAAAzK,MAAA,kCACG2E,KAAA1D,OACHyJ,EAAAnJ,YAGAS,EAAAlB,UAAA8J,UAAA,SAAAC,GACA5J,KAAA4H,OACA5H,KAAA4H,MAAA+B,UAAAC,GAGAA,EAAA5J,OAGAe,EAAAlB,UAAAgK,SAAA,SAAAD,GACA,IAAA7C,EASA,OANAA,EADA/G,KAAA4H,MACA5H,KAAA4H,MAAAiC,SAAAD,GAEA,IAGAvC,KAAAuC,EAAA5J,OACA+G,GAGAhG,EAAAlB,UAAAiK,YAAA,SAAAF,EAAAG,GAKA,OAJA/J,KAAA4H,QACAmC,EAAA/J,KAAA4H,MAAAkC,YAAAF,EAAAG,IAGAH,EAAAG,EAAA/J,OAGAe,EAAAlB,UAAAkF,YAAA,SAAA0E,GACA,OAAAA,EAAAxJ,UAAAuB,KAAAxB,KAAAgB,WAAAkD,KAAAlE,KAAAmB,OAGAJ,EAAAlB,UAAAwG,kBAAA,SAAAoD,EAAAV,GACA,IAAA/I,KAAAY,SACA,SAQA,IALA,IAAAO,EACA6I,GAAA,EACAC,GAAA,EACAC,EAAA,GAEA3C,EAAAvH,KAAAY,SAAA0D,OAAA,EAAwCiD,GAAA,EAAQA,IAAA,CAChD,IAAAsB,EAAA7I,KAAAY,SAAA2G,GAEA,GAAAsB,EAAAJ,SAAA,CACAtH,EAAA0H,EAAAJ,SACAuB,GAAA,EACA,MACKnB,EAAAH,aACLwB,EAAA7C,KAAAwB,GACAoB,GAAA,GAMA,KAAApB,EAAAqB,EAAA3B,OACAvI,KAAAO,MAAA,OAAAsI,EAAAF,gBAAAxH,EACAA,EAAA0H,EAAAH,WAYA,OATA1I,KAAAmB,OAEA8I,IAAAD,GACAP,EAAAxD,aAAAjG,KAAA,WACAyJ,EAAApJ,WAAA,EACAL,KAAA4E,WACKlB,KAAA1D,OAGLgK,GAQAzI,EAAA1B,UAAA2G,iBAAA,SAAAhB,GACA,IAAAxF,KAAAwB,KAAA,YAKA,IAJA,IAAAuG,EAAA/H,KAAAwB,KAAAuG,SAIAR,EAAAQ,EAAAzD,OAAA,EAAmCiD,GAAA,EAAQA,IAI3C,IAHA,IAAArD,EAAA6D,EAAAR,GAAArD,KACAjF,EAAAC,OAAAD,KAAAiF,GAEAiG,EAAA,EAAAC,EAAAnL,EAAAqF,OAAwC6F,EAAAC,EAAWD,IAAA,CAGnD,GAFAjG,EAAAjF,EAAAkL,IAEA5E,MAAAC,SACA,OACAxE,UAAAuG,EACAd,MAAA4D,SAAApL,EAAAkL,KAMA,aAGA5I,EAAA1B,UAAAyK,kBAAA,SAAA/E,EAAAE,GACA,IAAAzF,KAAAwB,KAAA,YAEA,QAAA+F,EAAA,EAAAgD,EAAAvK,KAAAwB,KAAA8C,OAAuCiD,EAAAgD,EAAOhD,IAAA,CAC9C,IAAArD,EAAAlE,KAAAwB,KAAA+F,GAAArD,KACAjF,EAAAC,OAAAD,KAAAiF,IACAjF,IAAAxI,IAAA,SAAA4O,GACA,OAAAgF,SAAAhF,MAEAmF,KAAA,SAAAC,EAAAC,GACA,OAAAD,EAAAC,IAGA,QAAAP,EAAA,EAAAC,EAAAnL,EAAAqF,OAAwC6F,EAAAC,EAAWD,IAAA,CACnD,IAAA7E,EAAApB,EAAAjF,EAAAkL,IAEA,IAAA7E,EAAAC,MAAAC,KAAAD,EAAAC,MAAAF,EAAAC,MAAAC,OAAAD,EAAAC,MAAAF,EAAAC,MAAAG,QAAAH,EAAAoF,MAAArF,EAAAG,IAAAD,KAAAC,EAAAD,MAAAF,EAAAG,IAAAD,OAAAC,EAAAD,MAAAF,EAAAG,IAAAC,QAAAD,EAAAkF,IACA,OACA3J,UAAAuG,EACAd,MAAAxH,EAAAkL,KAMA,aAGA5I,EAAA1B,UAAA+K,SAAA,SAAArE,EAAAvE,GAEA,IAAApD,EAAA,IAAAiM,KAAAC,SAAA,EAMA,OALA9K,KAAA+K,QAAA1D,KAAA,CACAd,MACAvE,MACApD,OAEAA,GASA6C,EAAA5B,UAAAmL,UAAA,SAAA1B,GAEAtJ,KAAA4B,QAAAyF,KAAAiC,IAIA/S,EAAAC,QAAAyU,SAAAlL,EACAxJ,EAAAC,QAAA0U,OAAAnK,EACAxK,EAAAC,QAAA2U,WAAA5J,EACAhL,EAAAC,QAAA4U,iBAAA3J,wCCt0BA,IAAA4J,EAAAnM,OAAAW,UAAAC,eAEAtJ,EAAA8U,cAAA,SAAAC,GACA,IAAAC,EAAA,GAEAC,EAAA,EACAF,EAAAG,MAAA,MAAAtG,QAAA,SAAAI,GACA,IAAAmG,EAAA,OAAAC,KAAApG,GAAA,GAAAlB,OACAuH,EAAAhB,KAAAiB,IAAAH,EAAAF,GACAD,EAAAK,GAAA,IAAAL,EAAAK,GACAJ,EAAAE,IAKA,IAHA,IAAAI,GAAA,EACAC,EAAA,EAEAC,EAAA,EAAwBA,EAAAT,EAAAlH,OAA0B2H,GAAA,EAClDA,KAAAT,KAAAS,GAAAF,IACAA,EAAAP,EAAAS,GACAD,EAAAC,GAIA,OAAAD,GAGAxV,EAAA0V,SAAA,SAAAjD,GAIA,IAHA,IACAkD,EADA/B,EAAA5G,UAAAc,OAGAiD,EAAA,EAAiBA,EAAA6C,IAAS7C,EAC1B,GAAA4E,EAAA3I,UAAA+D,GACA,QAAA6E,KAAAD,EACAd,EAAA9H,KAAA4I,EAAAC,KAAAf,EAAA9H,KAAA0F,EAAAmD,KACAnD,EAAAmD,GAAAD,EAAAC,IAMA,OAAAnD,GAIAzS,EAAA6V,QAAA,SAAAC,EAAAhH,GAEA,OADAgH,EAAAhH,MACAgH,qDCtDA,IAAAC,MAAY9N,oBAAQ,KAEpB+N,SAAe/N,oBAAQ,KACvBgO,oBAAAD,SAAAC,oBACAC,kBAAAF,SAAAE,kBACAC,0BAAAH,SAAAG,0BACAC,gBAAAJ,SAAAI,gBACAC,eAAAL,SAAAK,eAEA,SAAAC,YAAAlI,SACA,IAAAmI,SACAC,KAAAC,UAAAxW,IAAA,SAAAyW,GACAA,EAAAC,aAAAvI,UAAAmI,SAAAG,KAEAE,aAAA3W,IAAA,SAAA2V,KACAiB,KAAA,GAAAC,OAAAlB,IAAAnL,KAAA,sCAAAqM,OAAAlB,IAAAnL,KAAA,yCAAAqM,OAAAlB,IAAAnL,KAAA,QAIA1K,OAAAC,QAAA,CACA+W,KAAA,SAAAA,KAAAC,WACA,IAAAxL,IAAcvD,oBAAQ,IAARA,CAAkB+O,UAAA,CAAAf,oBAAAG,kBAAA,GAAA5N,KAEhCyO,iBAAAlB,MAAAmB,UAAA1L,IAAA,CACA2L,QAAA,CAAAd,eAAAH,kBAAAC,6BAEA3N,KAAAyO,iBAAAzO,KAEAA,KAAA,qOAA8OA,KAE9O,IAAA4O,QAAkBnP,oBAAQ,KAE1BoP,aAAAD,QAAA5O,MAEA,IACAO,QAAAC,IAAA,2DACA6N,KAAAQ,cACAtO,QAAAC,IAAA,4DACK,MAAAd,GACLa,QAAAC,IAAAd,EAAA,mBAGAmI,mBAAA,SAAAA,mBAAAiH,MACAhB,YAAAgB,MAEA,IAEAvO,QAAAC,IAAA,qBAAA8N,OAAAQ,MAAA,oCACAT,KAAA,mCAAAC,OAAAQ,KAAA,kCAA6DR,OAAAQ,KAAA,oCAAiDR,OAAAQ,KAAA,eAC9GvO,QAAAC,IAAA,mBAAA8N,OAAAQ,MAAA,oCACAvO,QAAAC,IAAA,CAAAuO,cAAAf,OACK,MAAAtO,GACLa,QAAAC,IAAAd,EAAA,uCCpDA,SAAAsP,EAAA5P,GACA,IAAAM,EAAA,IAAAK,MAAA,uBAAAX,EAAA,KAEA,MADAM,EAAAM,KAAA,mBACAN,EAEAsP,EAAA/O,KAAA,WAAuC,UACvC+O,EAAAlP,QAAAkP,EACAzX,EAAAC,QAAAwX,EACAA,EAAApP,GAAA,uBCRA,SAAAoP,EAAA5P,GACA,IAAAM,EAAA,IAAAK,MAAA,uBAAAX,EAAA,KAEA,MADAM,EAAAM,KAAA,mBACAN,EAEAsP,EAAA/O,KAAA,WAAuC,UACvC+O,EAAAlP,QAAAkP,EACAzX,EAAAC,QAAAwX,EACAA,EAAApP,GAAA,0BCRA,SAAAqP,KAAAjB,KAAA,GACAA,KAAAC,UAAA,GACA1W,EAAAC,QAAA,CACA0X,gBAAA,SAAAd,GACAJ,KAAAI,gBAEAjO,aAAA,SAAAP,GASA,IARA,IAAAmO,EAAA,CACAoB,MAAA,EACAC,MAAA,EACAjB,YAAA,IAEAkB,EAAA,EACAC,EAAA1P,EAEAoO,KAAAC,UAAAsB,KAAA,SAAArB,GACA,OAAAA,EAAAC,aAAAvO,KAEAmO,EAAAqB,OACArB,EAAAqB,MAAA,GAGAxP,EAAA0P,KAAAD,EAGAtB,EAAAI,YAAAvO,EAEAmO,EAAAoB,OACApB,EAAAoB,MAAA,EACAnB,KAAAI,aAAA3W,IAAA,SAAA+X,GACAzB,EAAA,GAAAO,OAAAkB,EAAAvN,OAAAgN,EAAAO,EAAAvN,KAAAwN,cAEAzB,KAAAC,UAAA5F,KAAA0F,+CChCA,SAAA2B,GASA,IAAAC,EAAalQ,EAAQ,IAErBsD,EAAWtD,EAAQ,IAMnBiP,GAJYjP,EAAQ,IAEpBmQ,SAEgBnQ,EAAQ,KAAaiP,WAErCmB,EAAYpQ,EAAQ,KAEpBqQ,EAAarQ,EAAQ,KAErBsQ,EAAqBtQ,EAAQ,KAG7BuQ,EAAA,mBAGA,SAAAC,EAAA1D,EAAA2D,GAIA,IAAAC,KAHAD,EAAAL,EAAA3C,SAAAgD,GAAA,GAAwC,CACxCC,qBAAA,KAEAA,oBAEAA,IACAH,EAAAI,KAAA7D,KACA4D,GAAA,IAIA,IAAAE,EAAA,CACApD,SAAA4C,EAAAvD,cAAAC,GAGA+D,QAAAP,EACAQ,MAAAJ,EACA7J,KAAA,GAEAkK,EAAAV,EAAAW,MAAAlE,EAAA8D,GACAK,EAAAF,EAAAG,QAEA,GAAAR,EAAA,CACA,IAAAS,EAAqBnR,EAAQ,IAARA,CAAciR,EAAA,CACnCA,KAAA,EACAG,2BAAA,EACAC,oBAAA,EACAC,cAAA,EACAC,aAAA,SAGA,GAAAJ,EAAAK,OACA,UAAAlR,MAAA6Q,EAAAK,OAAAxM,KAAA,OAIA,IAAAyM,EAAAxC,EAAAgC,EAAAR,GACAM,EAAAG,QAAAO,EAAAR,IAGA,GAAAR,EAAA9M,aAAA,CACA,IAAA+N,EAAAX,EAAAG,QAAAQ,KACAA,EAAAC,QAAAnN,MAAAkN,EAAAD,EAAAG,UAGA,OACArR,KAAA8P,EAAAwB,MAAAd,EAAAH,GAAArQ,KAAA,KACAiB,UAAAiQ,EAAAjQ,WAlDA0O,EAAA4B,GAAA,UAAAnB,KAAAL,EAAAyB,SAAA,wBAAAzB,EAAAyB,SAuDAvB,EAAAvB,YACAuB,EAAAwB,QAAA,CACAC,IAAA3O,EAAA0B,KAAAiL,EAAA,mBACAiC,IAAA5O,EAAA0B,KAAAiL,EAAA,qBAGAnY,EAAAC,QAAAyY,qDC7EA,IAAAN,EAAalQ,EAAQ,IAErBmS,EAAYnS,EAAQ,IAEpBqQ,EAAarQ,EAAQ,KAGrBiM,GADAkG,EAAAC,aAAAvR,MACAsR,EAAAhC,UACAkC,EAAAF,EAAAG,WAEAC,EAAWvS,EAAQ,KAEnBwS,EAAWxS,EAAQ,KAInB4N,GAFAnN,OAAAW,UAAAC,eAEcrB,EAAQ,KAAQ4N,SAgB9B,IAdArN,EAcAkS,GAdAlS,EAcA,8DAbA,WAEA,IAAA0Q,EAAAhF,EAAAyG,eAAArC,EAAAW,MAAAzQ,GAAA2Q,QAAAQ,MACAvN,EAAAY,UACA,OAAAoN,EAAAQ,SAAA1B,EAAA,SAAApD,GACA,GAAAwE,EAAAO,WAAAC,MAAAhF,IAAA,MAAAA,EAAArL,KAAA,IACA,IAAAmD,EAAAiG,SAAAiC,EAAArL,KAAAzC,MAAA,IACA,OAAAwB,KAAAuR,QAAA3O,EAAAwB,EAAA,SAQA,SAAAoN,EAAAC,EAAAxR,GACA0O,EAAA4B,GAAAvQ,gBAAAwR,GACAxR,KAAA0R,MAAA,EACA1R,KAAA2R,SAAA,EACAzS,OAAA0S,iBAAA5R,KAAA,CAGA6R,QAAA,CACA7K,MAAA,IAIA8K,OAAA,CACA9K,MAAA,MAGA+K,gBAAA,CACA/K,MAAA,MAIA9B,SAAA,CACA8B,MAAA1B,KAEAmM,QAAA,CACAzK,MAAAyK,GAEAxR,UAAA,CACA+G,MAAA/G,KAMAf,OAAA0S,iBAAA5R,KAAA,CAIAgS,YAAA,CACAhL,MAAA,IAAAgK,EAAAiB,YAAAjS,SAKA,IAAAkS,EAAAV,EAAA3R,UAOA,SAAAyF,IACA,IAAA6M,EAAAzH,EAAA0H,SAAA,GAIA,OADAD,EAAAE,WAAA,EACAF,EA0PA,SAAAG,EAAAhG,GACA,WAAAvN,MAAA,sGAAAwT,KAAAC,UAAAlG,IAtQA9V,EAAAgb,UAgBAU,EAAAO,KAAA,SAAAnN,GACAwL,EAAA4B,QAAA/D,OAAArJ,GACA,IAAAqN,EAAA3S,KAAA6R,QAAAvN,OAGA,OAFAgB,EAAA0B,MAAA2L,EACA3S,KAAA8R,OAAAa,IAAA,EACArN,GAGA4M,EAAAU,YAAA,WAGA,IAFA,IAAAD,EAAA3S,KAAA6R,QAAAvN,OAEAqO,EAAA,IAAA3S,KAAA8R,OAAAa,IACAA,IAGA,OAAAA,GAGAT,EAAAW,aAAA,WACA,IAAA1R,EAAAmE,IACAtF,KAAA8S,WAAApI,EAAAqI,WAAA,WAAA5R,GACAnB,KAAAgT,KAAAtI,EAAAuI,eAAA,UACAjT,KAAAyS,KAAAtR,IAGA+Q,EAAAc,KAAA,SAAA1G,EAAA4G,GAQA,GAPApC,EAAAqC,WAAA7B,MAAAhF,KACAA,EAAAD,EAAA3B,EAAA0I,oBAAA9G,KAAAhH,MAGAwL,EAAAuC,UAAA1E,OAAArC,GACAtM,KAAA6R,QAAAxK,KAAAiF,IAEA4G,EAAA,CACA,IAAA5G,EAAAhH,IACA,UAAAvG,MAAA,4BAAAwT,KAAAC,UAAAlG,IAEAtM,KAAAC,UAAAqT,kBAAAtT,KAAAyR,QAAAnF,EAAAhH,IAAAtF,KAAA6R,QAAAvN,OAAA,KAOA4N,EAAAY,WAAA,SAAAS,EAAAC,EAAAlO,GAEA,OADAtF,KAAAgT,KAAAhT,KAAAyT,OAAAF,EAAAC,EAAAlO,OACAiO,GAIArB,EAAAuB,OAAA,SAAAF,EAAAC,EAAAlO,GACA,IAAAgH,EAAA5B,EAAA0I,oBAAA1I,EAAAgJ,qBAAA,IAAAH,EAAAC,IAEA,OADAlH,EAAAhH,MACAgH,GAGA4F,EAAAyB,WAAA,SAAA1S,EAAAsM,EAAAjI,GACA,OAAA+G,EAAA3B,EAAAkJ,oBAAA,OAAAlJ,EAAAmJ,mBAAAnJ,EAAAqI,WAAA9R,GAAAsM,KAAAjI,IAGA4M,EAAA4B,YAAA,SAAA7K,EAAA8K,EAAAC,EAAA1O,GACA,OAAA+G,EAAA3B,EAAAuJ,iBAAA,kBAAAhL,EAAAyB,EAAAqI,WAAA9J,KAAA,kBAAA8K,EAAArJ,EAAAqI,WAAAgB,OAAAC,GAAA1O,IAGA4M,EAAAgC,WAAA,SAAAjT,EAAAqE,GACA,IAAAgH,EAAA5B,EAAAuJ,iBAAAvJ,EAAAqI,WAAA,MAAArI,EAAAqI,WAAA9R,IAAA,GAEA,OADAqL,EAAAhH,MACAgH,GAGA4F,EAAAiC,sBAAA,SAAAC,EAAA9O,GACA,IAAA+O,EAAArU,KAAAkU,WAAA,SAEAE,GACApU,KAAA8S,WAAAsB,EAAAC,EAAA/O,GAGAtF,KAAA8S,WAAAuB,EAAA3J,EAAA0H,QAAA,QAKAF,EAAAoC,KAAA,SAAAC,GACAvU,KAAA8S,WAAApI,EAAAqI,WAAA,WAAAwB,GACAvU,KAAAgT,KAAAtI,EAAAuI,kBAAA,IAIAf,EAAAsC,OAAA,SAAApF,EAAAmF,EAAAE,GACA3D,EAAAqC,WAAAxE,OAAAS,GACA0B,EAAA4B,QAAA/D,OAAA4F,GACAvU,KAAAgT,KAAA3G,EAAA3B,EAAAgK,YAAAtF,EAAA1E,EAAAyG,eAAA,CAAAnR,KAAAyT,OAAA/I,EAAAqI,WAAA,WAAAwB,GAAA7J,EAAAuI,oBAAAwB,KAIAvC,EAAAyC,UAAA,SAAAvF,EAAAmF,EAAAE,GACA3D,EAAAqC,WAAAxE,OAAAS,GACA0B,EAAA4B,QAAA/D,OAAA4F,GACAvU,KAAAgT,KAAA3G,EAAA3B,EAAAgK,YAAAhK,EAAAkK,gBAAA,IAAAxF,GAAA1E,EAAAyG,eAAA,CAAAnR,KAAAyT,OAAA/I,EAAAqI,WAAA,WAAAwB,GAAA7J,EAAAuI,oBAAAwB,KAKAvC,EAAA2C,WAAA,WAOA,OANA7U,KAAA0R,QAEA1R,KAAA0R,MAAA1R,KAAA2R,WACA3R,KAAA2R,SAAA3R,KAAA0R,OAGAhH,EAAAqI,WAAA,OAAA/S,KAAA0R,QAGAQ,EAAA4C,cAAA,WACA,OAAA9U,KAAA0R,OAGAQ,EAAA6C,eAAA,WACA/U,KAAA0R,SAGAQ,EAAA8C,YAAA,WACA,OAAAhV,KAAA2R,UAGAO,EAAA+C,aAAA,SAAAC,GACA,IAAAC,EAAAnV,KAAA0R,MACA3K,EAAAmO,IAEA,OADAlV,KAAA0R,MAAAyD,EACApO,GAGAmL,EAAAkD,WAAA,SAAAC,EAAAC,GACA,OAAAtV,KAAAuV,gBAAAF,EAAAC,IAGApD,EAAAsD,kBAAA,WACA,IAAAC,EAAAzV,KACA0V,EAAA,GAGAD,EAAA5D,QAAAzM,QAAA,SAAAuQ,EAAApO,GACAkO,EAAA3D,OAAAhS,eAAAyH,IAAAkO,EAAA3D,OAAAhS,eAAAyH,EAAA,KAAAuJ,EAAA8E,gBAAAtE,MAAAmE,EAAA5D,QAAAtK,EAAA,KAAAuJ,EAAA+E,eAAAvE,MAAAmE,EAAA5D,QAAAtK,EAAA,MAAAuJ,EAAAgF,oBAAAxE,MAAAqE,IAAA7E,EAAAiF,qBAAAzE,MAAAqE,EAAAK,aAAAlF,EAAAmF,iBAAA3E,MAAAqE,EAAAK,WAAAE,OAAA,QAAAP,EAAAK,WAAAE,KAAAC,OAAAlV,MAAA,WAAA0U,EAAAK,WAAAE,KAAAE,SAAAnV,OACAyU,EAAAnO,GAAAoO,EAAAK,WAAAK,SAGAzF,EAAAQ,SAAAqE,EAAA5D,QAAA,SAAAvF,GACAwE,EAAA4B,QAAApB,MAAAhF,MAAA+F,WAAAqD,EAAA5V,eAAAwM,EAAAtF,QACAhH,KAAAuR,QAAAmE,EAAApJ,EAAAtF,WAgBAkL,EAAAqD,gBAAA,SAAAF,EAAAC,GACA,IAIAgB,EAJAb,EAAAzV,KAGAuW,GAAA,EAEAC,EAAA,GA8BA,OA3BAf,EAAAD,oBACAC,EAAA5D,QAAAzM,QAAA,SAAAuQ,EAAApO,GACAkO,EAAA3D,OAAAhS,eAAAyH,KACAiP,EAAAnP,KAAAqD,EAAA+L,WAAA/L,EAAA0H,QAAA7K,GAAA+O,EAAA,KACAC,GAAA,GAGAA,IACAD,EAAAjP,KAAAsO,GAyBA,SAAAA,GACA,OAAA7E,EAAA+E,eAAAvE,MAAAqE,IAAA7E,EAAA4F,kBAAApF,MAAAqE,IAAA7E,EAAA8E,gBAAAtE,MAAAqE,IAAA7E,EAAA6F,eAAArF,MAAAqE,GAzBAiB,CAAAjB,KAAAY,GAAA,MAKAvW,KAAAkF,SAAA8B,MAAAhH,KAAA6R,QAAAvN,OACAtE,KAAAC,UAAA4W,iBAAA7W,KAAAyR,QAAAzR,KAAAkF,SAAA8B,OACAhH,KAAAC,UAAA6W,WAAA9W,KAAAyR,QAAAzR,KAAA8R,OAAAiF,OAAA,SAAAhN,EAAAiN,EAAAzP,GAKA,OAJAyP,GACAjN,EAAA1C,KAAAE,GAGAwC,GACG,KAEHyM,EAAAnP,KAAApE,MAAAuT,EAAA,CAAA9L,EAAA+L,WAAA,SAAA/L,EAAA+L,WAAAzW,KAAAkF,SAAA,CAAAwF,EAAAuM,gBAAA,UAEAT,EAAAnP,KAAAqD,EAAA+L,WAAA/L,EAAA0H,SAAA,IAAAqD,EAAAhC,OAAAgC,EAAAvB,WAAA,cAAAxJ,EAAAwM,eAAAxM,EAAAqI,WAAA,SAAA0C,EAAAvB,WAAA,cAAAxJ,EAAAyM,eAAAzM,EAAA0M,cAAA1M,EAAAqI,WAAA,4BACA,CACArI,EAAA2M,eAAA3M,EAAA0H,QAAA,GAAA1H,EAAAyG,eAAA,CAAAzG,EAAAgK,YAAAhK,EAAA4M,kBAAA,KAAA7B,EAAAvB,WAAA,kBAAAxJ,EAAA6M,iBAAA,MAAA9B,EAAA3B,YAAA2B,EAAA3B,YAAA2B,EAAAvB,WAAA,iBAAAxJ,EAAA0H,QAAApS,KAAAyR,UAAA,GAAA/G,EAAAqI,WAAA,eACArI,EAAAqI,WAAA,eAAArI,EAAAyM,eAAAzM,EAAA0M,cAAA1M,EAAAqI,WAAA,0BAAArI,EAAA8M,gBAAA9M,EAAAqI,WAAA,WAAAyD,GAAA9L,EAAAgK,YAAAe,EAAAvB,WAAA,YAAAxJ,EAAAyM,eAAAzM,EAAA0M,cAAA1M,EAAAqI,WAAA,+BAeAb,EAAAuF,QAAA,SAAA1V,EAAA2V,GACA/I,EAAA4B,GAAAxO,aAAA6O,EAAA+G,UACA,IAAArL,EAAAvK,EAAAiF,MAGA,GADA8J,EAAA8G,KAAAjJ,OAAArC,GACAwE,EAAAuC,UAAA/B,MAAAhF,GAAA,OAFAtM,KAEA6X,iBAAA9V,GACA,GAAA+O,EAAAqC,WAAA7B,MAAAhF,GAAA,OAHAtM,KAGA8X,kBAAA/V,EAAA2V,GACA,GAAA5G,EAAAiH,YAAAzG,MAAAhF,GAAA,MAAAgG,EAAAhG,GAEA,OAAAA,EAAA0L,MACA,cACA,OAAAjW,EAAAkW,IAAA,QAAAxhB,IARAuJ,KAQA6X,iBARA7X,MAUA,yBACA,MAAAsS,EAAAhG,GAIA,eACA,iBACA,kBACA,UAAAvN,MAAAuN,EAAA0L,KAAA,6CAEA,QACA,UAAAjZ,MAAA,wBAAAwT,KAAAC,UAAAlG,EAAA0L,SAQA9F,EAAA2F,iBAAA,SAAA9V,EAAAmW,GACAvJ,EAAA4B,GAAAxO,aAAA6O,EAAA+G,UACA,IAAAhC,EAAA5T,EAAAiF,MACAyO,EAAAzV,KAWA,GAVA8Q,EAAAuC,UAAA1E,OAAAgH,GAEAuC,EACApH,EAAAO,WAAA1C,OAAAuJ,GAEAA,EAAA,KAKApH,EAAAqH,eAAA7G,MAAAqE,GACA,OAAA5T,EAAAkW,IAAA,QAAAG,KAAA3C,EAAAoC,iBAAApC,GAYA,OAAAE,EAAAqC,MACA,0BACAvC,EAAAqC,kBAAA/V,EAAAkW,IAAA,kBACA,MAEA,uBACAxC,EAAAoC,iBAAA9V,EAAAkW,IAAA,QAAAtC,EAAA0C,OACA,MAEA,qBACA,IAAAC,EAAAhT,IACAiT,EAAAjT,IACAmQ,EAAAhD,KAAA6F,GACA7C,EAAAd,UAAAc,EAAAqC,kBAAA/V,EAAAkW,IAAA,SAAAM,EAAAxW,EAAAkW,IAAA,QAAA3L,KAAAhH,KACAmQ,EAAA5C,eACA4C,EAAAzD,YAAAwG,UAAA,IAAAxH,EAAAyH,UAAAF,EAAAD,EAAAJ,GAAA,WACAzC,EAAAoC,iBAAA9V,EAAAkW,IAAA,WAEAxC,EAAAnB,KAAAgE,GACA7C,EAAAhD,KAAA8F,GACA,MAEA,uBACA,IAAAG,EAAApT,IACA8J,EAAA9J,IACAiT,EAAAjT,IACAmQ,EAAAhD,KAAAiG,GACAjD,EAAAzD,YAAAwG,UAAA,IAAAxH,EAAAyH,UAAAF,EAAAnJ,EAAA8I,GAAA,WACAzC,EAAAgC,QAAA1V,EAAAkW,IAAA,WAEAxC,EAAAhD,KAAArD,GACAqG,EAAAjB,OAAAiB,EAAAqC,kBAAA/V,EAAAkW,IAAA,SAAAS,EAAA3W,EAAAkW,IAAA,QAAA3L,KAAAhH,KACAmQ,EAAA3C,WAAApI,EAAAqI,WAAA,WAAAwF,GACA9C,EAAAzC,KAAAtI,EAAAuI,kBAAA,GACAwC,EAAAhD,KAAA8F,GACA,MAEA,mBACA,IAAAI,EAAArT,IACAsT,EAAAtT,IACAiT,EAAAjT,IAEAqQ,EAAApI,MAGAkI,EAAAgC,QAAA1V,EAAAkW,IAAA,YAGAxC,EAAAhD,KAAAkG,GAEAhD,EAAAvG,MACAqG,EAAAd,UAAAc,EAAAqC,kBAAA/V,EAAAkW,IAAA,SAAAM,EAAAxW,EAAAkW,IAAA,QAAA3L,KAAAhH,KAIAtF,KAAA6S,eACA4C,EAAAzD,YAAAwG,UAAA,IAAAxH,EAAAyH,UAAAF,EAAAK,EAAAV,GAAA,WACAzC,EAAAoC,iBAAA9V,EAAAkW,IAAA,WAEAxC,EAAAhD,KAAAmG,GAEAjD,EAAAiD,QAGAnD,EAAAgC,QAAA1V,EAAAkW,IAAA,cAGAxC,EAAAnB,KAAAqE,GACAlD,EAAAhD,KAAA8F,GACA,MAEA,qBACAzH,EAAAO,WAAA1C,OAAAgH,EAAAO,MACAyC,EAAArT,IACAiT,EAAAjT,IADA,IAEArG,EAAAwW,EAAA3C,WAAA2C,EAAAZ,aAAAnK,EAAAwM,eAAAzB,EAAAvB,WAAA,SAAAuB,EAAAqC,kBAAA/V,EAAAkW,IAAA,YAAAlW,EAAAkW,IAAA,SAAA3L,KAAAhH,KACAuT,EAAAvT,IACAmQ,EAAAhD,KAAAoG,GACApD,EAAAhD,KAAAkG,GACAlD,EAAAd,UAAAjK,EAAAuJ,iBAAAhV,EAAAyL,EAAAqI,WAAA,cAAAwF,EAAA5C,EAAAU,MAAA/Q,KACAmQ,EAAA3C,WAAA6C,EAAAO,KAAAxL,EAAAwM,eAAAxM,EAAAuJ,iBAAAhV,EAAAyL,EAAAqI,WAAA,eAAA4C,EAAAO,KAAA5Q,KACAmQ,EAAA5C,eACA4C,EAAAzD,YAAAwG,UAAA,IAAAxH,EAAAyH,UAAAF,EAAAI,EAAAT,GAAA,WACAzC,EAAAoC,iBAAA9V,EAAAkW,IAAA,WAEAxC,EAAAnB,KAAAqE,GACAlD,EAAAhD,KAAA8F,GACA9C,EAAAV,iBACA,MAEA,qBACAU,EAAAzD,YAAA8G,UAAAnD,EAAA0C,OACA,MAEA,wBACA5C,EAAAzD,YAAA+G,aAAApD,EAAA0C,OACA,MAEA,sBAWA,IARA,IAAAW,EAAAvD,EAAA3C,WAAA2C,EAAAZ,aAAAY,EAAAqC,kBAAA/V,EAAAkW,IAAA,kBAEAgB,GADAV,EAAAjT,IACAA,KACA4T,EAAAD,EACAE,EAAA,GAEA3C,EAAAb,EAAAa,OAAA,GAEAjP,EAAAiP,EAAAlS,OAAA,EAAoCiD,GAAA,IAAQA,EAAA,CAC5C,IAAA6R,EAAA5C,EAAAjP,GACAuJ,EAAAuI,WAAA1K,OAAAyK,GAEAA,EAAAhK,KACA8J,EAAAxO,EAAA4O,sBAAA5O,EAAA6M,iBAAA,MAAAyB,EAAAI,EAAAhK,MAAA+J,EAAA5R,GAAAjC,IAAA4T,GAEAC,EAAA5R,GAAA0R,EAIAxD,EAAAnB,KAAAmB,EAAAqC,kBAAA,IAAAlH,EAAA+G,SAAAuB,EAAAnX,EAAA,kBACA0T,EAAAzD,YAAAwG,UAAA,IAAAxH,EAAAuI,YAAAhB,GAAA,WACAxW,EAAAkW,IAAA,SAAAG,KAAA,SAAAoB,GACAA,EAAAxS,MAAA,IACAO,EAAAiS,EAAAvY,KACAwU,EAAAhD,KAAA0G,EAAA5R,IACAiS,EAAAvB,IAAA,cAAAG,KAAA3C,EAAAoC,iBAAApC,OAGAA,EAAAV,iBACAU,EAAAhD,KAAA8F,IAEA,IAAAU,EAAAjS,QACAyO,EAAAhD,KAAAwG,GACAtK,EAAA8K,YAAAlB,EAAAvR,MAAAiS,EAAAjS,QAGA,MAEA,kBACA,IAAA0S,EAAA/D,EAAAgE,WAAArU,IACAiT,EAAAjT,IACAmQ,EAAAd,UAAAc,EAAAqC,kBAAA/V,EAAAkW,IAAA,SAAAyB,GAAAnB,EAAAxW,EAAAkW,IAAA,QAAA3L,KAAAhH,KACAmQ,EAAA5C,eACA4C,EAAAoC,iBAAA9V,EAAAkW,IAAA,eAEAyB,IACAjE,EAAAnB,KAAAiE,GACA9C,EAAAhD,KAAAiH,GACAjE,EAAAoC,iBAAA9V,EAAAkW,IAAA,eAGAxC,EAAAhD,KAAA8F,GACA,MAEA,sBACA,IAAA3R,EAAA7E,EAAAkW,IAAA,YACA2B,EAAAnE,EAAAZ,aACA0D,EAAAjT,IACAmQ,EAAA3C,WAAApI,EAAAqI,WAAA,WAAAwF,EAAA3R,EAAA0F,KAAAhH,KACAmQ,EAAA3C,WAAA8G,EAAA5Z,KAAA8X,kBAAAlR,IAIA6O,EAAAhD,KAAA8F,GACA9C,EAAAV,iBACAU,EAAAzC,KAAA3G,EAAA3B,EAAAuM,gBAAA2C,GAAA7X,EAAAuK,KAAAhH,MACA,MAEA,oBACA,UAAAvG,MAAAuN,KAAA0L,KAAA,0CAEA,mBACAO,EAAAjT,IAAA,IACA6B,EAAAwO,EAAAxO,SAEAA,GAAAwO,EAAAkE,WACA1S,EAAAwO,EAAAkE,SAAA,UAGA,IAAApR,EAAAtB,GAAA7B,IACAwU,EAAArR,GAAA,IAAAuI,EAAA+I,WAAAtR,EAAAtB,EAAA6S,OACAtR,EAAAiN,EAAAsE,WAAA3U,IACA4U,EAAAxR,GAAA,IAAAsI,EAAAmJ,aAAAzR,EAAA+M,EAAAZ,cAEAqF,GAIAzE,EAAA3C,WAAAoH,EAAAE,eAAA7B,EAAAxW,EAAAuK,KAAAhH,KAGA,IAAA+U,EAAA,IAAArJ,EAAAsJ,SAAAR,EAAAI,GAGAzE,EAAAjN,QAAA6R,EAAAtY,EAAAuK,KAAAhH,KACAmQ,EAAA5C,eACA4C,EAAAzD,YAAAwG,UAAA6B,EAAA,WAGA,GAFA5E,EAAAoC,iBAAA9V,EAAAkW,IAAA,UAEAxP,EAAA,CAGAgN,EAAA7M,SAAAkR,EAAA3S,EAAA7B,KAEAoD,EAIA+M,EAAAnB,KAAA5L,GAIA+M,EAAAnB,KAAAiE,GAGA9C,EAAAhD,KAAAhK,GAIAgN,EAAA7M,SAAAkR,EAAA3S,EAAA7B,KAEA,IAAAiV,EAAAxY,EAAAkW,IAAA,kBACAuC,EAAA/E,EAAAZ,aACAY,EAAAtB,sBAAAqG,EAAArT,EAAA7B,KACAmQ,EAAA5C,eACA,IAAA4H,EAAAF,EAAAnZ,MACAsZ,EAAAvT,EAAA6S,MAAA/Y,KACA6P,EAAA6J,YAAAhM,OAAA8L,EAAAnO,MACAqC,EAAA8K,YAAAgB,EAAAG,OAAAF,GAAAD,GACA7J,EAAAQ,SAAAmJ,EAAA,SAAAjO,GACA,GAAAwE,EAAAO,WAAAC,MAAAhF,MAAArL,OAAAyZ,GAAA1a,KAAAoB,MAAAwZ,OAAAF,KAAAD,EAEA,OADAza,KAAAuR,QAAAiJ,IACA,IAGA/E,EAAAzD,YAAAwG,UAAAsB,EAAA,WACArE,EAAAoC,iBAAA0C,KAEA9E,EAAAV,iBAGArM,IACA+M,EAAAhD,KAAA/J,GACA+M,EAAA3M,WAAAoR,EAAAvE,EAAAsE,UAAA3U,KACAmQ,EAAA5C,eACA4C,EAAAzD,YAAAwG,UAAA0B,EAAA,WACAzE,EAAAoC,iBAAA9V,EAAAkW,IAAA,gBAEAxC,EAAAnB,KAAA4F,EAAAE,gBACA3E,EAAAV,oBAGAU,EAAAhD,KAAA8F,GACA,MAEA,qBACA9C,EAAAzC,KAAA3G,EAAA3B,EAAAyM,eAAA1B,EAAAqC,kBAAA/V,EAAAkW,IAAA,cAAAlW,EAAAuK,KAAAhH,MACA,MAEA,wBACAiT,EAAAjT,IACAmQ,EAAAzC,KAAA9B,EAAAxG,EAAA0H,QAAApS,KAAAyR,SAAA8G,IAAA,GACA9C,EAAA3C,WAAApI,EAAAqI,WAAA,WAAAwF,GACA9C,EAAAzC,KAAAtI,EAAAuI,kBAAA,GACAwC,EAAAhD,KAAA8F,GACAA,EAAAjT,IACAmQ,EAAA3C,WAAApI,EAAAqI,WAAA,WAAAwF,EAAAxW,EAAAuK,KAAAhH,KACAmQ,EAAAzC,KAAAtI,EAAAuI,kBAAA,GACAwC,EAAAhD,KAAA8F,GACA,MAEA,QACA,UAAAxZ,MAAA,6BAAAwT,KAAAC,UAAAmD,EAAAqC,SAMA9F,EAAA1J,QAAA,SAAA6R,EAAA/U,GACAqJ,EAAA4B,GAAA8J,aAAArJ,EAAAsJ,UACA,IAAAO,EAAAnQ,EAAA0H,QAAA,MACA0H,EAAAO,EAAAP,WACAI,EAAAG,EAAAH,aACAY,EAAA9a,KAAAkU,WAAA,WACAtR,EAAA,CAAA8H,EAAAqI,WAAA,YAAA+G,KAAAiB,UAAAF,EAAAX,KAAAa,UAAAF,EAAAX,GAAAxP,EAAA0H,QAAA/H,SAAA6P,EAAAE,eAAAnZ,KAAAsQ,QAAA,cAAAsJ,GACA7a,KAAAgT,KAAA3G,EAAA3B,EAAAwM,eAAA4D,EAAAlY,GAAA0C,KAKA4M,EAAAtJ,SAAA,SAAAkR,EAAAxU,GACA,IAAAmD,EAEAqR,GACAnL,EAAA4B,GAAAuJ,aAAA9I,EAAA+I,YACAtR,EAAAqR,EAAAiB,WAEApM,EAAA8K,YAAAK,EAAA,MACArR,EAAAiC,EAAA0H,QAAA,OAKApS,KAAAgT,KAAA3G,EAAA3B,EAAAwM,eAAAlX,KAAAkU,WAAA,aAAAxJ,EAAAqI,WAAA,YAAAtK,IAAAnD,KAMA4M,EAAApJ,WAAA,SAAAoR,EAAA5U,GACA,IAAAoD,EAEAwR,GACAvL,EAAA4B,GAAA2J,aAAAlJ,EAAAmJ,cACAzR,EAAAwR,EAAAa,WAEApM,EAAA8K,YAAAS,EAAA,MACAxR,EAAAgC,EAAA0H,QAAA,OAMApS,KAAAgT,KAAA3G,EAAA3B,EAAAwM,eAAAlX,KAAAkU,WAAA,eAAAxJ,EAAAqI,WAAA,YAAArK,IAAApD,KAGA4M,EAAA4F,kBAAA,SAAA/V,EAAA2V,GACA/I,EAAA4B,GAAAxO,aAAA6O,EAAA+G,UACA,IAAA7R,EAAA/D,EAAAiF,MAEA,IAAAlB,EAGA,OAAAA,EAFAgL,EAAAqC,WAAAxE,OAAA7I,GAKA,IACAkG,EADAyJ,EAAAzV,KAGA,SAAAgb,EAAAlV,GAGA,GAFAgL,EAAAqC,WAAAxE,OAAA7I,IAEA4R,EAOA,OAAA5R,EANA,IAAAyS,EAAAjT,IACAmQ,EAAAzC,KAAAlN,GACA2P,EAAA3C,WAAApI,EAAAqI,WAAA,WAAAwF,GACA9C,EAAAzC,KAAAtI,EAAAuI,kBAAA,GACAwC,EAAAhD,KAAA8F,GAeAtH,EAAAgK,aAAAC,aAAApV,GAUA,SAAAqV,EAAAC,EAAAC,EAAAC,EAAAC,GAIA,GAHA5M,EAAA4B,GAAA8K,aAAAzK,EAAA+G,UACAhJ,EAAA4B,IAAA+K,IAAAF,EAAA,oGAvbAtV,EAybAuV,EAAA/O,KAxbAwE,EAAA4B,QAAApB,MAAAxL,IAAAgL,EAAAO,WAAAC,MAAAxL,IAAAgL,EAAA0K,eAAAlK,MAAAxL,IAAAgL,EAAAmF,iBAAA3E,MAAAxL,OAAAkO,SA2bA,OAAAyB,EAAAqC,kBAAAuD,EAAAC,GACK,IAAAA,EAAA,CACL,IAAAG,GAAAL,IAAAG,EACAH,KAAA3F,EAAAZ,aACA,IAAA7I,EAAAyJ,EAAAqC,kBAAAuD,EAAAC,GAEAtP,EAAAyJ,EAAA3C,WAAAsI,EAAApP,EAAAqP,EAAA/O,KAAAhH,KACAmQ,EAAA5C,eAEA4I,GACAhG,EAAAV,iBAtcA,IAAAjP,EA0cA,OAAAkG,EAMA,OAAAlG,EAAAkS,MACA,uBACA,OAAAgD,EAAA3O,EAAA3B,EAAAuJ,iBAAAwB,EAAAqC,kBAAA/V,EAAAkW,IAAA,WAAAnS,EAAAkO,SAAAmH,EAAA,KAAApZ,EAAAkW,IAAA,mBAAAnS,EAAAsQ,SAAAtQ,EAAAkO,UAAAjS,EAAAuK,KAAAhH,MAEA,qBACA,IAAAoW,EAAA3Z,EAAAkW,IAAA,UACA0D,EAAA5Z,EAAAkW,IAAA,aAEA,eAAAyD,EAAApP,KAAA0L,MAAA,WAAA0D,EAAApP,KAAArL,OACA0a,EAAA,KAAA/K,EAAA+G,SAAAtL,EAAA3B,EAAAwM,eAAAxM,EAAAuJ,iBAAAvJ,EAAAqI,WAAA,MAAArI,EAAAqI,WAAA,kBAAA2I,EAAApP,KAAAhH,OACAoW,EAAA3Z,EAAAkW,IAAA,aAAAA,IAAA,IAGA,IAAA2D,EAAAnG,EAAAqC,kBAAA4D,GAeA,OAdAjG,EAAAR,aAAA,WACA,IAAAsD,EAAAjT,IACA1C,EAAA+Y,EAAAllB,IAAA,SAAAolB,GACA,OAAAV,EAAA,KAAAU,GAAA,QAEAjC,EAAAnE,EAAAZ,aACAiH,EAAAF,EAMA,OALAnG,EAAA3C,WAAApI,EAAAqI,WAAA,WAAAwF,EAAAxW,EAAAuK,KAAAhH,KACAmQ,EAAA3C,WAAApI,EAAAqI,WAAA,YAAArI,EAAA0H,QAAAqD,EAAAX,kBACAW,EAAA3C,WAAA8G,EAAAlP,EAAAwM,eAAA4E,EAAAlZ,IACA6S,EAAAzC,KAAAtI,EAAAuI,kBAAA,GACAwC,EAAAhD,KAAA8F,GACAqB,IAIA,oBAGA,OAAAnE,EAAAR,aAAA,WACA,OAAA+F,EAAAtQ,EAAA0M,cAAA+D,EAAA,KAAApZ,EAAAkW,IAAA,iBAAAlW,EAAAkW,IAAA,aAAAxhB,IAAA,SAAAolB,GACA,OAAAV,EAAA,KAAAU,GAAA,YAIA,uBACA,OAAApG,EAAAR,aAAA,WACA,OAAA+F,EAAAtQ,EAAAqR,iBAAAha,EAAAkW,IAAA,cAAAxhB,IAAA,SAAAulB,GACA,OAAAtR,EAAA0L,SAAA4F,EAAAhV,MAAAiV,KAAAD,EAAAhV,MAAAoF,IAAA+O,EAAA,KAAAa,EAAA/D,IAAA,uBAIA,sBACA,OAAAxC,EAAAR,aAAA,WACA,OAAA+F,EAAAtQ,EAAAwR,gBAAAna,EAAAkW,IAAA,YAAAxhB,IAAA,SAAA0lB,GACA,OAAAhB,EAAA,KAAAgB,GAAA,YAIA,yBACA,IAAAC,EAAAtW,EAAAuW,YAAA/X,OAAA,EAQA,OAPAvC,EAAAkW,IAAA,eAAAG,KAAA,SAAAkE,GACAA,EAAArb,OAAAmb,EACApQ,EAAAyJ,EAAAqC,kBAAAwE,EAAA5E,GAEAjC,EAAAqC,kBAAAwE,GAAA,KAGAtQ,EAEA,wBACA,IAAAuM,EAAAjT,IAiBA,OAhBAmQ,EAAAR,aAAA,WACAyC,IACA1L,EAAAyJ,EAAAZ,cAGA,IAAAqB,EAAAiF,EAAAnP,EAAAjK,EAAAkW,IAAA,eAEA,OAAAnS,EAAAyW,SACA9G,EAAAd,UAAAuB,EAAAqC,EAAAxW,EAAAkW,IAAA,QAAA3L,KAAAhH,KACS,OAAAQ,EAAAyW,UACT9G,EAAAjB,OAAA0B,EAAAqC,EAAAxW,EAAAkW,IAAA,QAAA3L,KAAAhH,KAGA6V,EAAAnP,EAAAjK,EAAAkW,IAAA,SAAAP,GAAA,GACAjC,EAAAhD,KAAA8F,KAEAvM,EAEA,4BACA,IAAA0N,EAAApU,IAEA8J,GADAmJ,EAAAjT,IACAmQ,EAAAqC,kBAAA/V,EAAAkW,IAAA,UAiBA,OAhBAxC,EAAAd,UAAAvF,EAAAsK,EAAA3X,EAAAkW,IAAA,QAAA3L,KAAAhH,KAEAoS,IACA1L,EAAAyJ,EAAAZ,cAGAsG,EAAAnP,EAAAjK,EAAAkW,IAAA,cAAAP,GACAjC,EAAAnB,KAAAiE,GACA9C,EAAAhD,KAAAiH,GACAyB,EAAAnP,EAAAjK,EAAAkW,IAAA,aAAAP,GACAjC,EAAAhD,KAAA8F,GAEAb,GACAjC,EAAAV,iBAGA/I,EAEA,sBACA,OAAAgP,EAAA3O,EAAA3B,EAAAkK,gBAAA9O,EAAAyW,SAEA9G,EAAAqC,kBAAA/V,EAAAkW,IAAA,eAAAnS,EAAA0W,QAAAza,EAAAuK,KAAAhH,MAEA,uBACA,OAAAmQ,EAAAR,aAAA,WACA,OAAA+F,EAAA3O,EAAA3B,EAAA6M,iBAAAzR,EAAAyW,SAAApB,EAAA,KAAApZ,EAAAkW,IAAA,eAAAkD,EAAA,KAAApZ,EAAAkW,IAAA,iBAAAlW,EAAAuK,KAAAhH,QAGA,2BACA,OAAA0V,EAAA3O,EAAA3B,EAAAgJ,qBAAA5N,EAAAyW,SAAA9G,EAAAqC,kBAAA/V,EAAAkW,IAAA,SAAAxC,EAAAqC,kBAAA/V,EAAAkW,IAAA,WAAAlW,EAAAuK,KAAAhH,MAEA,uBACA,OAAA0V,EAAA3O,EAAA3B,EAAA+R,iBAAA3W,EAAAyW,SAAA9G,EAAAqC,kBAAA/V,EAAAkW,IAAA,aAAAnS,EAAA0W,QAAAza,EAAAuK,KAAAhH,MAqBA,iBACA,yBACA,8BACA,qBACA,cACA,OAAA0V,EAAAlV,GAGA,QACA,UAAA/G,MAAA,8BAAAwT,KAAAC,UAAA1M,EAAAkS,yQCh5BA/J,EAAOyO,SAAWC,EAAQ,MAC1B1O,EAAO2O,GAAKD,EAAQ,UAEdE,cA4BJ,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAA7d,OAAA8d,EAAA,EAAA9d,CAAAc,KAAA6c,IAChBE,EAAA7d,OAAA+d,EAAA,EAAA/d,CAAAc,KAAAd,OAAAge,EAAA,EAAAhe,CAAA2d,GAAAtZ,KAAAvD,KAAM8c,KA5BRvc,MAAQ,CACN4c,KAAM,CACJ,CACElc,KAAM,mBACNmc,MAAOC,KAET,CACEpc,KAAM,qBACNmc,MAAOE,KAET,CACErc,KAAM,sBACNmc,MAAOG,MAGXC,YAAa,GACbvQ,UAAW,GACXG,aAAc,GACdpO,KAAM,mCACNye,WAAW,EACXC,UAAU,EACVC,UAAU,EACVC,eAAgB,GAChBC,gBAAiB,GACjBC,kBAAmB,IAGHf,EAMlBgB,WAAa,SAAAC,GACK,iBAANA,EACRjB,EAAKkB,SAAS,CACZjf,KAAMgf,IAGRjB,EAAKkB,SAAS,CACZjf,KAAMgf,EAAGE,cAbGnB,EAkBlBoB,gBAAkB,SAAAH,GAChB,IAAIpf,EAAKof,EAAGI,cAAcC,aAAa,MAEvC9e,QAAQC,IAAIwe,EAAGI,eACfE,MAAK,aAAAhR,OAAc1O,IAEnBqP,EAAOjB,KAAKC,UAAUxW,IAAI,SAAA8nB,GACrBA,EAAGpR,aAAe6Q,EAAGI,cAAcC,aAAa,OACjDtB,EAAKkB,SAAS,CACZJ,gBAAiBU,EACjBT,kBAAmBE,EAAGI,cAAcC,aAAa,UAMvD9e,QAAQC,IAAIud,EAAKxc,MAAMud,oBAlCPf,EAqClByB,UAAY,SAAAR,GACV,GAAIjB,EAAKxc,MAAMkd,UAOba,MAAM,sEAPiB,CACvB,IAAIG,EAAU1B,EAAKxc,MAAM4c,KAAK5O,KAC5B,SAAAmQ,GAAC,OAAIA,EAAEzd,OAAS+c,EAAGI,cAAcO,WAAWN,aAAa,UAE3DtB,EAAKgB,WAAWU,EAAQrB,OACxBL,EAAK6B,eAAeZ,KA3CNjB,EAiDlB6B,eAAiB,SAAAZ,GACXjB,EAAKxc,MAAMod,SACbZ,EAAKxc,MAAMqd,eAAeiB,UAAUC,OAAO,YAE3C/B,EAAKkB,SAAS,CACZN,UAAU,IAGdK,EAAGI,cAAcS,UAAUE,IAAI,YAC/BhC,EAAKkB,SAAS,CACZL,eAAgBI,EAAGI,iBA3DLrB,EA+DlBiC,gBAAkB,SAAA/R,GAChB8P,EAAKkB,SAAS,CACZhR,eAjEc8P,EAqElBkC,mBAAqB,SAAA7R,GACnB2P,EAAKkB,SAAS,CACZ7Q,kBAvEc2P,EA2ElBmC,gBAAkB,WAChBnC,EAAKkB,SAAS,CACZR,WAAYV,EAAKxc,MAAMkd,UACvBC,UAAWX,EAAKxc,MAAMmd,YA9ERX,EAkFlBoC,YAAc,WACZ,IACEpC,EAAKmC,kBACLE,IAAiB7R,KAAKwP,EAAKxc,MAAMvB,MACjC+d,EAAKkC,mBAAmBhR,EAAOjB,KAAKI,cACpC2P,EAAKiC,gBAAgB/Q,EAAOjB,KAAKC,WACjC,MAAO9M,GACPZ,QAAQY,MAAMA,KAzFA4c,EA6FlBlW,mBAAqB,SAACmX,GACpBjB,EAAKsC,YAAY/I,QAAQ/V,MAAM+e,KAAO,GAEtCF,IAAiBvY,mBAAmBkW,EAAKxc,MAAMud,oBAhG/Bf,EAmGlBwC,cAAgB,WACdxC,EAAKsC,YAAY/I,QAAQ/V,MAAM+e,KAAO,GACtCvC,EAAKyC,OAAOlJ,QAAQkJ,OAAOC,UAAU,YAAY,GACjDxR,EAAOjB,KAAO,CACZI,aAAc,GACdH,UAAW,IAEbgB,EAAOF,cAAgB,GACvBE,EAAOyR,gBAAkB,EACzB3C,EAAKmC,kBACLnC,EAAKkB,SAAS,CACZhR,UAAW,GACXG,aAAc,MA7GhB2P,EAAKsC,YAAcM,sBACnB5C,EAAKyC,OAASG,sBAHE5C,wEAoHhB,IAAI7N,EAAU,CACZ0Q,MAAO,MACPC,QAAS,EACTC,OAAQ,UACRC,KAAM,KACNC,aAAa,EACbtC,SAAU1d,KAAKO,MAAMmd,UAEvB,OACEuC,EAAAxV,EAAAyV,cAACC,EAAA,EAAD,KACEF,EAAAxV,EAAAyV,cAACE,EAAA,EAAD,CACEjD,KAAMnd,KAAKO,MAAM4c,KACjBqB,UAAWxe,KAAKwe,UAChBW,YAAanf,KAAKmf,YAClBI,cAAevf,KAAKuf,cACpB9B,UAAWzd,KAAKO,MAAMkd,YAExBwC,EAAAxV,EAAAyV,cAAA,OAAKG,UAAU,wBACbJ,EAAAxV,EAAAyV,cAAA,OAAKG,UAAU,cACbJ,EAAAxV,EAAAyV,cAAA,OAAKG,UAAU,oBACbJ,EAAAxV,EAAAyV,cAACI,EAAA7V,EAAD,CACE8V,IAAKvgB,KAAKwf,OACVxY,MAAOhH,KAAKO,MAAMvB,KAClBkQ,QAASA,EACTsR,SAAUxgB,KAAK+d,cAGnBkC,EAAAxV,EAAAyV,cAACO,EAAA,EAAD,CACEF,IAAKvgB,KAAKqf,eAGdY,EAAAxV,EAAAyV,cAAA,OAAKG,UAAU,eACbJ,EAAAxV,EAAAyV,cAACQ,EAAA,EAAD,CACE7C,gBAAiB7d,KAAKO,MAAMsd,gBAC5B5Q,UAAWjN,KAAKO,MAAM0M,UACtBG,aAAcpN,KAAKO,MAAM6M,aACzBvG,mBAAoB7G,KAAK6G,mBACzBsX,gBAAiBne,KAAKme,4BArLlBwC,aA8LH9D,2DCrNf,IAAA+D,EAAAniB,EAAA,GAAAoiB,EAAApiB,EAAAqS,EAAA8P,GAUeE,IARA,SAAChE,GACZ,OACI+D,EAAApW,EAAAyV,cAAA,OAAKG,UAAU,oBACVvD,EAAMiE,2HCFbC,6MACJzgB,MAAQ,CACN+e,KAAM,uFAGY,IAAA2B,EAAAjhB,KAClBkhB,eAAKC,OAAO5hB,QAAS,SAAAC,GACnByhB,EAAKhD,SAAS,SAAAmD,GAAA,IAAG9B,EAAH8B,EAAG9B,KAAH,MAAe,CAAEA,KAAI,GAAAhS,OAAApO,OAAAmiB,EAAA,EAAAniB,CAAMogB,GAAN,CAAYgC,iBAAO9hB,2CAKxD,OACE+hB,EAAA9W,EAAAyV,cAAA,OAAKG,UAAU,wBAAwBmB,MAAO,CAAEC,gBAAiB,YAC/DF,EAAA9W,EAAAyV,cAAA,MAAIG,UAAU,iBAAd,YACAkB,EAAA9W,EAAAyV,cAAA,WACEqB,EAAA9W,EAAAyV,cAACwB,EAAA,QAAD,CACEpC,KAAMtf,KAAKO,MAAM+e,KACjBqC,QAAQ,kBAlBWhB,aA0BhBK,0KCFTY,6MACJrhB,MAAQ,CACNsd,gBAAiB,4EAGV,IAAAoD,EAAAjhB,KACD6hB,EAAWlF,EAAQ,MACjBmF,EAAY9hB,KAAK8c,MAAjBgF,QACFjE,EAAkB7d,KAAK8c,MAAMe,gBACnC,OACE0D,EAAA9W,EAAAyV,cAAA,WACmC,IAAhClgB,KAAK8c,MAAM7P,UAAU3I,OACpBid,EAAA9W,EAAAyV,cAAA,OAAKG,UAAU,oBACbkB,EAAA9W,EAAAyV,cAAA,OAAKG,UAAU,qBACbkB,EAAA9W,EAAAyV,cAAA,OACEsB,MAAO,CACLO,QAAS,OACTC,eAAgB,kBAGlBT,EAAA9W,EAAAyV,cAAA,MACEsB,MAAO,CACLO,QAAS,WAFb,eAOAR,EAAA9W,EAAAyV,cAAA,OACEsB,MAAO,CACLO,QAAS,WAGXR,EAAA9W,EAAAyV,cAAC+B,EAAA,EAAD,CACEN,QAAQ,YACRO,MAAM,YACNC,KAAK,QACL9B,UAAWyB,EAAQM,OACnBC,QAASriB,KAAK8c,MAAMjW,oBALtB,SAQE0a,EAAA9W,EAAAyV,cAACoC,EAAA7X,EAAD,CAAM4V,UAAWyB,EAAQS,WAAzB,yBAMNhB,EAAA9W,EAAAyV,cAAA,WACClgB,KAAK8c,MAAM7P,UAAUxW,IAAI,SAAAsW,GACxB,OACEwU,EAAA9W,EAAAyV,cAAC+B,EAAA,EAAD,CACEnU,KAAMf,EAASI,YACfvO,GAAImO,EAASI,YACbf,IAAKW,EAASI,YACdwU,QAAQ,YACRO,MAAM,UACNC,KAAK,QACL9B,UAAWyB,EAAQM,OAInBC,QAASpB,EAAKnE,MAAMqB,iBAXtB,aAaapR,EAASI,gBAK5BoU,EAAA9W,EAAAyV,cAAA,OAAKG,UAAU,oBACbkB,EAAA9W,EAAAyV,cAAA,+BACAqB,EAAA9W,EAAAyV,cAAA,WACClgB,KAAK8c,MAAM1P,aAAa3W,IAAI,SAAA+rB,GAAc,IAAAC,EACzC,OACElB,EAAA9W,EAAAyV,cAAA,OAAK9T,IAAKoW,EAAWvhB,MACnBsgB,EAAA9W,EAAAyV,cAAC+B,EAAA,GAADQ,EAAA,CACE7jB,GAAG,gBACHyZ,MAAOmK,EAAWvhB,MAFpB/B,OAAAwjB,EAAA,EAAAxjB,CAAAujB,EAAA,cAAAnV,OAGekV,EAAWvhB,OAH1B/B,OAAAwjB,EAAA,EAAAxjB,CAAAujB,EAAA,SAOS,UAPTvjB,OAAAwjB,EAAA,EAAAxjB,CAAAujB,EAAA,QAQS,CACLE,OAAQ,QATZF,IAYC5E,EAAgB2E,EAAWvhB,WAOtCsgB,EAAA9W,EAAAyV,cAAA,OAAKG,UAAU,sBACbkB,EAAA9W,EAAAyV,cAAC0C,EAAAnY,EAAD,CAAec,OAAQsW,EAAUgB,YAAY,aA7FpClC,aAyGNmC,yBA5HA,SAAAlD,GAAK,MAAK,CACvBwC,OAAQ,CACNO,OAAQ/C,EAAMmD,QAAQC,MAGxBC,eAAgB,CACZxB,gBAAiByB,OAKrBX,UAAW,CACTY,WAAYvD,EAAMmD,QAAQC,QAgHfF,CAAmBlB,qCCpInBwB,EAAA,iYCAAA,EAAA,yjBCAAA,EAAA,ucCUAC,EARH,SAACvG,GACT,OACIwG,EAAA7Y,EAAAyV,cAAA,OAAKG,UAAU,gBAAgBgC,QAASvF,EAAM0B,WAC1C8E,EAAA7Y,EAAAyV,cAAA,MAAIjf,KAAM6b,EAAM7b,MAAQ6b,EAAM7b,QCiBpCsiB,mLACM,IAAAxG,EAAA/c,KACI8hB,EAAY9hB,KAAK8c,MAAjBgF,QACR,OACIwB,EAAA7Y,EAAAyV,cAAA,OAAKG,UAAU,cACXiD,EAAA7Y,EAAAyV,cAAA,OAAKG,UAAU,kBAEPrgB,KAAK8c,MAAMK,KAAK1mB,IAAI,SAAC+sB,GACjB,OACAF,EAAA7Y,EAAAyV,cAACuD,EAAD,CACIrX,IAAKoX,EAAIviB,KACTA,KAAMuiB,EAAIviB,KACVmc,MAAOoG,EAAIpG,MACXoB,UAAWzB,EAAKD,MAAM0B,eAMtC8E,EAAA7Y,EAAAyV,cAAA,sBAEKlgB,KAAK8c,MAAMW,UAMZ6F,EAAA7Y,EAAAyV,cAACwD,EAAAjZ,EAAD,CAAQkX,QAAQ,YAAYO,MAAM,UAAU7B,UAAWyB,EAAQM,OAAQC,QAASriB,KAAK8c,MAAMyC,eAA3F,QAEI+D,EAAA7Y,EAAAyV,cAACyD,EAAAlZ,EAAD,CAAM4V,UAAWyB,EAAQS,WAAzB,SANJe,EAAA7Y,EAAAyV,cAACwD,EAAAjZ,EAAD,CAAQkX,QAAQ,YAAYO,MAAM,UAAU7B,UAAWyB,EAAQM,OAAQC,QAASriB,KAAK8c,MAAMqC,aAA3F,OAEImE,EAAA7Y,EAAAyV,cAACyD,EAAAlZ,EAAD,CAAM4V,UAAWyB,EAAQS,WAAzB,+BAzBA5B,aAyCTmC,yBAxDA,SAAAlD,GAAK,MAAK,CACrBwC,OAAQ,CACNO,OAAQ/C,EAAMmD,QAAQC,MAExBY,SAAU,CACRC,YAAajE,EAAMmD,QAAQC,MAE7BT,UAAW,CACTY,WAAYvD,EAAMmD,QAAQC,MAE5Bc,UAAW,CACTC,SAAU,MA6CDjB,CAAmBS,2EC/DlC9kB,EAAA2K,EAAAga,GAAA,IAAAxC,EAAAniB,EAAA,GAAAoiB,EAAApiB,EAAAqS,EAAA8P,GAAAoD,EAAAvlB,EAAA,IAAAwlB,EAAAxlB,EAAAqS,EAAAkT,GAAAE,GAAAzlB,EAAA,KAAAA,EAAA,MAKA0lB,IAASC,OAAOvD,EAAApW,EAAAyV,cAACgE,EAAA,EAAD,MAASG,SAASC,eAAe,2ECLjD,SAAArW,GAAA,IAAAsW,EAAmB9lB,EAAQ,KAE3B+lB,EAAwB/lB,EAAQ,KAEhCgmB,EAAwBhmB,EAAQ,KAEhCimB,EAAiCjmB,EAAQ,KAEzCkmB,EAAgClmB,EAAQ,KAExCmmB,EAAyBnmB,EAAQ,KAEjComB,EAAiCpmB,EAAQ,KAEzCqmB,EAAsBrmB,EAAQ,KAE9BsmB,EAAkBtmB,EAAQ,KAE1BumB,EAAqBvmB,EAAQ,KAG7ByP,EADezP,EAAQ,KACvByP,gBAEAD,EAAAb,aAAA,GACA,IAAA6X,EAAA,CACAC,QAAA,SAAAnjB,GACAqL,aAAA,GACArL,EAAAqP,SAAAmT,GACAxiB,EAAAqP,SAAAoT,GACAziB,EAAAqP,SAAAqT,GACA1iB,EAAAqP,SAAA2T,GACA7W,EAAAd,gBAGA7W,EAAAC,QAAA,CACAiW,oBAAA,WACA,OACA0Y,QAAAF,IAGAvY,kBAAA,WACA,OACAyY,QAAAT,IAGA/X,0BAAA,WACA,OACAwY,QAAAR,IAGAS,mBAAA,WACA,OACAD,QAAAP,IAGAS,2BAAA,WACA,OACAF,QAAAN,IAGAjY,gBAAA,WACA,OACAuY,QAAAL,IAGAjY,eAAA,WACA,OACAsY,QAAAH,6CCnEQvmB,EAAQ,GAEhBlI,EAAAC,QAAA,CACA8uB,eAAA,SAAAvjB,GACAA,EAAAuK,KAAAwP,OAAA1F,UAAA,SAAArU,EAAAuK,KAAAwP,OAAA1F,SAAAnV,MACAc,EAAAuK,KAAA9I,UAAA,GAAA+hB,SAAA9uB,IAAA,SAAAyW,GACAE,aAAA/F,KAAA,CACApG,KAAAiM,EAAAlG,MACAgR,KAAA,kCCRAzhB,EAAAC,QAAA,CACAgvB,mBAAA,SAAAzjB,GACA,IAAAmU,EAAAnU,EAAAuK,KAAA1N,GAAAqC,KACAoV,EAAAtU,EAAAuK,KAAAiB,KAEA,MAAA8I,IAEA,cAAAA,EAAA2B,MACA5K,aAAAqY,KAAA,SAAAjD,GACA,OAAAA,EAAAvhB,MAAAiV,KACSA,GAAAG,EAAApV,OAAAmM,aAAAqY,KAAA,SAAAjD,GACT,OAAAA,EAAAvhB,MAAAoV,EAAApV,QAEAmM,aAAA/F,KAAA,CACApG,KAAAoV,EAAApV,KACA+W,KAAA,WAMA,oBAAA3B,EAAA2B,MAAA,kBAAA3B,EAAA2B,MACAjW,EAAAqP,SAAA,CACAC,WAAA,SAAAtP,GACAqL,aAAAqY,KAAA,SAAAjD,GACA,OAAAA,EAAAvhB,MAAAiV,KACaA,GAAAnU,EAAAuK,KAAArL,OAAAmM,aAAAqY,KAAA,SAAAjD,GACb,OAAAA,EAAAvhB,MAAAc,EAAAuK,KAAArL,QAEAmM,aAAA/F,KAAA,CACApG,KAAAc,EAAAuK,KAAArL,KACA+W,KAAA,oCC/BAzhB,EAAAC,QAAA,CACAuf,qBAAA,SAAAhU,GACA,IAAAmU,EAAAnU,EAAAuK,KAAA4J,KAAAjV,KACAoV,EAAAtU,EAAAuK,KAAA+J,MAAApV,UAEAb,GAAAiW,GACAjJ,aAAAqY,KAAA,SAAAjD,GACA,OAAAA,EAAAvhB,MAAAiV,KACOA,GAAAG,IAAAjJ,aAAAqY,KAAA,SAAAjD,GACP,OAAAA,EAAAvhB,MAAAoV,KAEAjJ,aAAA/F,KAAA,CACApG,KAAAoV,EACA2B,KAAA,WAMA,oBAAAjW,EAAAuK,KAAA+J,MAAA2B,MAAA,kBAAAjW,EAAAuK,KAAA+J,MAAA2B,MACAjW,EAAAqP,SAAA,CACAC,WAAA,SAAAtP,GACAqL,aAAAqY,KAAA,SAAAjD,GACA,OAAAA,EAAAvhB,MAAAiV,KACWA,GAAAnU,EAAAuK,KAAArL,OAAAmM,aAAAqY,KAAA,SAAAjD,GACX,OAAAA,EAAAvhB,MAAAc,EAAAuK,KAAArL,QAEAmM,aAAA/F,KAAA,CACApG,KAAAc,EAAAuK,KAAArL,KACA+W,KAAA,qCC7BA,IAAAnZ,EAAQJ,EAAQ,GAEhBlI,EAAAC,QAAA,CACA0uB,QAAA,SAAAnjB,GAEAA,EAAAuK,KAAA6D,KAAAC,QAAAvR,EAAAuU,oBAAAvU,EAAA6U,qBAAA,IAAA7U,EAAAkU,WAAA,iBAAAlU,EAAAkd,iBAAA,OAIAha,EAAAuK,KAAA6D,KAAAC,QAAAvR,EAAA6mB,oBAAA7mB,EAAAkU,WAAA,yBAAAlU,EAAAsS,eAAA,CAAAtS,EAAAoY,gBAAApY,EAAAqY,eAAArY,EAAAkU,WAAA,WAAAlU,EAAA8mB,wBAAA,CAAA9mB,EAAAkU,WAAA,SAAAlU,EAAAkU,WAAA,oDCTA,SAAA9E,GAAA,IAAApP,EAAQJ,EAAQ,GAEhBwP,EAAAyR,gBAAA,EACAnpB,EAAAC,QAAA,CAEAyf,iBAAA,SAAAlU,GACA,GAAAA,EAAAuK,KAAA6J,QAAApU,EAAAuK,KAAA8J,UAAA,YAAArU,EAAAuK,KAAA6J,OAAAlV,MAAA,mBAAAc,EAAAuK,KAAA8J,SAAAnV,KAAA,CACA,IAAA2kB,EAAA7jB,EAAA8jB,WAAA,SAAA9jB,GACA,OAAAA,EAAA+jB,qBAEAC,GAAA,EAGA,IAFAC,OAAAjkB,EAAAkkB,QAAAC,WAEAF,QAGA,GAFAA,cAAAC,QAAAC,WAEAF,SACA,gBAAAA,OAAA1Z,KAAA0L,MAAA,oBAAAgO,OAAA1Z,KAAA0L,MAAA,kBAAAgO,OAAA1Z,KAAA0L,MAAA,CACA+N,GAAA,EACA,MAKAA,EACAH,EAAAO,YAAAtnB,EAAAuU,oBAAAvU,EAAAqY,eAAArY,EAAAkU,WAAA,YAAAlU,EAAAkU,WAAA,OAAA6S,EAAAQ,UAAApQ,WAAAxS,UAAA,GAAAwD,OAAAnI,EAAAkU,WAAA,iBAAAlU,EAAAwnB,cAAA,OAAAT,EAAAQ,UAAApQ,WAAAxS,UAAA,GAAAwD,WAEA4e,EAAAO,YAAAtnB,EAAAuU,oBAAAvU,EAAA6U,qBAAA,IAAA7U,EAAAoV,iBAAApV,EAAAkU,WAAA,iBAAAlU,EAAAkU,WAAA,OAAA6S,EAAAQ,UAAApQ,WAAAxS,UAAA,GAAAwD,QAAAnI,EAAAkU,WAAA,OAAA6S,EAAAQ,UAAApQ,WAAAxS,UAAA,GAAAwD,UAGA4e,EAAAO,YAAAtnB,EAAA+U,oBAAA,OAAA/U,EAAAgV,mBAAAhV,EAAAkU,WAAA,OAAA6S,EAAAQ,UAAApQ,WAAAxS,UAAA,GAAAwD,OAAAnI,EAAAqY,eAAArY,EAAAkU,WAAA,8BACA2M,6DC/BA,IAAA7gB,EAAQJ,EAAQ,GA8BhBlI,EAAAC,QAAA,CACAyf,iBAAA,SAAAlU,GACA,GAAAA,EAAAuK,KAAA8J,UAAArU,EAAAuK,KAAA8J,SAAAnV,MAAA,OAAA2D,SAAA,wBAAA7C,EAAAqkB,UAAApO,KAAA,CACA,IAAAsO,EAAAvkB,EAAA8jB,WAAA,SAAA9jB,GACA,OAAAA,EAAAwkB,2BAEArnB,OAAAD,KAAA+N,KAAAC,UAAArI,UAAAQ,QAAA,SAAAgH,GACAY,KAAAC,UAAArI,SAAAwH,IACAka,EAAAH,YAAAtnB,EAAAuU,oBAAAvU,EAAA6U,qBAAA,IAAA7U,EAAAkU,WAAA3G,GAlCA,SAAAA,GACA,cAAAY,KAAAC,UAAArI,SAAAwH,IACA,aACA,OAAAvN,EAAA2nB,eAAAxZ,KAAAC,UAAArI,SAAAwH,IAEA,aACA,OAAAvN,EAAAwnB,cAAArZ,KAAAC,UAAArI,SAAAwH,IAEA,cACA,OAAAvN,EAAA4nB,eAAAzZ,KAAAC,UAAArI,SAAAwH,KAyBAsa,CAAAta,gCCtCA,IAAAvN,EAAQJ,EAAQ,GAEhBlI,EAAAC,QAAA,CAEA0uB,QAAA,SAAAnjB,GACAA,EAAAuK,KAAA6D,KAAAC,QAAAvR,EAAAuU,oBAAAvU,EAAAqY,eAAArY,EAAAoV,iBAAApV,EAAAkU,WAAA,iBAAAlU,EAAAkU,WAAA,OAAAzF,OAAA1I,WAAA,6BCLA,IAAA/F,EAAQJ,EAAQ,GAEhB0iB,OAAAwF,YAAA,SAAAzZ,GACA,OAAAA,KAAA8I,YAAA9I,EAAA8I,WAAA8F,QAAA5O,EAAA8I,WAAA8F,OAAA3F,QAAAjJ,EAAA8I,WAAA8F,OAAA1F,UAAA,YAAAlJ,EAAA8I,WAAA8F,OAAA3F,OAAAlV,MAAA,mBAAAiM,EAAA8I,WAAA8F,OAAA1F,SAAAnV,MAGA,IAAA2lB,EAAA/nB,EAAA+nB,YAAA/nB,EAAAkU,WAAA,KAAAlU,EAAAsS,eAAA,CAAAtS,EAAAuU,oBAAAvU,EAAAqY,eAAArY,EAAAoV,iBAAApV,EAAAkU,WAAA,WAAAlU,EAAAkU,WAAA,SAAAlU,EAAAkU,WAAA,WACAxc,EAAAC,QAAA,CACAqwB,yBAAA,CACAC,KAAA,SAAA/kB,GAIA,IAHA,IAAAglB,EAAAhlB,EAAAuK,KAAA6D,KACA6W,EAAA,GAEAzf,EAAA,EAAqBA,EAAAwf,EAAAziB,SAAkBiD,GACvCof,YAAAI,EAAAxf,KAAA1I,EAAAooB,cAAAF,EAAAxf,KAAA1I,EAAAqoB,mBAAAH,EAAAxf,KAAA1I,EAAAsoB,eAAAJ,EAAAxf,KAAA1I,EAAAuoB,iBAAAL,EAAAxf,KAAA1I,EAAAwoB,eAAAN,EAAAxf,MACAyf,EAAA3f,KAAAE,GAIA,IAAA+f,EAAA,GACAC,EAAA,GAEA,MAAAP,EAAA1iB,SAAAzF,EAAA2oB,UAAAzlB,KAAAlD,EAAAsoB,eAAAplB,EAAA0lB,uBAAA,CACA,QAAAC,EAAAV,EAAA1iB,OAAA,EAA6CojB,IAAA,IAAUA,EAAA,CACvDH,EAAAD,EACAA,EAAA,GACA,IAAAK,EAAA,GACA,GAAAD,IAAAC,EAAAX,EAAAU,GAAA,GACA,IAAAE,EAAAb,EAAAziB,OACAojB,EAAAV,EAAA1iB,OAAA,IAAAsjB,EAAAZ,EAAAU,EAAA,KACA,GAAAA,GAAAJ,EAAAjgB,KAAA0f,EAAAC,EAAAU,KACAJ,EAAAjgB,KAAAxI,EAAAgpB,aAAAhpB,EAAAsS,eAAA4V,EAAAvoB,MAAAmpB,EAAAC,GAAAta,OAAAia,GAAA,IAAAX,EAAA,OAKA,QAAA7kB,EAAAkW,IAAA,QAAA3T,QACAvC,EAAAkW,IAAA,WAAA6G,SAGA,QAAAgJ,EAAA,EAAyBA,EAAAR,EAAAhjB,SAAuBwjB,EAChD/lB,EAAAgmB,cAAA,OAAAT,EAAAQ,2BCzCAvxB,EAAAC,QAAA,CACAwxB,+CAAA,SAAAjmB,GACA,IAAAqN,EAAArN,EAAAkW,IAAA,QAEA,uBAAA7I,EAAA4I,MAAA,kBAAA5I,EAAA4I,KAAA,CACA,IAAAiQ,GAAA,EACAlmB,EAAAqP,SAAA,CACA0E,oBAAA,SAAA/T,GACA4kB,YAAA5kB,EAAAuK,QAAA2b,GAAA,MAIAA,GACA7Y,EAAAgC,SAAA,CACAC,WAAA,SAAAtP,GACAqL,aAAAqY,KAAA,SAAAjD,GACA,OAAAA,EAAAvhB,MAAAc,EAAAuK,KAAArL,QAEAmM,aAAA/F,KAAA,CACApG,KAAAc,EAAAuK,KAAArL,KACA+W,KAAA,oCCpBA,IAAAnZ,EAAQJ,EAAQ,GAEhBlI,EAAAC,QAAA,CACA0xB,YAAA,SAAAnmB,GACA,qBAAAA,EAAAuK,KAAA6b,WAAAnQ,KAAA,CACA,IAAA+O,EAAAloB,EAAAsS,eAAA,CAAApP,EAAAuK,KAAA6b,YAAA,IACApmB,EAAAuK,KAAA6b,WAAApB,2BCNA,SAAArY,GAAA,IAAAhP,EAASjB,EAAQ,IAEjB8N,EAAY9N,EAAQ,KAEpBlI,EAAAC,QAAA,SAAA4xB,EAAAC,EAAAC,GACA,IAQAtmB,GANAsmB,EACAF,EAEA1oB,EAAAuC,aAAAyM,EAAA,6BAGAD,WAKAzP,EAHAuN,EAAAmB,UAAA1L,EAAA,CACA2L,QAAA0a,IAEArpB,KAEA,OACAoO,0BACApO,+CCtBAzI,EAAAC,QAAA,SAAAgX,GAYA,MADA,uIAViB/O,EAAQ,IAOzBkB,CALclB,EAAQ,KAEtBmP,QAAAJ,EAAA,CACA+a,SAAA,IACGvpB,KACH,CACAoD,cAAA,IAEmKpD,KAAA,kOCFtJP,EAAQ,IAArB,IAEAmS,EAAYnS,EAAQ,IAEpBqS,EAAAF,EAAAG,WACArG,EAAAkG,EAAAhC,SAEA4Z,EAAY/pB,EAAQ,KAAS+pB,MAE7BhX,EAAc/S,EAAQ,KAAQ+S,QAE9BjQ,EAAgB9C,EAAQ,KAAS8C,UAEjCknB,EAAahqB,EAAQ,KAErB4N,EAAc5N,EAAQ,KAAQ4N,QAE9B7V,EAAAkX,UAAA,SAAAgC,EAAAgZ,GACA5X,EAAAoU,QAAAvW,OAAAe,GACA,IAAAzP,EAAA,IAAAsB,EACAonB,EAAAjZ,EAAAS,KACApK,EAAA2iB,EAAA3iB,OAEA6iB,GADAD,EAAA,IACAD,EAAAtnB,OAAA,IAAA2V,OAAA,SAAAhN,EAAA8e,GAKA,OAJAA,EAAAC,OACA/e,EAAA1C,KAAAwhB,EAAA5nB,MAGA8I,GACG,KACHgf,EAAAN,EAAAO,QAAAtZ,GAAAqZ,OA8CA,GA1CAA,EAAA7f,UACA6f,EAAA3jB,QAAA,SAAAhE,IACA,WAAAA,EAAA4W,MAAAjS,KACAA,GAIA3E,EAAA6nB,UAAA7jB,QAAA,SAAAyjB,IACA,IAAAD,EAAAvkB,QAAAwkB,EAAA5nB,OACA4nB,EAAAK,KAAA9jB,QAAA,SAAA+jB,GACAA,EAAAloB,KAAA6nB,OAAA,MAMA1nB,EAAAgoB,WAAAhkB,QAAA,SAAAgE,GAOA,IANA,IAAAigB,EAAAjgB,EAAAkgB,UAAAlgB,EAAAkgB,SAAAJ,KAAAnS,OAAA,SAAAhN,EAAAof,GACA,OAAApf,GAAAof,EAAAloB,KAAA6nB,QAAA,IAAAF,EAAAvkB,QAAA8kB,EAAAloB,QACS,GAETsoB,EAAAngB,EAAAmgB,KAEA,SAAAA,EAAAvR,MAAAuR,EAAAC,OACAD,IAAAC,OAGAH,IAAAjgB,EAAAkgB,WAAA,IAAAV,EAAAvkB,QAAA+E,EAAA2J,WAAA9R,OAAAmI,EAAAkgB,UAAA,UAAAlgB,EAAAkgB,SAAAloB,MAAA4W,MAAA5O,EAAAkgB,SAAAloB,QAAAmoB,IAEA,iBAAAngB,EAAAkgB,SAAAJ,KAAA,GAAAlR,MAAA,uBAAA5O,EAAAkgB,SAAAJ,KAAA,GAAA5c,KAAA0L,SACA5O,EAAA2J,WAAA+V,OAAA,EAEA1f,EAAAkgB,UACAlgB,EAAAkgB,SAAAJ,KAAA9jB,QAAA,SAAA+jB,GACAA,EAAAloB,KAAA6nB,OAAA,UAQA/iB,EAAA,CAGA,IAAA0jB,EAAAd,EAAArkB,OAAA,EAEAwM,EAAAgF,oBAAAxE,MAAAqX,EAAAc,MACAd,EAAAc,GAAApd,EAAA3B,EAAAuM,gBAAA0R,EAAAc,GAAAzT,YAAA2S,EAAAc,GAAAnkB,MAIAqjB,EAAAje,EAAAgf,mBAAAhf,EAAAqI,WAAAhN,EAAA,0BAAA2E,EAAAyG,eAAAwX,IACA,IAAAvlB,EAAAwN,EAAAQ,SAAAuX,EAAA,SAAArc,GACA,OAmDA,SAAAqd,EAAArd,EAAAlL,EAAAnB,GAGA,GAAA6Q,EAAAO,WAAAC,MAAAhF,MAAAwE,EAAA0U,mBAAAlU,MAAAtR,KAAAgmB,OAAA1Z,OAAAtM,KAAAgmB,OAAA1Z,KAAA1N,KAAA0N,MAAAwc,MAEA,YADA9oB,KAAAuR,QAAAlF,EAAA3B,EAAAuJ,iBAAA3H,EAAA5B,EAAA0H,QAAA,OAAA9F,EAAAhH,MAIA,IAAAwL,EAAAzN,SAAAiO,MAAAhF,GAGA,OAGAA,EAAAsd,WAAA,EAEAtd,EAAA0J,aAEA1J,EAAA0J,YAAA,EAKA1J,EAAA0L,KAAA,qBACA1L,EAAA6D,KAAAzF,EAAAyG,eAAA,CAAA9E,EAAA3B,EAAAuM,gBAAA3K,EAAA6D,MAAA7D,EAAA6D,KAAA7K,QAOAgH,EAAA1N,GAAA0N,EAAA1N,IAlCA8L,EAAAqI,WAAA,QAAAnU,KAmCA,IAAAirB,EAAA,cAAAvd,EAAA1N,GAAAqC,KACA,IAAA6oB,EAAA,YAAAxd,EAAA1N,GAAAqC,KACA,IAAA8oB,EAAAzd,EAAA1N,GACA,IAAAyW,EAAA/I,EAAA1N,GAAAqC,KACA,IAAA+oB,EAAAxB,EAAAlc,GACA,IAAA2d,EAAAD,EAAA1d,EAAA4d,OAAA5c,OAAA0c,EAAAG,aAAA1zB,IAAA,SAAAoyB,GACA,OAAAA,EAAAjqB,MADA0N,EAAA4d,OAKA,IAAAE,GAAA,EACAxZ,EAAAQ,SAAA9E,EAAA6D,KAAA,SAAAvI,GACA,GAAAkJ,EAAAzN,SAAAiO,MAAA1J,GACA,SAGAkJ,EAAAuZ,aAAA/Y,MAAA1J,KACAwiB,GAAA,KAMA9d,EAAA6D,KAAAS,EAAAQ,SAAA9E,EAAA6D,KAAA,SAAAvI,GACA,OAAA+hB,EAAApmB,KAAAvD,KAAA4H,EAAAxG,EAAAkM,OAAA2c,GAAAhqB,KAGA,IAAAwR,EAAAxR,EAAAqqB,SACA,IAAAC,EAAA,IAAA/Y,EAAAC,EAAAxR,GACA,IAAA8B,EAAA,IAAA6O,EAAA+G,SAAArL,GACAie,EAAA9S,QAAA1V,EAAAkW,IAAA,SACA,IAAAuS,EAAAD,EAAAnV,WAAA9I,EAAA1N,GAAAqC,KAAAgpB,GAEA,IAAAQ,EAAA,GAEAZ,GAAAC,IACAxd,EAAA4d,OAAA9kB,QAAA,SAAAwB,GACAA,EAAAkiB,OACA2B,EAAApjB,KAAAqD,EAAA0I,oBAAA1I,EAAAgJ,qBAAA,IAAA9M,EAAA8D,EAAAwR,gBAAA,CAAAtV,SAIAojB,IACAS,IAAAnd,OAAA0c,KAIAH,GAAAC,GACAW,EAAApjB,KAAApE,MAAAwnB,EAAA,CAAA/f,EAAAgK,YAAAhK,EAAAkK,gBAAA,IAAA2V,EAAArW,WAAA,YAAAxJ,EAAAuM,gBAAAvM,EAAAwM,eAAAxM,EAAAuJ,iBAAAvJ,EAAAqI,WAAA,MAAArI,EAAAqI,WAAA,gBAAAzG,EAAA1N,GAAA8L,EAAA0H,QAAA,MAAA1H,EAAAggB,iBAAAhgB,EAAAqI,WAAA,mBAIA0X,EAAApjB,KAAAkjB,EAAA5W,WAAA,UAAAjJ,EAAA0H,QAAA,KACAqY,EAAApjB,KAAAkjB,EAAA5W,WAAA,WAAAjJ,EAAA0H,QAAA,KAEA,QAAA7K,EAAA,EAAAgD,EAAAggB,EAAAvV,cAAuCzN,GAAAgD,EAAQhD,IAC/CkjB,EAAApjB,KAAAkjB,EAAA5W,WAAA,OAAApM,EAAA,OAGA6iB,GACAK,EAAApjB,KAAAkjB,EAAA5W,WAAA,WAAAjJ,EAAAwR,gBAAA,MAGA,IAAAyO,EAAA,GAEA,QAAApjB,EAAA,EAAAgD,EAAAggB,EAAAvV,cAAuCzN,GAAAgD,EAAQhD,IAC/CojB,EAAAtjB,KAAAqD,EAAA0L,SAAA,OAAA1L,EAAAqI,WAAA,OAAAxL,GAAAmD,EAAAqI,WAAA,OAAAxL,KAGAkjB,IAAAnd,OAAA,CAAA5C,EAAAmd,aAAAnd,EAAAyG,eAAAyZ,EAAAL,EAAAV,EAAAI,EAAAG,GAAA9c,OAAAkd,IAAA9f,EAAAkc,YAAAlc,EAAAqI,WAAA,UAAArI,EAAAyG,eAAA,CAAAzG,EAAAgK,YAAAhK,EAAAkK,gBAAA,IAAAlK,EAAA6M,iBAAA,aAAA7M,EAAAqI,WAAA,KAAArI,EAAAqI,WAAA,sBAAArI,EAAA0I,oBAAA1I,EAAAgJ,qBAAA,IAAAhJ,EAAAqI,WAAA,KAAArI,EAAA0M,cAAA1M,EAAAqI,WAAA,qBAAArI,EAAAqI,WAAA,UAAArI,EAAAgK,YAAAhK,EAAAkK,gBAAA,IAAA2V,EAAAzW,YAAA,cAAApJ,EAAA0I,oBAAA1I,EAAAwM,eAAAqT,EAAAzW,YAAA,kBAAApJ,EAAA0M,cAAA1M,EAAAqI,WAAA,WAAArI,EAAA0H,QAAAX,GAAA/G,EAAA0H,QAAAiD,EAAA7W,MAAA,IAAAkM,EAAAqI,WAAAsC,GAAA3K,EAAAqI,WAAA,WAAArI,EAAAqR,iBAAAkO,EAAAxzB,IAAA,SAAAmI,GACA,OAAA8L,EAAA0L,SAAA,OAAAxX,OACG0O,OAAAqd,IACHjgB,EAAAwR,gBAAA+N,EAAA3c,OAAAlM,GAAA3K,IAAA,SAAAmI,GACA,OAAA8L,EAAAqR,iBAAA,CAAArR,EAAA0L,SAAA,OAAA1L,EAAA0H,QAAA,QAAA1H,EAAA0H,QAAAxT,EAAAqC,OAAAyJ,EAAA0L,SAAA,OAAA1L,EAAA0H,QAAA,SAAA1H,EAAA0H,UAAAxT,EAAAkqB,aACGpe,EAAAggB,iBAAAN,EAAA1f,EAAAqI,WAAA,YAAArI,EAAA0H,QAAA,MAAA1H,EAAAqI,WAAA,kBAAAwX,EAAA9W,OAAA8W,EAAAzW,YAAA,aAAApJ,EAAA0H,SAAA,IAAA1H,EAAAyM,eAAAzM,EAAAqI,WAAA,YAGHzG,EAAA6D,KADA0Z,GAAAC,EACApf,EAAAyG,eAAA,CAAA6Y,GAAAtf,EAAA0I,oBAAA1I,EAAA0H,QAAA,OAAA1H,EAAAgb,oBAAAqE,EAAA,GAAArf,EAAAyG,eAAAsZ,MAEA/f,EAAAyG,eAAAsZ,GAGA,UArKAlnB,KAAAvD,KAAAsM,EAAA,GAAArM,KAGA,GAAA8F,EAAA,CAGA,GAFA3C,IAAA+M,UAEAuY,EAAAtnB,MAAA,CACA,IAAA4oB,EAAAtB,EAAAtnB,MAAA3K,IAAA,SAAAoyB,GACA,OAAAA,EAAA5nB,OAEA4pB,EAAAznB,EAAA,GAEA0N,EAAAga,oBAAAxZ,MAAAuZ,KACAA,EAAAV,aAAAU,EAAAV,aAAApT,OAAA,SAAAhN,EAAA8e,GAKA,OAJA,IAAAmB,EAAA3lB,QAAAwkB,EAAAjqB,GAAAqC,OACA8I,EAAA1C,KAAAwhB,GAGA9e,GACS,IAET8gB,EAAAV,aAAA7lB,SACAlB,EAAA,GAAAsH,EAAA0I,oBAAA1I,EAAA0H,QAAA,cAIAhP,EAAA,GAAAsH,EAAA0I,oBAAA1I,EAAA0H,QAAA,OAGAhP,EAAAgN,QAAA1F,EAAA0I,oBAAA1I,EAAAwM,eAAAxM,EAAAuJ,iBAAAvJ,EAAAqI,WAAA,MAAArI,EAAAqI,WAAA,uBACA3P,EAAAiE,KAAAqD,EAAAkJ,oBAAA,OAAAlJ,EAAAmJ,mBAAAnJ,EAAAqI,WAAA,WAAArI,EAAAwM,eAAAxM,EAAAqI,WAAA,mBACA3P,EAAAiE,KAAAqD,EAAA0I,oBAAA1I,EAAAwM,eAAAxM,EAAAuJ,iBAAAvJ,EAAAqI,WAAA,MAAArI,EAAAqI,WAAA,sBACA3P,EAAAiE,KAAAqD,EAAA0I,oBAAA1I,EAAAqI,WAAA,kBAEA3P,IAAA+M,UAIA,OADAT,EAAAS,KAAA/M,EACA,CACAsM,MACAW,SAAAqY,EAAAtmB,aAAA,CAAAnC,EAAA8qB,eAAA,GACA9qB,YAAA+qB,iBAIA,IAAApsB,EAAA,EA2HA,SAAAgsB,EAAAnV,EAAAoU,EAAAI,EAAAG,GAEA,IAAAa,EAAA,GACAA,EAAA5jB,KAAAoO,EAAA9B,WAAA,WAAAjJ,EAAAwM,eAAAzB,EAAAvB,WAAA,kBAEA2V,IACAoB,IAAA3d,OAAA2c,EAAAxzB,IAAA,SAAAmI,GACA,OAAA8L,EAAA0I,oBAAA1I,EAAAgJ,qBAAA,IAAAhJ,EAAAqI,WAAAnU,EAAAqC,MAAAwU,EAAA3B,YAAA2B,EAAA3B,YAAApJ,EAAAqI,WAAA,qBAAAnU,SAIAqsB,EAAA5jB,KAAAoO,EAAAhC,OAAA/I,EAAAqI,WAAA,WAAA0C,EAAA3B,YAAApJ,EAAAqI,WAAA,sBAEAqX,GACAa,EAAA5jB,KAAAoO,EAAAhC,OAAA/I,EAAAqI,WAAA,YAAA0C,EAAA3B,YAAApJ,EAAAqI,WAAA,0BAGAkY,IAAA3d,OAAA,CAAAmI,EAAA9B,WAAA,WAAAjJ,EAAAwM,eAAAzB,EAAAvB,WAAA,kBAAAuB,EAAAhC,OAAA/I,EAAAqI,WAAA,YAAA0C,EAAA3B,YAAApJ,EAAAqI,WAAA,sBAAArI,EAAAgK,YAAAhK,EAAAqI,WAAA,YAAArI,EAAAyG,eAAA,CAAAsE,EAAAhC,OAAAgC,EAAA3B,YAAA2B,EAAA3B,YAAA,WAAApJ,EAAAqI,WAAA,UAAArI,EAAA6M,iBAAA,IAAA7M,EAAA0H,QAAA,QAAAqD,EAAA3B,YAAA,yBAAApJ,EAAAwM,eAAAzB,EAAA3B,YAAA2B,EAAA3B,YAAA,0BAAA2B,EAAA3B,YAAA,yBAEApJ,EAAAgK,YAAAe,EAAAvB,WAAA,YAAAxJ,EAAAyM,eAAAzM,EAAA0M,cAAA1M,EAAAqI,WAAA,qBAAArI,EAAA0H,QAAA,MAAA1H,EAAAqI,WAAA,qBAEA,QAAAxL,EAAA,EAAAgD,EAAAkL,EAAAT,cAAyCzN,GAAAgD,EAAQhD,IACjD0jB,EAAA5jB,KAAAqD,EAAA0I,oBAAA1I,EAAAgJ,qBAAA,IAAAhJ,EAAAqI,WAAA,OAAAxL,GAAAkO,EAAA3B,YAAA2B,EAAA3B,YAAApJ,EAAAqI,WAAA,4BAAAxL,MAGA,OAAAmD,EAAAgK,YAAAe,EAAAvB,WAAA,aAAAxJ,EAAAyG,eAAA8Z,GAAAvgB,EAAAgK,YAEAe,EAAAvB,WAAA,YAAAxJ,EAAAyM,eAAAzM,EAAA0M,cAAA1M,EAAAqI,WAAA,kDC3RatU,EAAQ,IAArB,IAEAmS,EAAYnS,EAAQ,IAEpBqS,EAAAF,EAAAG,WACArG,EAAAkG,EAAAhC,SACAvD,EAAAnM,OAAAW,UAAAC,eAEAuM,EAAc5N,EAAQ,KAAQ4N,QAM9B7V,EAAAgyB,MAAA,SAAA0C,GACApa,EAAAzN,SAAAsL,OAAAuc,GACA,IAAAlB,EAAA,GACAmB,EAAA,GAEA,SAAAC,EAAAC,EAAAC,GACAxa,EAAAga,oBAAAnc,OAAA0c,GACA,IAAAE,EAAA,GAWA,OAVAF,EAAAlB,aAAA/kB,QAAA,SAAAomB,GAGA,GAFAxB,EAAAwB,EAAA5sB,GAAAqC,MAAAuqB,EAAA5sB,GAEA4sB,EAAAje,KAAA,CACA,IAAAke,EAAA/gB,EAAAgJ,qBAAA,IAAA8X,EAAA5sB,GAAA4sB,EAAAje,MACAge,EAAAlkB,KAAAgF,EAAAof,EAAAD,EAAAlmB,WACOgmB,GACPC,EAAAlkB,KAAAmkB,EAAA5sB,MAGA,IAAA2sB,EAAAjnB,OAAA,KACA,IAAAinB,EAAAjnB,OAAAinB,EAAA,GACA7gB,EAAAghB,mBAAAH,GAGA3a,EAAAQ,SAAA8Z,EAAA/a,KAAA,SAAA7D,GACA,GAAAwE,EAAAga,oBAAAxZ,MAAAhF,GAaA,OAVA,QAFAxG,EAAAslB,EAAA9e,GAAA,IAGAtM,KAAAuR,UAIAvR,KAAAuR,QAAAlF,EAAA3B,EAAA0I,oBAAAtN,GAAAwG,EAAAhH,OAKA,EACK,GAAAwL,EAAA6a,aAAAra,MAAAhF,IACL,GAAAwE,EAAAga,oBAAAxZ,MAAAhF,EAAAiB,MAAA,CACA,IAAAzH,EAAAslB,EAAA9e,EAAAiB,MAAA,GACAvN,KAAAiY,IAAA,QAAA1G,QAAAzL,SAEK,GAAAgL,EAAA8a,eAAAta,MAAAhF,IACL,GAAAwE,EAAAga,oBAAAxZ,MAAAhF,EAAA4J,MAAA,CACApQ,EAAAslB,EAAA9e,EAAA4J,MAAA,GACAlW,KAAAiY,IAAA,QAAA1G,QAAAzL,QAEK,IAAAgL,EAAA+a,oBAAAva,MAAAhF,GAAA,CACL0d,EAAA1d,EAAA1N,GAAAqC,MAAAqL,EAAA1N,GACAoB,KAAAgmB,OAAA1Z,KAAA,IAGAwf,EAAAphB,EAAAgf,mBAAAhf,EAAAqI,WAAA,IAAAzG,EAAA1N,GAAAqC,MAAAqL,EAAA4d,OAAA5d,EAAA6D,KAAA7D,EAAAsd,UAAAtd,EAAA0J,YACA8V,EAAAxmB,IAAAgH,EAAAhH,IACA,IAAAymB,EAAA1f,EAAA3B,EAAA0I,oBAAA/G,EAAA3B,EAAAgJ,qBAAA,IAAApH,EAAA1N,GAAAktB,GAAAxf,EAAAhH,MAAAgH,EAAAhH,KAiBA,OAfAwL,EAAAqH,eAAA7G,MAAAtR,KAAAgmB,OAAA1Z,OAGA6e,EAAA/a,QAAA,CACA2W,MAAA/mB,KAAAgmB,OAAA1Z,KACAyf,eAIA/rB,KAAAuR,WAEAvR,KAAAuR,QAAAwa,IAIA,EACK,GAAAjb,EAAAkb,mBAAA1a,MAAAhF,GAEL,YAGA6e,EAAA/lB,QAAA,SAAAyD,GACAA,EAAAke,MAAA5W,KAAAC,QAAAvH,EAAAkjB,cAEA,IAAA5B,EAAA,GACA8B,EAAA,GAeA,OAdAf,EAAAhB,OAAA9kB,QAAA,SAAA4U,GACAlJ,EAAAO,WAAAC,MAAA0I,KACAiS,EAAAjS,EAAA/Y,MAAA+Y,KAKA9a,OAAAD,KAAA+qB,GAAA5kB,QAAA,SAAAnE,GACA,IAAAoK,EAAA9H,KAAA0oB,EAAAhrB,GAAA,CACA,IAAArC,EAAAorB,EAAA/oB,GACAkpB,EAAA9iB,KAAAqD,EAAAmJ,mBAAAjV,IAAAkqB,MAAApe,EAAAwR,gBAAA,CAAAxR,EAAAqI,WAAA,yBAIA,IAAAoX,EAAA7lB,OACA,KAGAoG,EAAAkJ,oBAAA,MAAAuW,yBCnHA,IAAAxb,EAAalQ,EAAQ,IAErBmS,EAAYnS,EAAQ,IAEpBqS,EAAAF,EAAAG,WAGAmb,GAFAtb,EAAAhC,SAEenQ,EAAQ,IAAMytB,UAE7B,SAAAC,IACAxd,EAAA4B,GAAAvQ,gBAAAmsB,GAGA,SAAAC,EAAAC,GACAF,EAAA5oB,KAAAvD,MACA8Q,EAAA4B,QAAA/D,OAAA0d,GACAntB,OAAA0S,iBAAA5R,KAAA,CACAqsB,UAAA,CACArlB,MAAAqlB,KAQA,SAAA5T,EAAA6T,EAAAC,EAAAlU,GACA8T,EAAA5oB,KAAAvD,MACA8Q,EAAA4B,QAAA/D,OAAA2d,GACAxb,EAAA4B,QAAA/D,OAAA4d,GAEAlU,EACAvH,EAAAO,WAAA1C,OAAA0J,GAEAA,EAAA,KAGAnZ,OAAA0S,iBAAA5R,KAAA,CACAssB,SAAA,CACAtlB,MAAAslB,GAEAC,YAAA,CACAvlB,MAAAulB,GAEAlU,MAAA,CACArR,MAAAqR,KAQA,SAAAkB,EAAA+S,GACAH,EAAA5oB,KAAAvD,MACA8Q,EAAA4B,QAAA/D,OAAA2d,GACAptB,OAAA0S,iBAAA5R,KAAA,CACAssB,SAAA,CACAtlB,MAAAslB,KAQA,SAAAhS,EAAAR,EAAAI,GACAiS,EAAA5oB,KAAAvD,MAEA8Z,EACAnL,EAAA4B,GAAAuJ,aAAAC,GAEAD,EAAA,KAGAI,EACAvL,EAAA4B,GAAA2J,aAAAC,GAEAD,EAAA,KAGAhb,OAAA0S,iBAAA5R,KAAA,CACA8Z,WAAA,CACA9S,MAAA8S,GAEAI,aAAA,CACAlT,MAAAkT,KAQA,SAAAH,EAAAgB,EAAAyR,GACAL,EAAA5oB,KAAAvD,MACA8Q,EAAA4B,QAAA/D,OAAAoM,GACAjK,EAAAO,WAAA1C,OAAA6d,GACAttB,OAAA0S,iBAAA5R,KAAA,CACA+a,SAAA,CACA/T,MAAA+T,GAEAyR,QAAA,CACAxlB,MAAAwlB,KAQA,SAAArS,EAAAY,EAAAX,GACA+R,EAAA5oB,KAAAvD,MACA8Q,EAAA4B,QAAA/D,OAAAoM,GACAjK,EAAAO,WAAA1C,OAAAyL,GACAlb,OAAA0S,iBAAA5R,KAAA,CACA+a,SAAA,CACA/T,MAAA+T,GAEAX,eAAA,CACApT,MAAAoT,KAQA,SAAAnI,EAAAwa,GACA9d,EAAA4B,GAAAvQ,gBAAAiS,GAEA,IAAAT,EAAgB/S,EAAQ,KAAQ+S,QAEhC7C,EAAA4B,GAAAkc,aAAAjb,GACAtS,OAAA0S,iBAAA5R,KAAA,CACAysB,QAAA,CACAzlB,MAAAylB,GAEAC,WAAA,CACA1lB,MAAA,KAAAolB,EAAAK,EAAAvnB,cApHAgnB,EAAAE,EAAAD,GACA31B,EAAA41B,gBA0BAF,EAAAzT,EAAA0T,GACA31B,EAAAiiB,YAYAyT,EAAA3S,EAAA4S,GACA31B,EAAA+iB,cA2BA2S,EAAA5R,EAAA6R,GACA31B,EAAA8jB,WAgBA4R,EAAAnS,EAAAoS,GACA31B,EAAAujB,aAgBAmS,EAAA/R,EAAAgS,GACA31B,EAAA2jB,eAkBA,IAAAwS,EAAA1a,EAAApS,UAkEA,SAAA+sB,EAAA/jB,EAAAuN,EAAAiC,GACA,IAAA/S,EAAAuD,EAAAuN,GAEA,GAAA9Q,EAAA,CACA,IAAA+S,EAKA,OAAA/S,EAJA,GAAAuD,EAAAwP,OAAAxP,EAAAwP,MAAApX,OAAAoX,EAAApX,KACA,OAAAqE,EAOA,YA9EA9O,EAAAyb,cAEA0a,EAAAnU,UAAA,SAAA3P,EAAAgkB,GACAle,EAAA4B,GAAA1H,aAAAsjB,GACAnsB,KAAA0sB,WAAArlB,KAAAwB,GAEA,IACAgkB,EAAAtpB,KAAAvD,KAAAysB,SACG,QACH,IAAAK,EAAA9sB,KAAA0sB,WAAAnkB,MACAoG,EAAA8K,YAAAqT,EAAAjkB,KAIA8jB,EAAAI,aAAA,SAAAC,EAAA/T,GAKA,IAJA,IAAApQ,EAAAvD,EAwCA4U,EAvCAhQ,EAAA,GACA+iB,EAAA,KAEA1lB,EAAAvH,KAAA0sB,WAAApoB,OAAA,EAA0CiD,GAAA,IAAQA,EAGlD,IAFAsB,EAAA7I,KAAA0sB,WAAAnlB,cAEAwS,GAAAlR,aAAAsR,EAIA8S,EAAApkB,OACK,GAAAA,aAAAyR,EACL,GAAA2S,EAIAA,aAAAlT,GAAAlR,EAAAqR,cACAhQ,EAAA7C,KAAAwB,EAAAqR,cAGA+S,EAAA,SACO,IAAA3nB,EAAA0nB,EAAAzpB,KAAAvD,KAAA6I,GACP,MACOA,EAAAqR,cACPhQ,EAAA7C,KAAAwB,EAAAqR,mBAEK,GAAA5U,EAAA0nB,EAAAzpB,KAAAvD,KAAA6I,GACL,MAIA,GAAAvD,OACG,KAAA2T,EAGH,YAFA3T,EAAA2T,EAQA,IAHAnI,EAAA4B,QAAA/D,OAAArJ,GAGA4U,EAAAhQ,EAAA3B,OACAvI,KAAAysB,QAAA3Z,WAAAoH,EAAAE,eAAA9U,GACAA,EAAA4U,EAAAa,SAGA,OAAAzV,GAmBAqnB,EAAA7T,UAAA,SAAAT,GACA,IAAA/S,EAAAtF,KAAA+sB,aAAA,SAAAlkB,GACA,OAAA+jB,EAAA/jB,EAAA,WAAAwP,KAGA,UAAA/S,EACA,UAAAvG,MAAA,2BAGAiB,KAAAysB,QAAAtY,wBACAnU,KAAAysB,QAAAnY,KAAAhP,IAGAqnB,EAAA5T,aAAA,SAAAV,GACA,IAAA/S,EAAAtF,KAAA+sB,aAAA,SAAAlkB,GACA,OAAA+jB,EAAA/jB,EAAA,cAAAwP,KAGA,UAAA/S,EACA,UAAAvG,MAAA,8BAGAiB,KAAAysB,QAAAtY,wBACAnU,KAAAysB,QAAAnY,KAAAhP,yBCzPA,IAAAqJ,EAAalQ,EAAQ,IAErByuB,EAAQzuB,EAAQ,KAAS0uB,eAEzBvc,EAAYnS,EAAQ,IAEpB2uB,EAAAxc,EAAAC,aAAAvR,MACAwR,EAAAF,EAAAG,WACA1F,EAAAnM,OAAAW,UAAAC,eAEA,SAAAutB,EAAAC,EAAAC,GACA,SAAArS,EAAA5O,GACAwE,EAAA8G,KAAAjJ,OAAArC,GAEA,IAAAN,GAAA,EAEA,SAAAsF,EAAA1J,GASA,OARAoE,IACOohB,EAAA9b,MAAA1J,GACPA,EAAA6d,KAAAnU,GACOR,EAAA8G,KAAAtG,MAAA1J,KACP+G,EAAA8K,YAAAzN,GAAA,GACAA,EAAAghB,EAAAplB,KAGAoE,EAMA,OAHA4E,EAAA4c,UAAAlhB,EAAA,SAAArL,EAAA2G,GACA0J,EAAA1J,KAEAoE,EAGA,SAAAghB,EAAA1gB,GACAwE,EAAA8G,KAAAjJ,OAAArC,GACA,IAAA2E,EAAAic,EAAA5gB,GACA,OAAAjB,EAAA9H,KAAA0N,EAAAqc,GAAArc,EAAAqc,GAGAjiB,EAAA9H,KAAAkqB,EAAAnhB,EAAA0L,MAAA/G,EAAAqc,IAAA,EACAjiB,EAAA9H,KAAAgqB,EAAAjhB,EAAA0L,MAAA/G,EAAAqc,IAAA,EACArc,EAAAqc,GAAApS,EAAA5O,GAIA,OADA0gB,EAAA9R,eACA8R,EAGA,IAAAS,EAAA,CACAzB,oBAAA,GAIA0B,EAAA,CACApI,gBAAA,EAEAsG,gBAAA,EAEA+B,iBAAA,EAEAC,kBAAA,EAEA7X,sBAAA,EAEA8X,kBAAA,EAEAC,eAAA,GAIAC,EAAA,CACAC,iBAAA,EACAnY,gBAAA,EACAa,mBAAA,EACAd,iBAAA,EACAe,gBAAA,EACA2O,gBAAA,EACA2I,mBAAA,GAGA,QAAAjW,KAAA+V,EACA1iB,EAAA9H,KAAAwqB,EAAA/V,KACA0V,EAAA1V,GAAA+V,EAAA/V,IAIAxhB,EAAA03B,eAAAb,EAAA,iBAAAK,GACAl3B,EAAAykB,aAAAoS,EAAA,eAAAU,wBCjGA,IAAAnd,EAAYnS,EAAQ,IAEpBqQ,EAAarQ,EAAQ,KAErBiM,EAAAkG,EAAAhC,SAEA,SAAArN,IACAvB,KAAAmuB,OAAA,EACAnuB,KAAAouB,UAAA,EACApuB,KAAA+H,SAAA,GACA/H,KAAAmE,QAAA,GACAnE,KAAAquB,MAAA,GAGA9sB,EAAA1B,UAAAyqB,OAAA,WACA,IAAA1rB,EAAAoB,KAAAmuB,SAKA,OAJAnuB,KAAA+H,SAAAnJ,GAAA,CACAsF,KAAA,GACAgB,SAAA,MAEAtG,GAGA2C,EAAA1B,UAAAiX,WAAA,SAAA9V,EAAA3C,GACA2B,KAAAmE,QAAAnD,GAAA3C,GAGAkD,EAAA1B,UAAAyT,kBAAA,SAAAtS,EAAAsE,EAAAqN,GAEA,OADA3S,KAAA+H,SAAA/G,GAAAkD,KAAAyO,GAAArN,EACAqN,GAGApR,EAAA1B,UAAAyuB,kBAAA,SAAAttB,EAAA2R,GACA,OAAA3S,KAAA+H,SAAA/G,GAAAkD,KAAAyO,IAGApR,EAAA1B,UAAAgX,iBAAA,SAAA7V,EAAAsE,GACAtF,KAAA+H,SAAA/G,GAAAkE,SAAAI,GAGA/D,EAAA1B,UAAAkrB,YAAA,WACA,IAAArb,EAAAZ,EAAAW,MAAA,IAAA8C,KAAAC,UAAA,CACAzK,SAAA/H,KAAA+H,SACA5D,QAAAnE,KAAAmE,UACG,KACH,OAAAuG,EAAAkJ,oBAAA,OAAAlJ,EAAAmJ,mBAAAnJ,EAAAqI,WAAA,eAAArD,EAAAC,QAAAQ,KAAA,GAAA6F,eAGAzU,EAAA1B,UAAAmrB,aAAA,WACA,OACAjjB,SAAA/H,KAAA+H,SACA5D,QAAAnE,KAAAmE,UAIA3N,EAAA+K","file":"static/js/main.6ef85b65.chunk.js","sourcesContent":["module.exports = \"\\n# Delorean\\n\\n---\\n\\nDelorean is a proposal of a debugger for JavaScript.\\n\\n## Features\\n\\n---\\n\\n  - You can go back to any point of your program\\n\\n  - We capture the heap and stack of your program\\n\\n  - Continuations use case\\n\\n## Usage\\n\\n---\\n\\nWe expose a simple object to work with our debugger called **delorean**.\\n\\n```js\\n\\n/* Set the variables to debug. */\\n\\ndelorean.watch(observables: array): void;\\n\\n/* Create a timepoint with the name received by parameter. */\\n\\ndelorean.insertTimePoint(name: string): void;\\n\\n```\\n\\n## Tech\\n\\n---\\n\\nDelorean uses a number of open source projects to work properly:\\n\\n* [Babel](https://babeljs.io) - awesome and configurable transpiler!\\n\\n* [Node.js](https://nodejs.org/) - evented I/O for the backend\\n\\n* [mocha](https://mochajs.org/) - simple, flexible JavaScript test framework\\n\\n* [unwinder](https://github.com/jlongster/unwinder) - an implementation of continuations in JavaScript\\n\\nAnd of course Delorean itself is open source with a [public repository](https://github.com/fruizrob/delorean) on GitHub.\\n\"\n\n","var map = {\n\t\"./apl/apl.js\": [\n\t\t1308,\n\t\t29\n\t],\n\t\"./asciiarmor/asciiarmor.js\": [\n\t\t1309,\n\t\t30\n\t],\n\t\"./asn.1/asn.1.js\": [\n\t\t1310,\n\t\t31\n\t],\n\t\"./asterisk/asterisk.js\": [\n\t\t1311,\n\t\t32\n\t],\n\t\"./brainfuck/brainfuck.js\": [\n\t\t1312,\n\t\t33\n\t],\n\t\"./clike/clike.js\": [\n\t\t1297,\n\t\t2\n\t],\n\t\"./clojure/clojure.js\": [\n\t\t1313,\n\t\t34\n\t],\n\t\"./cmake/cmake.js\": [\n\t\t1314,\n\t\t35\n\t],\n\t\"./cobol/cobol.js\": [\n\t\t1315,\n\t\t36\n\t],\n\t\"./coffeescript/coffeescript.js\": [\n\t\t1298,\n\t\t37\n\t],\n\t\"./commonlisp/commonlisp.js\": [\n\t\t1316,\n\t\t38\n\t],\n\t\"./crystal/crystal.js\": [\n\t\t1317,\n\t\t39\n\t],\n\t\"./css/css.js\": [\n\t\t1294,\n\t\t1\n\t],\n\t\"./cypher/cypher.js\": [\n\t\t1318,\n\t\t40\n\t],\n\t\"./d/d.js\": [\n\t\t1319,\n\t\t41\n\t],\n\t\"./dart/dart.js\": [\n\t\t1320,\n\t\t2,\n\t\t42\n\t],\n\t\"./diff/diff.js\": [\n\t\t1321,\n\t\t43\n\t],\n\t\"./django/django.js\": [\n\t\t1322,\n\t\t0,\n\t\t1,\n\t\t11\n\t],\n\t\"./dockerfile/dockerfile.js\": [\n\t\t1323,\n\t\t21\n\t],\n\t\"./dtd/dtd.js\": [\n\t\t1324,\n\t\t44\n\t],\n\t\"./dylan/dylan.js\": [\n\t\t1325,\n\t\t45\n\t],\n\t\"./ebnf/ebnf.js\": [\n\t\t1326,\n\t\t46\n\t],\n\t\"./ecl/ecl.js\": [\n\t\t1327,\n\t\t47\n\t],\n\t\"./eiffel/eiffel.js\": [\n\t\t1328,\n\t\t48\n\t],\n\t\"./elm/elm.js\": [\n\t\t1329,\n\t\t49\n\t],\n\t\"./erlang/erlang.js\": [\n\t\t1330,\n\t\t50\n\t],\n\t\"./factor/factor.js\": [\n\t\t1331,\n\t\t22\n\t],\n\t\"./fcl/fcl.js\": [\n\t\t1332,\n\t\t51\n\t],\n\t\"./forth/forth.js\": [\n\t\t1333,\n\t\t52\n\t],\n\t\"./fortran/fortran.js\": [\n\t\t1334,\n\t\t53\n\t],\n\t\"./gas/gas.js\": [\n\t\t1335,\n\t\t54\n\t],\n\t\"./gfm/gfm.js\": [\n\t\t1336,\n\t\t4,\n\t\t20\n\t],\n\t\"./gherkin/gherkin.js\": [\n\t\t1337,\n\t\t55\n\t],\n\t\"./go/go.js\": [\n\t\t1338,\n\t\t56\n\t],\n\t\"./groovy/groovy.js\": [\n\t\t1339,\n\t\t57\n\t],\n\t\"./haml/haml.js\": [\n\t\t1340,\n\t\t0,\n\t\t1,\n\t\t14\n\t],\n\t\"./handlebars/handlebars.js\": [\n\t\t1299,\n\t\t16\n\t],\n\t\"./haskell-literate/haskell-literate.js\": [\n\t\t1341,\n\t\t25\n\t],\n\t\"./haskell/haskell.js\": [\n\t\t1300,\n\t\t58\n\t],\n\t\"./haxe/haxe.js\": [\n\t\t1342,\n\t\t59\n\t],\n\t\"./htmlembedded/htmlembedded.js\": [\n\t\t1343,\n\t\t0,\n\t\t1,\n\t\t10\n\t],\n\t\"./htmlmixed/htmlmixed.js\": [\n\t\t1293,\n\t\t0,\n\t\t1,\n\t\t26\n\t],\n\t\"./http/http.js\": [\n\t\t1344,\n\t\t60\n\t],\n\t\"./idl/idl.js\": [\n\t\t1345,\n\t\t61\n\t],\n\t\"./javascript/javascript.js\": [\n\t\t1295,\n\t\t0\n\t],\n\t\"./jinja2/jinja2.js\": [\n\t\t1346,\n\t\t62\n\t],\n\t\"./jsx/jsx.js\": [\n\t\t1347,\n\t\t0,\n\t\t27\n\t],\n\t\"./julia/julia.js\": [\n\t\t1348,\n\t\t63\n\t],\n\t\"./livescript/livescript.js\": [\n\t\t1349,\n\t\t64\n\t],\n\t\"./lua/lua.js\": [\n\t\t1350,\n\t\t65\n\t],\n\t\"./markdown/markdown.js\": [\n\t\t1305,\n\t\t4\n\t],\n\t\"./mathematica/mathematica.js\": [\n\t\t1351,\n\t\t66\n\t],\n\t\"./mbox/mbox.js\": [\n\t\t1352,\n\t\t67\n\t],\n\t\"./meta.js\": [\n\t\t316\n\t],\n\t\"./mirc/mirc.js\": [\n\t\t1353,\n\t\t68\n\t],\n\t\"./mllike/mllike.js\": [\n\t\t1354,\n\t\t69\n\t],\n\t\"./modelica/modelica.js\": [\n\t\t1355,\n\t\t70\n\t],\n\t\"./mscgen/mscgen.js\": [\n\t\t1356,\n\t\t71\n\t],\n\t\"./mumps/mumps.js\": [\n\t\t1357,\n\t\t72\n\t],\n\t\"./nginx/nginx.js\": [\n\t\t1358,\n\t\t73\n\t],\n\t\"./nsis/nsis.js\": [\n\t\t1359,\n\t\t23\n\t],\n\t\"./ntriples/ntriples.js\": [\n\t\t1360,\n\t\t74\n\t],\n\t\"./octave/octave.js\": [\n\t\t1361,\n\t\t75\n\t],\n\t\"./oz/oz.js\": [\n\t\t1362,\n\t\t76\n\t],\n\t\"./pascal/pascal.js\": [\n\t\t1363,\n\t\t77\n\t],\n\t\"./pegjs/pegjs.js\": [\n\t\t1364,\n\t\t0,\n\t\t78\n\t],\n\t\"./perl/perl.js\": [\n\t\t1365,\n\t\t79\n\t],\n\t\"./php/php.js\": [\n\t\t1366,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t17\n\t],\n\t\"./pig/pig.js\": [\n\t\t1367,\n\t\t80\n\t],\n\t\"./powershell/powershell.js\": [\n\t\t1368,\n\t\t81\n\t],\n\t\"./properties/properties.js\": [\n\t\t1369,\n\t\t82\n\t],\n\t\"./protobuf/protobuf.js\": [\n\t\t1370,\n\t\t83\n\t],\n\t\"./pug/pug.js\": [\n\t\t1306,\n\t\t0,\n\t\t1,\n\t\t3\n\t],\n\t\"./puppet/puppet.js\": [\n\t\t1371,\n\t\t84\n\t],\n\t\"./python/python.js\": [\n\t\t1301,\n\t\t85\n\t],\n\t\"./q/q.js\": [\n\t\t1372,\n\t\t86\n\t],\n\t\"./r/r.js\": [\n\t\t1373,\n\t\t87\n\t],\n\t\"./rpm/rpm.js\": [\n\t\t1374,\n\t\t88\n\t],\n\t\"./rst/rst.js\": [\n\t\t1375,\n\t\t13\n\t],\n\t\"./ruby/ruby.js\": [\n\t\t1296,\n\t\t89\n\t],\n\t\"./rust/rust.js\": [\n\t\t1376,\n\t\t24\n\t],\n\t\"./sas/sas.js\": [\n\t\t1377,\n\t\t90\n\t],\n\t\"./sass/sass.js\": [\n\t\t1303,\n\t\t1,\n\t\t91\n\t],\n\t\"./scheme/scheme.js\": [\n\t\t1378,\n\t\t92\n\t],\n\t\"./shell/shell.js\": [\n\t\t1379,\n\t\t93\n\t],\n\t\"./sieve/sieve.js\": [\n\t\t1380,\n\t\t94\n\t],\n\t\"./slim/slim.js\": [\n\t\t1381,\n\t\t0,\n\t\t1,\n\t\t15\n\t],\n\t\"./smalltalk/smalltalk.js\": [\n\t\t1382,\n\t\t95\n\t],\n\t\"./smarty/smarty.js\": [\n\t\t1383,\n\t\t96\n\t],\n\t\"./solr/solr.js\": [\n\t\t1384,\n\t\t97\n\t],\n\t\"./soy/soy.js\": [\n\t\t1385,\n\t\t0,\n\t\t1,\n\t\t18\n\t],\n\t\"./sparql/sparql.js\": [\n\t\t1386,\n\t\t98\n\t],\n\t\"./spreadsheet/spreadsheet.js\": [\n\t\t1387,\n\t\t99\n\t],\n\t\"./sql/sql.js\": [\n\t\t1388,\n\t\t100\n\t],\n\t\"./stex/stex.js\": [\n\t\t1302,\n\t\t101\n\t],\n\t\"./stylus/stylus.js\": [\n\t\t1307,\n\t\t5\n\t],\n\t\"./swift/swift.js\": [\n\t\t1389,\n\t\t102\n\t],\n\t\"./tcl/tcl.js\": [\n\t\t1390,\n\t\t103\n\t],\n\t\"./textile/textile.js\": [\n\t\t1391,\n\t\t104\n\t],\n\t\"./tiddlywiki/tiddlywiki.js\": [\n\t\t1392,\n\t\t105\n\t],\n\t\"./tiki/tiki.js\": [\n\t\t1393,\n\t\t106\n\t],\n\t\"./toml/toml.js\": [\n\t\t1394,\n\t\t107\n\t],\n\t\"./tornado/tornado.js\": [\n\t\t1395,\n\t\t0,\n\t\t1,\n\t\t12\n\t],\n\t\"./troff/troff.js\": [\n\t\t1396,\n\t\t108\n\t],\n\t\"./ttcn-cfg/ttcn-cfg.js\": [\n\t\t1398,\n\t\t109\n\t],\n\t\"./ttcn/ttcn.js\": [\n\t\t1397,\n\t\t110\n\t],\n\t\"./turtle/turtle.js\": [\n\t\t1399,\n\t\t111\n\t],\n\t\"./twig/twig.js\": [\n\t\t1400,\n\t\t19\n\t],\n\t\"./vb/vb.js\": [\n\t\t1401,\n\t\t112\n\t],\n\t\"./vbscript/vbscript.js\": [\n\t\t1402,\n\t\t113\n\t],\n\t\"./velocity/velocity.js\": [\n\t\t1403,\n\t\t114\n\t],\n\t\"./verilog/verilog.js\": [\n\t\t1404,\n\t\t115\n\t],\n\t\"./vhdl/vhdl.js\": [\n\t\t1405,\n\t\t116\n\t],\n\t\"./vue/vue.js\": [\n\t\t1406,\n\t\t0,\n\t\t1,\n\t\t5,\n\t\t3,\n\t\t9\n\t],\n\t\"./webidl/webidl.js\": [\n\t\t1407,\n\t\t117\n\t],\n\t\"./xml/xml.js\": [\n\t\t1292,\n\t\t118\n\t],\n\t\"./xquery/xquery.js\": [\n\t\t1408,\n\t\t119\n\t],\n\t\"./yacas/yacas.js\": [\n\t\t1409,\n\t\t120\n\t],\n\t\"./yaml-frontmatter/yaml-frontmatter.js\": [\n\t\t1410,\n\t\t28\n\t],\n\t\"./yaml/yaml.js\": [\n\t\t1304,\n\t\t121\n\t],\n\t\"./z80/z80.js\": [\n\t\t1411,\n\t\t122\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 1282;\nmodule.exports = webpackAsyncContext;","var _require = require('./heap'),\n    heapSnapshot = _require.heapSnapshot;\n\nmodule.exports = {\n  insertTimePoint: function insertTimePoint(id) {\n    heapSnapshot(id);\n  },\n  watch: function watch(array) {\n    console.log('Debugging [' + array + ']');\n  }\n};","var fs = require('fs');\n\nvar compiler = require('../main');\n\nvar hasOwn = Object.prototype.hasOwnProperty; // modules\n// function require(relativeTo, id) {\n//   var dir = path.dirname(relativeTo);\n//   var absPath;\n//   if(isRelative(id)) {\n//     absPath = path.join(dir, id);\n//   }\n//   else {\n//     absPath = node.resolve(id);\n//   }\n//   VM.loadScript(absPath);\n// }\n// vm\n\nvar IDLE = 'idle';\nvar SUSPENDED = 'suspended';\nvar EXECUTING = 'executing';\n\nfunction Machine() {\n  this.debugInfo = null;\n  this.stack = null;\n  this.error = undefined;\n  this.doRestore = false;\n  this.evalResult = null;\n  this.state = IDLE;\n  this.running = false;\n  this._events = {};\n  this.stepping = false;\n  this.prevStates = [];\n  this.tryStack = [];\n  this.machineBreaks = [];\n  this.machineWatches = [];\n}\n\nMachine.prototype.loadScript = function (path) {\n  var src = fs.readFileSync(process.argv[2], \"utf-8\");\n  var output = compiler(src, {\n    includeDebug: true\n  });\n  var debugInfo = new DebugInfo(output.debugInfo);\n  this.setDebugInfo(debugInfo);\n  this.setCode(path, output.code);\n  this.run();\n};\n\nMachine.prototype.loadModule = function (path) {\n  var src = fs.readFileSync(process.argv[2], \"utf-8\");\n  var output = compiler(src, {\n    includeDebug: true\n  }); // run...\n};\n\nMachine.prototype.loadString = function (str) {\n  var output = compiler(str, {\n    includeDebug: true\n  });\n  var debugInfo = new DebugInfo(output.debugInfo);\n  this.setDebugInfo(debugInfo);\n  this.setCode('/eval', output.code);\n};\n\nMachine.prototype.execute = function (fn, thisPtr, args) {\n  // console.log('Execute(fn, thisPtr, args)', fn, thisPtr, args)\n  var prevState = this.state;\n  this.state = EXECUTING;\n  this.running = true;\n  var prevStepping = this.stepping;\n  var prevFrame = this.rootFrame;\n  this.stepping = false;\n  var ret;\n\n  try {\n    if (thisPtr || args) {\n      ret = fn.apply(thisPtr, args || []);\n    } else {\n      ret = fn();\n    }\n  } catch (e) {\n    this.stack = e.fnstack;\n    this.error = e.error;\n  }\n\n  this.stepping = prevStepping; // It's a weird case if we run code while we are suspended, but if\n  // so we try to run it and kind of ignore whatever happened (no\n  // breakpoints, etc), but we do fire an error event if it happened\n\n  if (prevState === 'suspended') {\n    if (this.error) {\n      this.fire('error', this.error);\n    }\n\n    this.state = prevState;\n  } else {\n    this.checkStatus();\n  }\n\n  return ret;\n};\n\nMachine.prototype.run = function () {\n  var path = this.path;\n  var code = this.code;\n  var module = {\n    exports: {}\n  };\n  var fn = new Function('VM', //'require',\n  'module', 'exports', '$Frame', '$ContinuationExc', 'console', code + '\\nreturn $__global;');\n  var rootFn = fn(this, //require.bind(null, path),\n  module, module.exports, Frame, ContinuationExc, {\n    log: function () {\n      var args = Array.prototype.slice.call(arguments);\n      this.output += args.join(' ') + '\\n';\n    }.bind(this)\n  });\n  this.output = '';\n  this.execute(rootFn);\n  this.globalFn = rootFn;\n};\n\nMachine.prototype.abort = function () {\n  this.output = '';\n  this.globalFn = null;\n  this.state = IDLE;\n  this.running = false;\n  this.path = '';\n  this.code = '';\n  this.invokingContinuation = null;\n  this.capturingContinuation = false;\n  this.error = null;\n};\n\nMachine.prototype.getNextStepId = function (machineId, stepId, offset) {\n  var locs = this.debugInfo.data.stepIds[machineId];\n  var idx = locs.indexOf(stepId);\n\n  if (idx + offset < locs.length) {\n    return this.debugInfo.data.stepIds[machineId][idx + offset];\n  }\n\n  return null;\n};\n\nMachine.prototype.continue = function () {\n  if (this.state === SUSPENDED) {\n    this.fire('resumed');\n    var root = this.getRootFrame();\n    var top = this.getTopFrame();\n    this.running = true;\n    this.state = EXECUTING;\n\n    if (this.machineBreaks[top.machineId][top.next]) {\n      // We need to get past this instruction that has a breakpoint, so\n      // turn off breakpoints and step past it, then turn them back on\n      // again and execute normally\n      this.stepping = true;\n      this.hasBreakpoints = false;\n      this.restore(true); // TODO: don't force this back on always\n\n      this.hasBreakpoints = true;\n      this.stepping = false;\n    }\n\n    this.running = true;\n    this.state = EXECUTING;\n    this.restore();\n  }\n};\n\nMachine.prototype.step = function () {\n  if (!this.stack) return;\n  this.fire('resumed');\n\n  var _step = function () {\n    this.running = true;\n    this.stepping = true;\n    this.hasBreakpoints = false;\n    this.restore(true);\n    this.hasBreakpoints = true;\n    this.stepping = false;\n  }.bind(this);\n\n  _step();\n\n  var top = this.getTopFrame();\n\n  while (this.state === SUSPENDED && !this.getLocation()) {\n    // Keep stepping until we hit something we know where we are\n    // located\n    _step();\n  }\n\n  if (this.state === SUSPENDED) {\n    this.running = false;\n    this.fire('paused');\n  }\n};\n\nMachine.prototype.stepOver = function () {\n  if (!this.rootFrame) return;\n  var top = this.getTopFrame();\n  var curloc = this.getLocation();\n  var finalLoc = curloc;\n  var biggest = 0;\n  var locs = this.debugInfo.data[top.machineId].locs; // find the \"biggest\" expression in the function that encloses\n  // this one\n\n  Object.keys(locs).forEach(function (k) {\n    var loc = locs[k];\n\n    if (loc.start.line <= curloc.start.line && loc.end.line >= curloc.end.line && loc.start.column <= curloc.start.column && loc.end.column >= curloc.end.column) {\n      var ldiff = curloc.start.line - loc.start.line + (loc.end.line - curloc.end.line);\n      var cdiff = curloc.start.column - loc.start.column + (loc.end.column - curloc.end.column);\n\n      if (ldiff + cdiff > biggest) {\n        finalLoc = loc;\n        biggest = ldiff + cdiff;\n      }\n    }\n  });\n\n  if (finalLoc !== curloc) {\n    while (this.getLocation() !== finalLoc) {\n      this.step();\n    }\n\n    this.step();\n  } else {\n    this.step();\n  }\n};\n\nMachine.prototype.evaluate = function (expr) {\n  if (expr === '$_') {\n    return this.evalResult;\n  } // An expression can be one of these forms:\n  //\n  // 1. foo = function() { <stmt/expr> ... }\n  // 2. function foo() { <stmt/expr> ... }\n  // 3. x = <expr>\n  // 4. var x = <expr>\n  // 5. <stmt/expr>\n  //\n  // 1-4 can change any data in the current frame, and introduce new\n  // variables that are only available for the current session (will\n  // disappear after any stepping/resume/etc). Functions in 1 and 2\n  // will be compiled, so they can be paused and debugged.\n  //\n  // 5 can run any arbitrary expression\n\n\n  if (this.stack) {\n    var top = this.getTopFrame();\n    expr = compiler(expr, {\n      asExpr: true,\n      scope: top.scope\n    }).code;\n    this.running = true;\n    this.doRestore = true;\n    this.stepping = false;\n    var res = top.evaluate(this, expr);\n    this.stepping = true;\n    this.doRestore = false;\n    this.running = false;\n  } else if (this.globalFn) {\n    expr = compiler(expr, {\n      asExpr: true\n    }).code;\n    this.evalArg = expr;\n    this.stepping = true;\n    this.withTopFrame({\n      next: -1,\n      state: {}\n    }, function () {\n      this.doRestore = true;\n\n      try {\n        (0, this).globalFn();\n      } catch (e) {\n        if (e.error) {\n          throw e.error;\n        }\n      }\n\n      this.doRestore = false;\n    }.bind(this));\n  } else {\n    throw new Error('invalid evaluation state');\n  }\n\n  return this.evalResult;\n};\n\nMachine.prototype.restore = function (suppressEvents) {\n  try {\n    this.doRestore = true;\n    this.getRootFrame().restore();\n    this.error = undefined;\n  } catch (e) {\n    this.stack = e.fnstack;\n    this.error = e.error;\n  }\n\n  this.checkStatus(suppressEvents);\n};\n\nMachine.prototype.checkStatus = function (suppressEvents) {\n  if (this.stack) {\n    if (this.capturingContinuation) {\n      this.capturingContinuation = false;\n      this.onCapture();\n      return;\n    }\n\n    if (this.invokingContinuation) {\n      var fnstack = this.invokingContinuation;\n      this.invokingContinuation = null;\n      this.onInvoke(fnstack);\n      return;\n    }\n\n    if (this.error) {\n      if (this.dispatchException()) {\n        return;\n      }\n\n      if (!suppressEvents) {\n        //this.fire('error', this.error);\n        throw this.error;\n      }\n    } else if (!suppressEvents) {\n      this.fire('paused');\n    }\n\n    this.state = SUSPENDED;\n  } else {\n    if (!suppressEvents) {\n      this.fire('finish');\n    }\n\n    this.state = IDLE;\n  }\n\n  this.running = false;\n};\n\nMachine.prototype.toggleBreakpoint = function (line) {\n  var debug = this.debugInfo;\n  var pos = debug.lineToMachinePos(line);\n\n  if (pos) {\n    this.hasBreakpoints = true;\n\n    if (this.machineBreaks[pos.machineId][pos.locId]) {\n      this.machineBreaks[pos.machineId][pos.locId] = false;\n    } else {\n      this.machineBreaks[pos.machineId][pos.locId] = true;\n    }\n  }\n};\n\nMachine.prototype.callCC = function () {\n  this.capturingContinuation = true;\n  throw new ContinuationExc();\n};\n\nMachine.prototype.onCapture = function () {\n  var fnstack = this.stack.map(function (x) {\n    return x;\n  });\n  var top = fnstack[0];\n  var tmpid = top.tmpid;\n  var next = this.getNextStepId(top.machineId, top.next, 2);\n  top.next = this.getNextStepId(top.machineId, top.next, 1);\n\n  top.state['$__t' + (top.tmpid - 1)] = function (arg) {\n    top.next = next;\n    top.state['$__t' + tmpid] = arg;\n\n    if (this.running) {\n      this.invokeContinuation(fnstack);\n    } else {\n      this.onInvoke(fnstack);\n    }\n  }.bind(this);\n\n  this.restore();\n};\n\nMachine.prototype.invokeContinuation = function (fnstack) {\n  this.invokingContinuation = fnstack;\n  throw new ContinuationExc();\n};\n\nMachine.prototype.onInvoke = function (fnstack) {\n  this.stack = fnstack.map(function (x) {\n    return x;\n  });\n  this.fire('cont-invoked');\n\n  if (!this.stepping) {\n    this.running = true;\n    this.state = EXECUTING;\n    this.restore();\n  }\n};\n\nMachine.prototype.handleWatch = function (machineId, locId, res) {\n  var id = this.machineWatches[machineId][locId].id;\n  this.fire('watched', {\n    id: id,\n    value: res\n  });\n};\n\nMachine.prototype.on = function (event, handler) {\n  var arr = this._events[event] || [];\n  arr.push(handler);\n  this._events[event] = arr;\n};\n\nMachine.prototype.off = function (event, handler) {\n  var arr = this._events[event] || [];\n\n  if (handler) {\n    var i = arr.indexOf(handler);\n\n    if (i !== -1) {\n      arr.splice(i, 1);\n    }\n  } else {\n    this._events[event] = [];\n  }\n};\n\nMachine.prototype.fire = function (event, data) {\n  setTimeout(function () {\n    var arr = this._events[event] || [];\n    arr.forEach(function (handler) {\n      handler(data);\n    });\n  }.bind(this), 0);\n};\n\nMachine.prototype.getTopFrame = function () {\n  return this.stack && this.stack[0];\n};\n\nMachine.prototype.getRootFrame = function () {\n  return this.stack && this.stack[this.stack.length - 1];\n};\n\nMachine.prototype.getFrameOffset = function (i) {\n  // TODO: this is really annoying, but it works for now. have to do\n  // two passes\n  var top = this.rootFrame;\n  var count = 0;\n\n  while (top.child) {\n    top = top.child;\n    count++;\n  }\n\n  if (i > count) {\n    return null;\n  }\n\n  var depth = count - i;\n  top = this.rootFrame;\n  count = 0;\n\n  while (top.child && count < depth) {\n    top = top.child;\n    count++;\n  }\n\n  return top;\n};\n\nMachine.prototype.setDebugInfo = function (info) {\n  this.debugInfo = info || new DebugInfo([]);\n  var machines = info.data.machines;\n  this.machineBreaks = new Array(machines.length);\n  this.machineWatches = new Array(machines.length);\n\n  for (var i = 0; i < machines.length; i++) {\n    this.machineBreaks[i] = [];\n  }\n\n  for (var i = 0; i < machines.length; i++) {\n    this.machineWatches[i] = [];\n  }\n};\n\nMachine.prototype.setCode = function (path, code) {\n  this.path = path;\n  this.code = code;\n};\n\nMachine.prototype.isStepping = function () {\n  return this.stepping;\n};\n\nMachine.prototype.getOutput = function () {\n  return this.output;\n};\n\nMachine.prototype.getState = function () {\n  return this.state;\n};\n\nMachine.prototype.getLocation = function () {\n  if (!this.stack || !this.debugInfo) return;\n  var top = this.getTopFrame();\n  return this.debugInfo.data.machines[top.machineId].locs[top.next];\n};\n\nMachine.prototype.disableBreakpoints = function () {\n  this.hasBreakpoints = false;\n};\n\nMachine.prototype.enableBreakpoints = function () {\n  this.hasBreakpoints = true;\n};\n\nMachine.prototype.pushState = function () {\n  this.prevStates.push([this.stepping, this.hasBreakpoints]);\n  this.stepping = false;\n  this.hasBreakpoints = false;\n};\n\nMachine.prototype.popState = function () {\n  var state = this.prevStates.pop();\n  this.stepping = state[0];\n  this.hasBreakpoints = state[1];\n};\n\nMachine.prototype.pushTry = function (stack, catchLoc, finallyLoc, finallyTempVar) {\n  if (finallyLoc) {\n    stack.push({\n      finallyLoc: finallyLoc,\n      finallyTempVar: finallyTempVar\n    });\n  }\n\n  if (catchLoc) {\n    stack.push({\n      catchLoc: catchLoc\n    });\n  }\n};\n\nMachine.prototype.popCatch = function (stack, catchLoc) {\n  var entry = stack[stack.length - 1];\n\n  if (entry && entry.catchLoc === catchLoc) {\n    stack.pop();\n  }\n};\n\nMachine.prototype.popFinally = function (stack, finallyLoc) {\n  var entry = stack[stack.length - 1];\n\n  if (!entry || !entry.finallyLoc) {\n    stack.pop();\n    entry = stack[stack.length - 1];\n  }\n\n  if (entry && entry.finallyLoc === finallyLoc) {\n    stack.pop();\n  }\n};\n\nMachine.prototype.dispatchException = function () {\n  if (this.error == null) {\n    return false;\n  }\n\n  var exc = this.error;\n  var dispatched = false;\n  var prevStepping = this.stepping;\n  this.stepping = false;\n\n  for (var i = 0; i < this.stack.length; i++) {\n    var frame = this.stack[i];\n\n    if (frame.dispatchException(this, exc)) {\n      // shave off the frames were walked over\n      this.stack = this.stack.slice(i);\n      dispatched = true;\n      break;\n    }\n  }\n\n  if (!prevStepping && dispatched) {\n    this.restore();\n    this.error = undefined;\n  }\n\n  return dispatched;\n};\n\nMachine.prototype.keys = function (obj) {\n  return Object.keys(obj).reverse();\n};\n\nMachine.prototype.popFrame = function () {\n  var r = this.stack.pop();\n\n  if (!this.stack.length) {\n    this.doRestore = false;\n    this.stack = null;\n  }\n\n  return r;\n};\n\nMachine.prototype.nextFrame = function () {\n  if (this.stack && this.stack.length) {\n    return this.stack[this.stack.length - 1];\n  }\n\n  return null;\n};\n\nMachine.prototype.withTopFrame = function (frame, fn) {\n  var prev = this.stack;\n  this.stack = [frame];\n\n  try {\n    var newFrame;\n\n    if (newFrame = fn()) {\n      // replace the top of the real stack with the new frame\n      prev[0] = newFrame;\n    }\n  } finally {\n    this.stack = prev;\n  }\n}; // frame\n\n\nfunction Frame(machineId, name, fn, next, state, scope, thisPtr, tryStack, tmpid) {\n  this.machineId = machineId;\n  this.name = name;\n  this.fn = fn;\n  this.next = next;\n  this.state = state;\n  this.scope = scope;\n  this.thisPtr = thisPtr;\n  this.tryStack = tryStack;\n  this.tmpid = tmpid;\n}\n\nFrame.prototype.restore = function () {\n  this.fn.call(this.thisPtr);\n};\n\nFrame.prototype.evaluate = function (machine, expr) {\n  machine.evalArg = expr;\n  machine.error = undefined;\n  machine.stepping = true;\n  machine.withTopFrame(this, function () {\n    var prevNext = this.next;\n    this.next = -1;\n\n    try {\n      this.fn.call(this.thisPtr);\n    } catch (e) {\n      if (!(e instanceof ContinuationExc)) {\n        throw e;\n      } else if (e.error) {\n        throw e.error;\n      }\n\n      var newFrame = e.fnstack[0];\n      newFrame.next = prevNext;\n      return newFrame;\n    }\n\n    throw new Error('eval did not get a frame back');\n  }.bind(this));\n  return machine.evalResult;\n};\n\nFrame.prototype.stackEach = function (func) {\n  if (this.child) {\n    this.child.stackEach(func);\n  }\n\n  func(this);\n};\n\nFrame.prototype.stackMap = function (func) {\n  var res;\n\n  if (this.child) {\n    res = this.child.stackMap(func);\n  } else {\n    res = [];\n  }\n\n  res.push(func(this));\n  return res;\n};\n\nFrame.prototype.stackReduce = function (func, acc) {\n  if (this.child) {\n    acc = this.child.stackReduce(func, acc);\n  }\n\n  return func(acc, this);\n};\n\nFrame.prototype.getLocation = function (machine) {\n  return machine.debugInfo.data[this.machineId].locs[this.next];\n};\n\nFrame.prototype.dispatchException = function (machine, exc) {\n  if (!this.tryStack) {\n    return false;\n  }\n\n  var next;\n  var hasCaught = false;\n  var hasFinally = false;\n  var finallyEntries = [];\n\n  for (var i = this.tryStack.length - 1; i >= 0; i--) {\n    var entry = this.tryStack[i];\n\n    if (entry.catchLoc) {\n      next = entry.catchLoc;\n      hasCaught = true;\n      break;\n    } else if (entry.finallyLoc) {\n      finallyEntries.push(entry);\n      hasFinally = true;\n    }\n  } // initially, `next` is undefined which will jump to the end of the\n  // function. (the default case)\n\n\n  while (entry = finallyEntries.pop()) {\n    this.state['$__t' + entry.finallyTempVar] = next;\n    next = entry.finallyLoc;\n  }\n\n  this.next = next;\n\n  if (hasFinally && !hasCaught) {\n    machine.withTopFrame(this, function () {\n      machine.doRestore = true;\n      this.restore();\n    }.bind(this));\n  }\n\n  return hasCaught;\n}; // debug info\n\n\nfunction DebugInfo(data) {\n  this.data = data;\n}\n\nDebugInfo.prototype.lineToMachinePos = function (line) {\n  if (!this.data) return null;\n  var machines = this.data.machines; // Iterate over the machines backwards because they are ordered\n  // innermost to top-level, and we want to break on the outermost\n  // function.\n\n  for (var i = machines.length - 1; i >= 0; i--) {\n    var locs = machines[i].locs;\n    var keys = Object.keys(locs);\n\n    for (var cur = 0, len = keys.length; cur < len; cur++) {\n      var loc = locs[keys[cur]];\n\n      if (loc.start.line === line) {\n        return {\n          machineId: i,\n          locId: parseInt(keys[cur])\n        };\n      }\n    }\n  }\n\n  return null;\n};\n\nDebugInfo.prototype.closestMachinePos = function (start, end) {\n  if (!this.data) return null;\n\n  for (var i = 0, l = this.data.length; i < l; i++) {\n    var locs = this.data[i].locs;\n    var keys = Object.keys(locs);\n    keys = keys.map(function (k) {\n      return parseInt(k);\n    });\n    keys.sort(function (a, b) {\n      return a - b;\n    });\n\n    for (var cur = 0, len = keys.length; cur < len; cur++) {\n      var loc = locs[keys[cur]];\n\n      if ((loc.start.line < start.line || loc.start.line === start.line && loc.start.column <= start.ch) && (loc.end.line > end.line || loc.end.line === end.line && loc.end.column >= end.ch)) {\n        return {\n          machineId: i,\n          locId: keys[cur]\n        };\n      }\n    }\n  }\n\n  return null;\n};\n\nDebugInfo.prototype.setWatch = function (pos, src) {\n  // TODO: real uuid\n  var id = Math.random() * 10000 | 0;\n  this.watches.push({\n    pos: pos,\n    src: src,\n    id: id\n  });\n  return id;\n};\n\nfunction ContinuationExc(error, initialFrame, savedFrames) {\n  this.fnstack = savedFrames ? savedFrames : initialFrame ? [initialFrame] : [];\n  this.error = error;\n  this.reuse = !!initialFrame;\n}\n\nContinuationExc.prototype.pushFrame = function (frame) {\n  // console.log('pushFrame(frame)', frame)\n  this.fnstack.push(frame);\n}; // exports\n\n\nmodule.exports.$Machine = Machine;\nmodule.exports.$Frame = Frame;\nmodule.exports.$DebugInfo = DebugInfo;\nmodule.exports.$ContinuationExc = ContinuationExc;","/**\n * Copyright (c) 2013, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nexports.guessTabWidth = function (source) {\n  var counts = []; // Sparse array.\n\n  var lastIndent = 0;\n  source.split(\"\\n\").forEach(function (line) {\n    var indent = /^\\s*/.exec(line)[0].length;\n    var diff = Math.abs(indent - lastIndent);\n    counts[diff] = ~~counts[diff] + 1;\n    lastIndent = indent;\n  });\n  var maxCount = -1;\n  var result = 2;\n\n  for (var tabWidth = 1; tabWidth < counts.length; tabWidth += 1) {\n    if (tabWidth in counts && counts[tabWidth] > maxCount) {\n      maxCount = counts[tabWidth];\n      result = tabWidth;\n    }\n  }\n\n  return result;\n};\n\nexports.defaults = function (obj) {\n  var len = arguments.length;\n  var extension;\n\n  for (var i = 1; i < len; ++i) {\n    if (extension = arguments[i]) {\n      for (var key in extension) {\n        if (hasOwn.call(extension, key) && !hasOwn.call(obj, key)) {\n          obj[key] = extension[key];\n        }\n      }\n    }\n  }\n\n  return obj;\n}; // tag nodes with source code locations\n\n\nexports.withLoc = function (node, loc) {\n  node.loc = loc;\n  return node;\n};","var babel = require('babel-core');\n\nvar _require = require(\"../src/staticAnalysis\"),\n    dependenciesVisitor = _require.dependenciesVisitor,\n    initConfigVisitor = _require.initConfigVisitor,\n    storeContinuationsVisitor = _require.storeContinuationsVisitor,\n    tryCatchVisitor = _require.tryCatchVisitor,\n    ifBlockVisitor = _require.ifBlockVisitor;\n\nfunction restoreHeap(restore) {\n  var snapshot;\n  heap.snapshots.map(function (element) {\n    if (element.timePointId == restore) snapshot = element;\n  });\n  dependencies.map(function (key) {\n    eval(\"\".concat(key.name, \" = document.getElementById('input-\").concat(key.name, \"').value || undefined ||\\xA0snapshot.\").concat(key.name, \";\"));\n  });\n}\n\nmodule.exports = {\n  init: function init(inputCode) {\n    var src = require(\"../index\")(inputCode, [dependenciesVisitor, tryCatchVisitor], true).code;\n\n    var _babel$transform = babel.transform(src, {\n      plugins: [ifBlockVisitor, initConfigVisitor, storeContinuationsVisitor]\n    }),\n        code = _babel$transform.code;\n\n    code = \"function addCont(cont, continuations, originalId){\\n      let counter = 0;\\n      let id = originalId;\\n      while(continuations[id]){\\n          id = originalId + (++counter);\\n      }\\n      continuations[id] = cont;\\n    }\" + code;\n\n    var compile = require(\"../unwinder/bin/compile.js\");\n\n    var unwindedCode = compile(code);\n\n    try {\n      console.log(\"%cStart first execution\", \"background: #222; color: cyan\");\n      eval(unwindedCode);\n      console.log(\"%cFinish first execution\", \"background: #222; color: cyan\");\n    } catch (e) {\n      console.log(e, \"Error from VM\");\n    }\n  },\n  invokeContinuation: function invokeContinuation(kont) {\n    restoreHeap(kont);\n\n    try {\n      // console.log([continuations, heap])\n      console.log(\"%cStart TimePoint \".concat(kont), \"background: #222; color: #bada55\");\n      eval(\"let kontAux = continuations.kont\".concat(kont, \"; \\n        continuations.kont\").concat(kont, \"(); \\n        continuations.kont\").concat(kont, \" = kontAux\"));\n      console.log(\"%cEnd TimePoint \".concat(kont), \"background: #222; color: #bada55\");\n      console.log([continuations, heap]);\n    } catch (e) {\n      console.log(e, \"Error from VM\");\n    }\n  }\n};","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 377;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 391;","global.heap = {};\nheap.snapshots = [];\nmodule.exports = {\n  addDependencies: function addDependencies(dependencies) {\n    heap.dependencies = dependencies;\n  },\n  heapSnapshot: function heapSnapshot(id) {\n    var snapshot = {\n      flag: false,\n      loop: false,\n      timePointId: ''\n    };\n    var counter = 0;\n    var originId = id;\n\n    while (heap.snapshots.find(function (element) {\n      return element.timePointId == id;\n    })) {\n      if (!snapshot.loop) {\n        snapshot.loop = true;\n      }\n\n      id = originId + ++counter;\n    }\n\n    snapshot.timePointId = id;\n\n    if (!snapshot.flag) {\n      snapshot.flag = true;\n      heap.dependencies.map(function (dependecy) {\n        snapshot[\"\".concat(dependecy.name)] = global[dependecy.name.toString()];\n      });\n      heap.snapshots.push(snapshot);\n    }\n  }\n};","/**\n * Copyright (c) 2013, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\nvar assert = require(\"assert\");\n\nvar path = require(\"path\");\n\nvar types = require(\"ast-types\");\n\nvar b = types.builders;\n\nvar transform = require(\"./lib/visit\").transform;\n\nvar utils = require(\"./lib/util\");\n\nvar recast = require(\"recast\");\n\nvar esprimaHarmony = require(\"esprima\");\n\nvar genFunExp = /\\bfunction\\s*\\*/;\nvar blockBindingExp = /\\b(let|const)\\s+/;\nassert.ok(/harmony/.test(esprimaHarmony.version), \"Bad esprima version: \" + esprimaHarmony.version);\n\nfunction regenerator(source, options) {\n  options = utils.defaults(options || {}, {\n    supportBlockBinding: true\n  });\n  var supportBlockBinding = !!options.supportBlockBinding;\n\n  if (supportBlockBinding) {\n    if (!blockBindingExp.test(source)) {\n      supportBlockBinding = false;\n    }\n  }\n\n  var recastOptions = {\n    tabWidth: utils.guessTabWidth(source),\n    // Use the harmony branch of Esprima that installs with regenerator\n    // instead of the master branch that recast provides.\n    esprima: esprimaHarmony,\n    range: supportBlockBinding,\n    loc: true\n  };\n  var recastAst = recast.parse(source, recastOptions);\n  var ast = recastAst.program; // Transpile let/const into var declarations.\n\n  if (supportBlockBinding) {\n    var defsResult = require(\"defs\")(ast, {\n      ast: true,\n      disallowUnknownReferences: false,\n      disallowDuplicated: false,\n      disallowVars: false,\n      loopClosures: \"iife\"\n    });\n\n    if (defsResult.errors) {\n      throw new Error(defsResult.errors.join(\"\\n\"));\n    }\n  }\n\n  var transformed = transform(ast, options);\n  recastAst.program = transformed.ast;\n  var appendix = '';\n\n  if (options.includeDebug) {\n    var body = recastAst.program.body;\n    body.unshift.apply(body, transformed.debugAST);\n  }\n\n  return {\n    code: recast.print(recastAst, recastOptions).code + '\\n' + appendix,\n    debugInfo: transformed.debugInfo\n  };\n} // To modify an AST directly, call require(\"regenerator\").transform(ast).\n\n\nregenerator.transform = transform;\nregenerator.runtime = {\n  dev: path.join(__dirname, \"runtime\", \"vm.js\"),\n  min: path.join(__dirname, \"runtime\", \"min.js\")\n}; // To transform a string of ES6 code, call require(\"regenerator\")(source);\n\nmodule.exports = regenerator;","/**\n * Copyright (c) 2013, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\"use strict\";\n\nvar assert = require(\"assert\");\n\nvar types = require(\"ast-types\");\n\nvar recast = require(\"recast\");\n\nvar isArray = types.builtInTypes.array;\nvar b = types.builders;\nvar n = types.namedTypes;\n\nvar leap = require(\"./leap\");\n\nvar meta = require(\"./meta\");\n\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nvar withLoc = require(\"./util\").withLoc;\n\nfunction makeASTGenerator(code) {\n  return function () {\n    // TODO: optimize it so it doesn't always have to parse it\n    var ast = b.blockStatement(recast.parse(code).program.body);\n    var args = arguments;\n    return types.traverse(ast, function (node) {\n      if (n.Identifier.check(node) && node.name[0] === '$') {\n        var idx = parseInt(node.name.slice(1));\n        return this.replace(args[idx - 1]);\n      }\n    });\n  };\n}\n\nvar makeSetBreakpointAST = makeASTGenerator('VM.hasBreakpoints = true;\\nVM.machineBreaks[$1][$2] = true;');\n\nfunction Emitter(debugId, debugInfo) {\n  assert.ok(this instanceof Emitter);\n  this.tmpId = 0;\n  this.maxTmpId = 0;\n  Object.defineProperties(this, {\n    // An append-only list of Statements that grows each time this.emit is\n    // called.\n    listing: {\n      value: []\n    },\n    // A sparse array whose keys correspond to locations in this.listing\n    // that have been marked as branch/jump targets.\n    marked: {\n      value: [true]\n    },\n    // Every location has a source location mapping\n    sourceLocations: {\n      value: [true]\n    },\n    // The last location will be marked when this.getDispatchLoop is\n    // called.\n    finalLoc: {\n      value: loc()\n    },\n    debugId: {\n      value: debugId\n    },\n    debugInfo: {\n      value: debugInfo\n    }\n  }); // The .leapManager property needs to be defined by a separate\n  // defineProperties call so that .finalLoc will be visible to the\n  // leap.LeapManager constructor.\n\n  Object.defineProperties(this, {\n    // Each time we evaluate the body of a loop, we tell this.leapManager\n    // to enter a nested loop context that determines the meaning of break\n    // and continue statements therein.\n    leapManager: {\n      value: new leap.LeapManager(this)\n    }\n  });\n}\n\nvar Ep = Emitter.prototype;\nexports.Emitter = Emitter; // Offsets into this.listing that could be used as targets for branches or\n// jumps are represented as numeric Literal nodes. This representation has\n// the amazingly convenient benefit of allowing the exact value of the\n// location to be determined at any time, even after generating code that\n// refers to the location.\n\nfunction loc() {\n  var lit = b.literal(-1); // A little hacky, but mark is as a location object so we can do\n  // some quick checking later (see resolveEmptyJumps)\n\n  lit._location = true;\n  return lit;\n} // Sets the exact value of the given location to the offset of the next\n// Statement emitted.\n\n\nEp.mark = function (loc) {\n  n.Literal.assert(loc);\n  var index = this.listing.length;\n  loc.value = index;\n  this.marked[index] = true;\n  return loc;\n};\n\nEp.getLastMark = function () {\n  var index = this.listing.length;\n\n  while (index > 0 && !this.marked[index]) {\n    index--;\n  }\n\n  return index;\n};\n\nEp.markAndBreak = function () {\n  var next = loc();\n  this.emitAssign(b.identifier('$__next'), next);\n  this.emit(b.breakStatement(null), true);\n  this.mark(next);\n};\n\nEp.emit = function (node, internal) {\n  if (n.Expression.check(node)) {\n    node = withLoc(b.expressionStatement(node), node.loc);\n  }\n\n  n.Statement.assert(node);\n  this.listing.push(node);\n\n  if (!internal) {\n    if (!node.loc) {\n      throw new Error(\"source location missing: \" + JSON.stringify(node));\n    } else {\n      this.debugInfo.addSourceLocation(this.debugId, node.loc, this.listing.length - 1);\n    }\n  }\n}; // Shorthand for emitting assignment statements. This will come in handy\n// for assignments to temporary variables.\n\n\nEp.emitAssign = function (lhs, rhs, loc) {\n  this.emit(this.assign(lhs, rhs, loc), !loc);\n  return lhs;\n}; // Shorthand for an assignment statement.\n\n\nEp.assign = function (lhs, rhs, loc) {\n  var node = b.expressionStatement(b.assignmentExpression(\"=\", lhs, rhs));\n  node.loc = loc;\n  return node;\n};\n\nEp.declareVar = function (name, init, loc) {\n  return withLoc(b.variableDeclaration('var', [b.variableDeclarator(b.identifier(name), init)]), loc);\n};\n\nEp.getProperty = function (obj, prop, computed, loc) {\n  return withLoc(b.memberExpression(typeof obj === 'string' ? b.identifier(obj) : obj, typeof prop === 'string' ? b.identifier(prop) : prop, !!computed), loc);\n};\n\nEp.vmProperty = function (name, loc) {\n  var node = b.memberExpression(b.identifier('VM'), b.identifier(name), false);\n  node.loc = loc;\n  return node;\n};\n\nEp.clearPendingException = function (assignee, loc) {\n  var cp = this.vmProperty(\"error\");\n\n  if (assignee) {\n    this.emitAssign(assignee, cp, loc);\n  }\n\n  this.emitAssign(cp, b.literal(null));\n}; // Emits code for an unconditional jump to the given location, even if the\n// exact value of the location is not yet known.\n\n\nEp.jump = function (toLoc) {\n  this.emitAssign(b.identifier('$__next'), toLoc);\n  this.emit(b.breakStatement(), true);\n}; // Conditional jump.\n\n\nEp.jumpIf = function (test, toLoc, srcLoc) {\n  n.Expression.assert(test);\n  n.Literal.assert(toLoc);\n  this.emit(withLoc(b.ifStatement(test, b.blockStatement([this.assign(b.identifier('$__next'), toLoc), b.breakStatement()])), srcLoc));\n}; // Conditional jump, with the condition negated.\n\n\nEp.jumpIfNot = function (test, toLoc, srcLoc) {\n  n.Expression.assert(test);\n  n.Literal.assert(toLoc);\n  this.emit(withLoc(b.ifStatement(b.unaryExpression(\"!\", test), b.blockStatement([this.assign(b.identifier('$__next'), toLoc), b.breakStatement()])), srcLoc));\n}; // Make temporary ids. They should be released when not needed anymore\n// so that we can generate as few of them as possible.\n\n\nEp.getTempVar = function () {\n  this.tmpId++;\n\n  if (this.tmpId > this.maxTmpId) {\n    this.maxTmpId = this.tmpId;\n  }\n\n  return b.identifier(\"$__t\" + this.tmpId);\n};\n\nEp.currentTempId = function () {\n  return this.tmpId;\n};\n\nEp.releaseTempVar = function () {\n  this.tmpId--;\n};\n\nEp.numTempVars = function () {\n  return this.maxTmpId;\n};\n\nEp.withTempVars = function (cb) {\n  var prevId = this.tmpId;\n  var res = cb();\n  this.tmpId = prevId;\n  return res;\n};\n\nEp.getMachine = function (funcName, varNames) {\n  return this.getDispatchLoop(funcName, varNames);\n};\n\nEp.resolveEmptyJumps = function () {\n  var self = this;\n  var forwards = {}; // TODO: this is actually broken now since we removed the $ctx\n  // variable\n\n  self.listing.forEach(function (stmt, i) {\n    if (self.marked.hasOwnProperty(i) && self.marked.hasOwnProperty(i + 2) && (n.ReturnStatement.check(self.listing[i + 1]) || n.BreakStatement.check(self.listing[i + 1])) && n.ExpressionStatement.check(stmt) && n.AssignmentExpression.check(stmt.expression) && n.MemberExpression.check(stmt.expression.left) && stmt.expression.left.object.name == '$ctx' && stmt.expression.left.property.name == '$__next') {\n      forwards[i] = stmt.expression.right; // TODO: actually remove these cases from the output\n    }\n  });\n  types.traverse(self.listing, function (node) {\n    if (n.Literal.check(node) && node._location && forwards.hasOwnProperty(node.value)) {\n      this.replace(forwards[node.value]);\n    }\n  });\n}; // Turns this.listing into a loop of the form\n//\n//   while (1) switch (context.next) {\n//   case 0:\n//   ...\n//   case n:\n//     return context.stop();\n//   }\n//\n// Each marked location in this.listing will correspond to one generated\n// case statement.\n\n\nEp.getDispatchLoop = function (funcName, varNames) {\n  var self = this; // If we encounter a break, continue, or return statement in a switch\n  // case, we can skip the rest of the statements until the next case.\n\n  var alreadyEnded = false,\n      current,\n      cases = []; // If a case statement will just forward to another location, make\n  // the original loc jump straight to it\n\n  self.resolveEmptyJumps();\n  self.listing.forEach(function (stmt, i) {\n    if (self.marked.hasOwnProperty(i)) {\n      cases.push(b.switchCase(b.literal(i), current = []));\n      alreadyEnded = false;\n    }\n\n    if (!alreadyEnded) {\n      current.push(stmt);\n      if (isSwitchCaseEnder(stmt)) alreadyEnded = true;\n    }\n  }); // Now that we know how many statements there will be in this.listing,\n  // we can finally resolve this.finalLoc.value.\n\n  this.finalLoc.value = this.listing.length;\n  this.debugInfo.addFinalLocation(this.debugId, this.finalLoc.value);\n  this.debugInfo.addStepIds(this.debugId, this.marked.reduce(function (acc, val, i) {\n    if (val) {\n      acc.push(i);\n    }\n\n    return acc;\n  }, []));\n  ;\n  cases.push.apply(cases, [b.switchCase(null, []), b.switchCase(this.finalLoc, [b.returnStatement(null)])]); // add an \"eval\" location\n\n  cases.push(b.switchCase(b.literal(-1), [self.assign(self.vmProperty('evalResult'), b.callExpression(b.identifier('eval'), [self.vmProperty('evalArg')])), b.throwStatement(b.newExpression(b.identifier('$ContinuationExc'), []))]));\n  return [// the state machine\n  b.whileStatement(b.literal(1), b.blockStatement([b.ifStatement(b.logicalExpression('&&', self.vmProperty('hasBreakpoints'), b.binaryExpression('!==', self.getProperty(self.getProperty(self.vmProperty('machineBreaks'), b.literal(this.debugId), true), b.identifier('$__next'), true), // is identifier right here? it doesn't seem right\n  b.identifier('undefined'))), b.throwStatement(b.newExpression(b.identifier('$ContinuationExc'), []))), b.switchStatement(b.identifier('$__next'), cases), b.ifStatement(self.vmProperty('stepping'), b.throwStatement(b.newExpression(b.identifier('$ContinuationExc'), [])))]))];\n}; // See comment above re: alreadyEnded.\n\n\nfunction isSwitchCaseEnder(stmt) {\n  return n.BreakStatement.check(stmt) || n.ContinueStatement.check(stmt) || n.ReturnStatement.check(stmt) || n.ThrowStatement.check(stmt);\n} // an \"atomic\" expression is one that should execute within one step\n// of the VM\n\n\nfunction isAtomic(expr) {\n  return n.Literal.check(expr) || n.Identifier.check(expr) || n.ThisExpression.check(expr) || n.MemberExpression.check(expr) && !expr.computed;\n} // No destructive modification of AST nodes.\n\n\nEp.explode = function (path, ignoreResult) {\n  assert.ok(path instanceof types.NodePath);\n  var node = path.value;\n  var self = this;\n  n.Node.assert(node);\n  if (n.Statement.check(node)) return self.explodeStatement(path);\n  if (n.Expression.check(node)) return self.explodeExpression(path, ignoreResult);\n  if (n.Declaration.check(node)) throw getDeclError(node);\n\n  switch (node.type) {\n    case \"Program\":\n      return path.get(\"body\").map(self.explodeStatement, self);\n\n    case \"VariableDeclarator\":\n      throw getDeclError(node);\n    // These node types should be handled by their parent nodes\n    // (ObjectExpression, SwitchStatement, and TryStatement, respectively).\n\n    case \"Property\":\n    case \"SwitchCase\":\n    case \"CatchClause\":\n      throw new Error(node.type + \" nodes should be handled by their parents\");\n\n    default:\n      throw new Error(\"unknown Node of type \" + JSON.stringify(node.type));\n  }\n};\n\nfunction getDeclError(node) {\n  return new Error(\"all declarations should have been transformed into \" + \"assignments before the Exploder began its work: \" + JSON.stringify(node));\n}\n\nEp.explodeStatement = function (path, labelId) {\n  assert.ok(path instanceof types.NodePath);\n  var stmt = path.value;\n  var self = this;\n  n.Statement.assert(stmt);\n\n  if (labelId) {\n    n.Identifier.assert(labelId);\n  } else {\n    labelId = null;\n  } // Explode BlockStatement nodes even if they do not contain a yield,\n  // because we don't want or need the curly braces.\n\n\n  if (n.BlockStatement.check(stmt)) {\n    return path.get(\"body\").each(self.explodeStatement, self);\n  } // if (!meta.containsLeap(stmt)) {\n  //   // Technically we should be able to avoid emitting the statement\n  //   // altogether if !meta.hasSideEffects(stmt), but that leads to\n  //   // confusing generated code (for instance, `while (true) {}` just\n  //   // disappears) and is probably a more appropriate job for a dedicated\n  //   // dead code elimination pass.\n  //   self.emit(stmt);\n  //   return;\n  // }\n\n\n  switch (stmt.type) {\n    case \"ExpressionStatement\":\n      self.explodeExpression(path.get(\"expression\"), true);\n      break;\n\n    case \"LabeledStatement\":\n      self.explodeStatement(path.get(\"body\"), stmt.label);\n      break;\n\n    case \"WhileStatement\":\n      var before = loc();\n      var after = loc();\n      self.mark(before);\n      self.jumpIfNot(self.explodeExpression(path.get(\"test\")), after, path.get(\"test\").node.loc);\n      self.markAndBreak();\n      self.leapManager.withEntry(new leap.LoopEntry(after, before, labelId), function () {\n        self.explodeStatement(path.get(\"body\"));\n      });\n      self.jump(before);\n      self.mark(after);\n      break;\n\n    case \"DoWhileStatement\":\n      var first = loc();\n      var test = loc();\n      var after = loc();\n      self.mark(first);\n      self.leapManager.withEntry(new leap.LoopEntry(after, test, labelId), function () {\n        self.explode(path.get(\"body\"));\n      });\n      self.mark(test);\n      self.jumpIf(self.explodeExpression(path.get(\"test\")), first, path.get(\"test\").node.loc);\n      self.emitAssign(b.identifier('$__next'), after);\n      self.emit(b.breakStatement(), true);\n      self.mark(after);\n      break;\n\n    case \"ForStatement\":\n      var head = loc();\n      var update = loc();\n      var after = loc();\n\n      if (stmt.init) {\n        // We pass true here to indicate that if stmt.init is an expression\n        // then we do not care about its result.\n        self.explode(path.get(\"init\"), true);\n      }\n\n      self.mark(head);\n\n      if (stmt.test) {\n        self.jumpIfNot(self.explodeExpression(path.get(\"test\")), after, path.get(\"test\").node.loc);\n      } else {// No test means continue unconditionally.\n      }\n\n      this.markAndBreak();\n      self.leapManager.withEntry(new leap.LoopEntry(after, update, labelId), function () {\n        self.explodeStatement(path.get(\"body\"));\n      });\n      self.mark(update);\n\n      if (stmt.update) {\n        // We pass true here to indicate that if stmt.update is an\n        // expression then we do not care about its result.\n        self.explode(path.get(\"update\"), true);\n      }\n\n      self.jump(head);\n      self.mark(after);\n      break;\n\n    case \"ForInStatement\":\n      n.Identifier.assert(stmt.left);\n      var head = loc();\n      var after = loc();\n      var keys = self.emitAssign(self.getTempVar(), b.callExpression(self.vmProperty(\"keys\"), [self.explodeExpression(path.get(\"right\"))]), path.get(\"right\").node.loc);\n      var tmpLoc = loc();\n      self.mark(tmpLoc);\n      self.mark(head);\n      self.jumpIfNot(b.memberExpression(keys, b.identifier(\"length\"), false), after, stmt.right.loc);\n      self.emitAssign(stmt.left, b.callExpression(b.memberExpression(keys, b.identifier(\"pop\"), false), []), stmt.left.loc);\n      self.markAndBreak();\n      self.leapManager.withEntry(new leap.LoopEntry(after, head, labelId), function () {\n        self.explodeStatement(path.get(\"body\"));\n      });\n      self.jump(head);\n      self.mark(after);\n      self.releaseTempVar();\n      break;\n\n    case \"BreakStatement\":\n      self.leapManager.emitBreak(stmt.label);\n      break;\n\n    case \"ContinueStatement\":\n      self.leapManager.emitContinue(stmt.label);\n      break;\n\n    case \"SwitchStatement\":\n      // Always save the discriminant into a temporary variable in case the\n      // test expressions overwrite values like context.sent.\n      var disc = self.emitAssign(self.getTempVar(), self.explodeExpression(path.get(\"discriminant\")));\n      var after = loc();\n      var defaultLoc = loc();\n      var condition = defaultLoc;\n      var caseLocs = []; // If there are no cases, .cases might be undefined.\n\n      var cases = stmt.cases || [];\n\n      for (var i = cases.length - 1; i >= 0; --i) {\n        var c = cases[i];\n        n.SwitchCase.assert(c);\n\n        if (c.test) {\n          condition = b.conditionalExpression(b.binaryExpression(\"===\", disc, c.test), caseLocs[i] = loc(), condition);\n        } else {\n          caseLocs[i] = defaultLoc;\n        }\n      }\n\n      self.jump(self.explodeExpression(new types.NodePath(condition, path, \"discriminant\")));\n      self.leapManager.withEntry(new leap.SwitchEntry(after), function () {\n        path.get(\"cases\").each(function (casePath) {\n          var c = casePath.value;\n          var i = casePath.name;\n          self.mark(caseLocs[i]);\n          casePath.get(\"consequent\").each(self.explodeStatement, self);\n        });\n      });\n      self.releaseTempVar();\n      self.mark(after);\n\n      if (defaultLoc.value === -1) {\n        self.mark(defaultLoc);\n        assert.strictEqual(after.value, defaultLoc.value);\n      }\n\n      break;\n\n    case \"IfStatement\":\n      var elseLoc = stmt.alternate && loc();\n      var after = loc();\n      self.jumpIfNot(self.explodeExpression(path.get(\"test\")), elseLoc || after, path.get(\"test\").node.loc);\n      self.markAndBreak();\n      self.explodeStatement(path.get(\"consequent\"));\n\n      if (elseLoc) {\n        self.jump(after);\n        self.mark(elseLoc);\n        self.explodeStatement(path.get(\"alternate\"));\n      }\n\n      self.mark(after);\n      break;\n\n    case \"ReturnStatement\":\n      var arg = path.get('argument');\n      var tmp = self.getTempVar();\n      var after = loc();\n      self.emitAssign(b.identifier('$__next'), after, arg.node.loc);\n      self.emitAssign(tmp, this.explodeExpression(arg)); // TODO: breaking here allowing stepping to stop on return.\n      // Not sure if that's desirable or not.\n      // self.emit(b.breakStatement(), true);\n\n      self.mark(after);\n      self.releaseTempVar();\n      self.emit(withLoc(b.returnStatement(tmp), path.node.loc));\n      break;\n\n    case \"WithStatement\":\n      throw new Error(node.type + \" not supported in generator functions.\");\n\n    case \"TryStatement\":\n      var after = loc();\n      var handler = stmt.handler;\n\n      if (!handler && stmt.handlers) {\n        handler = stmt.handlers[0] || null;\n      }\n\n      var catchLoc = handler && loc();\n      var catchEntry = catchLoc && new leap.CatchEntry(catchLoc, handler.param);\n      var finallyLoc = stmt.finalizer && loc();\n      var finallyEntry = finallyLoc && new leap.FinallyEntry(finallyLoc, self.getTempVar());\n\n      if (finallyEntry) {\n        // Finally blocks examine their .nextLocTempVar property to figure\n        // out where to jump next, so we must set that property to the\n        // fall-through location, by default.\n        self.emitAssign(finallyEntry.nextLocTempVar, after, path.node.loc);\n      }\n\n      var tryEntry = new leap.TryEntry(catchEntry, finallyEntry); // Push information about this try statement so that the runtime can\n      // figure out what to do if it gets an uncaught exception.\n\n      self.pushTry(tryEntry, path.node.loc);\n      self.markAndBreak();\n      self.leapManager.withEntry(tryEntry, function () {\n        self.explodeStatement(path.get(\"block\"));\n\n        if (catchLoc) {\n          // If execution leaves the try block normally, the associated\n          // catch block no longer applies.\n          self.popCatch(catchEntry, handler.loc);\n\n          if (finallyLoc) {\n            // If we have both a catch block and a finally block, then\n            // because we emit the catch block first, we need to jump over\n            // it to the finally block.\n            self.jump(finallyLoc);\n          } else {\n            // If there is no finally block, then we need to jump over the\n            // catch block to the fall-through location.\n            self.jump(after);\n          }\n\n          self.mark(catchLoc); // On entering a catch block, we must not have exited the\n          // associated try block normally, so we won't have called\n          // context.popCatch yet.  Call it here instead.\n\n          self.popCatch(catchEntry, handler.loc); // self.markAndBreak();\n\n          var bodyPath = path.get(\"handler\", \"body\");\n          var safeParam = self.getTempVar();\n          self.clearPendingException(safeParam, handler.loc);\n          self.markAndBreak();\n          var catchScope = bodyPath.scope;\n          var catchParamName = handler.param.name;\n          n.CatchClause.assert(catchScope.node);\n          assert.strictEqual(catchScope.lookup(catchParamName), catchScope);\n          types.traverse(bodyPath, function (node) {\n            if (n.Identifier.check(node) && node.name === catchParamName && this.scope.lookup(catchParamName) === catchScope) {\n              this.replace(safeParam);\n              return false;\n            }\n          });\n          self.leapManager.withEntry(catchEntry, function () {\n            self.explodeStatement(bodyPath);\n          });\n          self.releaseTempVar();\n        }\n\n        if (finallyLoc) {\n          self.mark(finallyLoc);\n          self.popFinally(finallyEntry, stmt.finalizer.loc);\n          self.markAndBreak();\n          self.leapManager.withEntry(finallyEntry, function () {\n            self.explodeStatement(path.get(\"finalizer\"));\n          });\n          self.jump(finallyEntry.nextLocTempVar);\n          self.releaseTempVar();\n        }\n      });\n      self.mark(after);\n      break;\n\n    case \"ThrowStatement\":\n      self.emit(withLoc(b.throwStatement(self.explodeExpression(path.get(\"argument\"))), path.node.loc));\n      break;\n\n    case \"DebuggerStatement\":\n      var after = loc();\n      self.emit(makeSetBreakpointAST(b.literal(this.debugId), after), true);\n      self.emitAssign(b.identifier('$__next'), after);\n      self.emit(b.breakStatement(), true);\n      self.mark(after);\n      after = loc();\n      self.emitAssign(b.identifier('$__next'), after, path.node.loc);\n      self.emit(b.breakStatement(), true);\n      self.mark(after);\n      break;\n\n    default:\n      throw new Error(\"unknown Statement of type \" + JSON.stringify(stmt.type));\n  }\n}; // Emit a runtime call to context.pushTry(catchLoc, finallyLoc) so that\n// the runtime wrapper can dispatch uncaught exceptions appropriately.\n\n\nEp.pushTry = function (tryEntry, loc) {\n  assert.ok(tryEntry instanceof leap.TryEntry);\n  var nil = b.literal(null);\n  var catchEntry = tryEntry.catchEntry;\n  var finallyEntry = tryEntry.finallyEntry;\n  var method = this.vmProperty(\"pushTry\");\n  var args = [b.identifier('tryStack'), catchEntry && catchEntry.firstLoc || nil, finallyEntry && finallyEntry.firstLoc || nil, finallyEntry && b.literal(parseInt(finallyEntry.nextLocTempVar.name.replace('$__t', ''))) || nil];\n  this.emit(withLoc(b.callExpression(method, args), loc));\n}; // Emit a runtime call to context.popCatch(catchLoc) so that the runtime\n// wrapper knows when a catch block reported to pushTry no longer applies.\n\n\nEp.popCatch = function (catchEntry, loc) {\n  var catchLoc;\n\n  if (catchEntry) {\n    assert.ok(catchEntry instanceof leap.CatchEntry);\n    catchLoc = catchEntry.firstLoc;\n  } else {\n    assert.strictEqual(catchEntry, null);\n    catchLoc = b.literal(null);\n  } // TODO Think about not emitting anything when catchEntry === null.  For\n  // now, emitting context.popCatch(null) is good for sanity checking.\n\n\n  this.emit(withLoc(b.callExpression(this.vmProperty(\"popCatch\"), [b.identifier('tryStack'), catchLoc]), loc));\n}; // Emit a runtime call to context.popFinally(finallyLoc) so that the\n// runtime wrapper knows when a finally block reported to pushTry no\n// longer applies.\n\n\nEp.popFinally = function (finallyEntry, loc) {\n  var finallyLoc;\n\n  if (finallyEntry) {\n    assert.ok(finallyEntry instanceof leap.FinallyEntry);\n    finallyLoc = finallyEntry.firstLoc;\n  } else {\n    assert.strictEqual(finallyEntry, null);\n    finallyLoc = b.literal(null);\n  } // TODO Think about not emitting anything when finallyEntry === null.\n  // For now, emitting context.popFinally(null) is good for sanity\n  // checking.\n\n\n  this.emit(withLoc(b.callExpression(this.vmProperty(\"popFinally\"), [b.identifier('tryStack'), finallyLoc]), loc));\n};\n\nEp.explodeExpression = function (path, ignoreResult) {\n  assert.ok(path instanceof types.NodePath);\n  var expr = path.value;\n\n  if (expr) {\n    n.Expression.assert(expr);\n  } else {\n    return expr;\n  }\n\n  var self = this;\n  var result; // Used optionally by several cases below.\n\n  function finish(expr) {\n    n.Expression.assert(expr);\n\n    if (ignoreResult) {\n      var after = loc();\n      self.emit(expr);\n      self.emitAssign(b.identifier('$__next'), after);\n      self.emit(b.breakStatement(), true);\n      self.mark(after);\n    } else {\n      return expr;\n    }\n  } // If the expression does not contain a leap, then we either emit the\n  // expression as a standalone statement or return it whole.\n  // if (!meta.containsLeap(expr)) {\n  //   return finish(expr);\n  // }\n  // If any child contains a leap (such as a yield or labeled continue or\n  // break statement), then any sibling subexpressions will almost\n  // certainly have to be exploded in order to maintain the order of their\n  // side effects relative to the leaping child(ren).\n\n\n  var hasLeapingChildren = meta.containsLeap.onlyChildren(expr); // In order to save the rest of explodeExpression from a combinatorial\n  // trainwreck of special cases, explodeViaTempVar is responsible for\n  // deciding when a subexpression needs to be \"exploded,\" which is my\n  // very technical term for emitting the subexpression as an assignment\n  // to a temporary variable and the substituting the temporary variable\n  // for the original subexpression. Think of exploded view diagrams, not\n  // Michael Bay movies. The point of exploding subexpressions is to\n  // control the precise order in which the generated code realizes the\n  // side effects of those subexpressions.\n\n  function explodeViaTempVar(tempVar, childPath, ignoreChildResult, keepTempVar) {\n    assert.ok(childPath instanceof types.NodePath);\n    assert.ok(!ignoreChildResult || !tempVar, \"Ignoring the result of a child expression but forcing it to \" + \"be assigned to a temporary variable?\");\n\n    if (isAtomic(childPath.node)) {\n      // we still explode it because only the top-level expression is\n      // atomic, sub-expressions may not be\n      return self.explodeExpression(childPath, ignoreChildResult);\n    } else if (!ignoreChildResult) {\n      var shouldRelease = !tempVar && !keepTempVar;\n      tempVar = tempVar || self.getTempVar();\n      var result = self.explodeExpression(childPath, ignoreChildResult); // always mark!\n\n      result = self.emitAssign(tempVar, result, childPath.node.loc);\n      self.markAndBreak();\n\n      if (shouldRelease) {\n        self.releaseTempVar();\n      }\n    }\n\n    return result;\n  } // If ignoreResult is true, then we must take full responsibility for\n  // emitting the expression with all its side effects, and we should not\n  // return a result.\n\n\n  switch (expr.type) {\n    case \"MemberExpression\":\n      return finish(withLoc(b.memberExpression(self.explodeExpression(path.get(\"object\")), expr.computed ? explodeViaTempVar(null, path.get(\"property\"), false, true) : expr.property, expr.computed), path.node.loc));\n\n    case \"CallExpression\":\n      var oldCalleePath = path.get(\"callee\");\n      var callArgs = path.get(\"arguments\");\n\n      if (oldCalleePath.node.type === \"Identifier\" && oldCalleePath.node.name === \"callCC\") {\n        callArgs = [new types.NodePath(withLoc(b.callExpression(b.memberExpression(b.identifier(\"VM\"), b.identifier(\"callCC\"), false), []), oldCalleePath.node.loc))];\n        oldCalleePath = path.get(\"arguments\").get(0);\n      }\n\n      var newCallee = self.explodeExpression(oldCalleePath);\n      var r = self.withTempVars(function () {\n        var after = loc();\n        var args = callArgs.map(function (argPath) {\n          return explodeViaTempVar(null, argPath, false, true);\n        });\n        var tmp = self.getTempVar();\n        var callee = newCallee;\n        self.emitAssign(b.identifier('$__next'), after, path.node.loc);\n        self.emitAssign(b.identifier('$__tmpid'), b.literal(self.currentTempId()));\n        self.emitAssign(tmp, b.callExpression(callee, args));\n        self.emit(b.breakStatement(), true);\n        self.mark(after);\n        return tmp;\n      });\n      return r;\n\n    case \"NewExpression\":\n      // TODO: this should be the last major expression type I need to\n      // fix up to be able to trace/step through. can't call native new\n      return self.withTempVars(function () {\n        return finish(b.newExpression(explodeViaTempVar(null, path.get(\"callee\"), false, true), path.get(\"arguments\").map(function (argPath) {\n          return explodeViaTempVar(null, argPath, false, true);\n        })));\n      });\n\n    case \"ObjectExpression\":\n      return self.withTempVars(function () {\n        return finish(b.objectExpression(path.get(\"properties\").map(function (propPath) {\n          return b.property(propPath.value.kind, propPath.value.key, explodeViaTempVar(null, propPath.get(\"value\"), false, true));\n        })));\n      });\n\n    case \"ArrayExpression\":\n      return self.withTempVars(function () {\n        return finish(b.arrayExpression(path.get(\"elements\").map(function (elemPath) {\n          return explodeViaTempVar(null, elemPath, false, true);\n        })));\n      });\n\n    case \"SequenceExpression\":\n      var lastIndex = expr.expressions.length - 1;\n      path.get(\"expressions\").each(function (exprPath) {\n        if (exprPath.name === lastIndex) {\n          result = self.explodeExpression(exprPath, ignoreResult);\n        } else {\n          self.explodeExpression(exprPath, true);\n        }\n      });\n      return result;\n\n    case \"LogicalExpression\":\n      var after = loc();\n      self.withTempVars(function () {\n        if (!ignoreResult) {\n          result = self.getTempVar();\n        }\n\n        var left = explodeViaTempVar(result, path.get(\"left\"), false, true);\n\n        if (expr.operator === \"&&\") {\n          self.jumpIfNot(left, after, path.get(\"left\").node.loc);\n        } else if (expr.operator === \"||\") {\n          self.jumpIf(left, after, path.get(\"left\").node.loc);\n        }\n\n        explodeViaTempVar(result, path.get(\"right\"), ignoreResult, true);\n        self.mark(after);\n      });\n      return result;\n\n    case \"ConditionalExpression\":\n      var elseLoc = loc();\n      var after = loc();\n      var test = self.explodeExpression(path.get(\"test\"));\n      self.jumpIfNot(test, elseLoc, path.get(\"test\").node.loc);\n\n      if (!ignoreResult) {\n        result = self.getTempVar();\n      }\n\n      explodeViaTempVar(result, path.get(\"consequent\"), ignoreResult);\n      self.jump(after);\n      self.mark(elseLoc);\n      explodeViaTempVar(result, path.get(\"alternate\"), ignoreResult);\n      self.mark(after);\n\n      if (!ignoreResult) {\n        self.releaseTempVar();\n      }\n\n      return result;\n\n    case \"UnaryExpression\":\n      return finish(withLoc(b.unaryExpression(expr.operator, // Can't (and don't need to) break up the syntax of the argument.\n      // Think about delete a[b].\n      self.explodeExpression(path.get(\"argument\")), !!expr.prefix), path.node.loc));\n\n    case \"BinaryExpression\":\n      return self.withTempVars(function () {\n        return finish(withLoc(b.binaryExpression(expr.operator, explodeViaTempVar(null, path.get(\"left\"), false, true), explodeViaTempVar(null, path.get(\"right\"), false, true)), path.node.loc));\n      });\n\n    case \"AssignmentExpression\":\n      return finish(withLoc(b.assignmentExpression(expr.operator, self.explodeExpression(path.get(\"left\")), self.explodeExpression(path.get(\"right\"))), path.node.loc));\n\n    case \"UpdateExpression\":\n      return finish(withLoc(b.updateExpression(expr.operator, self.explodeExpression(path.get(\"argument\")), expr.prefix), path.node.loc));\n    // case \"YieldExpression\":\n    //   var after = loc();\n    //   var arg = expr.argument && self.explodeExpression(path.get(\"argument\"));\n    //   if (arg && expr.delegate) {\n    //     var result = self.getTempVar();\n    //     self.emit(b.returnStatement(b.callExpression(\n    //       self.contextProperty(\"delegateYield\"), [\n    //         arg,\n    //         b.literal(result.property.name),\n    //         after\n    //       ]\n    //     )));\n    //     self.mark(after);\n    //     return result;\n    //   }\n    // self.emitAssign(b.identifier('$__next'), after);\n    // self.emit(b.returnStatement(arg || null));\n    // self.mark(after);\n    // return self.contextProperty(\"sent\");\n\n    case \"Identifier\":\n    case \"FunctionExpression\":\n    case \"ArrowFunctionExpression\":\n    case \"ThisExpression\":\n    case \"Literal\":\n      return finish(expr);\n      break;\n\n    default:\n      throw new Error(\"unknown Expression of type \" + JSON.stringify(expr.type));\n  }\n};","import React, { Component, createRef } from \"react\";\nimport \"./App.css\";\n\nimport debuggerDelorean from \"../../src/debugger\";\nimport Layout from \"./components/Layout\";\nimport Console from \"./components/Console\";\nimport Output from \"./components/Output\";\nimport StatusBar from \"./components/StatusBar\";\n\nimport CodeMirror from \"@uiw/react-codemirror\";\nimport \"codemirror/addon/display/autorefresh\";\nimport \"codemirror/addon/comment/comment\";\nimport \"codemirror/addon/edit/matchbrackets\";\nimport \"codemirror/keymap/sublime\";\nimport \"codemirror/theme/neo.css\";\n\nimport example1 from \"../../example/input1\";\nimport example2 from \"../../example/input2\";\nimport example3 from \"../../example/input3\";\n\nglobal.delorean = require(\"../../src/delorean.js\");\nglobal.vm = require(\"../../unwinder/runtime/vm.js\");\n\nclass App extends Component {\n  state = {\n    tabs: [\n      {\n        name: \"repairingBugs.js\",\n        input: example1\n      },\n      {\n        name: \"wastingTimeBugs.js\",\n        input: example2\n      },\n      {\n        name: \"testingScenarios.js\",\n        input: example3\n      }\n    ],\n    tabSelected: \"\",\n    snapshots: [],\n    dependencies: [],\n    code: \"// You can use Delorean here! :)\",\n    isRunning: false,\n    readOnly: false,\n    selected: false,\n    selectedTarget: \"\",\n    timePointValues: {},\n    selectedTimePoint: '',\n  };\n\n  constructor(props){\n    super(props)\n    this.consoleFeed = createRef();\n    this.editor = createRef();\n  }\n\n  updateCode = ev => {\n    if(typeof ev == 'string'){\n      this.setState({\n        code: ev,\n      });\n    } else {\n      this.setState({\n        code: ev.getValue(),\n      });\n    }\n  };\n\n  selectTimePoint = ev => {\n    let id = ev.currentTarget.getAttribute('id')\n\n    console.log(ev.currentTarget)\n    alert(`TimePoint ${id}`)\n\n    global.heap.snapshots.map(el => {\n      if(el.timePointId == ev.currentTarget.getAttribute('id')){\n        this.setState({\n          timePointValues: el,\n          selectedTimePoint: ev.currentTarget.getAttribute('id')\n        })\n      }\n    })\n\n\n    console.log(this.state.selectedTimePoint)\n  }\n\n  selectTab = ev => {\n    if(!this.state.isRunning){\n      let example = this.state.tabs.find(\n        o => o.name === ev.currentTarget.firstChild.getAttribute(\"name\")\n      );\n      this.updateCode(example.input);\n      this.selectTabColor(ev);\n    } else {\n      alert('Sorry, you need stop this execution before change the code! :)')\n    }\n  };\n\n  selectTabColor = ev => {\n    if (this.state.selected) {\n      this.state.selectedTarget.classList.remove(\"selected\");\n    } else {\n      this.setState({\n        selected: true\n      });\n    }\n    ev.currentTarget.classList.add(\"selected\");\n    this.setState({\n      selectedTarget: ev.currentTarget\n    });\n  };\n\n  updateSnapshots = snapshots => {\n    this.setState({\n      snapshots\n    });\n  };\n\n  updateDependencies = dependencies => {\n    this.setState({\n      dependencies\n    });\n  };\n\n  toggleIsRunning = () => {\n    this.setState({\n      isRunning: !this.state.isRunning,\n      readOnly: !this.state.readOnly\n    });\n  };\n\n  executeCode = () => {\n    try {\n      this.toggleIsRunning();\n      debuggerDelorean.init(this.state.code);\n      this.updateDependencies(global.heap.dependencies);\n      this.updateSnapshots(global.heap.snapshots);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  invokeContinuation = (ev) => {\n    this.consoleFeed.current.state.logs = [];\n    // let kont = ev.currentTarget.attributes[\"kont\"].value;\n    debuggerDelorean.invokeContinuation(this.state.selectedTimePoint);\n  };\n  \n  stopExecution = () => {\n    this.consoleFeed.current.state.logs = [];\n    this.editor.current.editor.setOption('readOnly', false);\n    global.heap = {\n      dependencies: {},\n      snapshots: []\n    };\n    global.continuations = {};\n    global.snapshotCounter = 0;\n    this.toggleIsRunning();\n    this.setState({\n      snapshots: [],\n      dependencies: []\n    });\n  };\n\n  render() {\n    var options = {\n      theme: \"neo\",\n      tabSize: 2,\n      keyMap: \"sublime\",\n      mode: \"js\",\n      lineNumbers: true,\n      readOnly: this.state.readOnly\n    };\n    return (\n      <Layout>\n        <StatusBar\n          tabs={this.state.tabs}\n          selectTab={this.selectTab}\n          executeCode={this.executeCode}\n          stopExecution={this.stopExecution}\n          isRunning={this.state.isRunning}\n        />\n        <div className=\"playground-container\">\n          <div className=\"left-panel\">\n            <div className=\"editor-container\">\n              <CodeMirror\n                ref={this.editor}\n                value={this.state.code}\n                options={options}\n                onChange={this.updateCode}\n              />\n            </div>\n            <Console \n              ref={this.consoleFeed} \n            />\n          </div>\n          <div className=\"right-panel\">\n            <Output\n              timePointValues={this.state.timePointValues}\n              snapshots={this.state.snapshots}\n              dependencies={this.state.dependencies}\n              invokeContinuation={this.invokeContinuation}\n              selectTimePoint={this.selectTimePoint}\n            />\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nconst Layout = (props) => {\n    return (\n        <div className=\"layout-container\">\n            {props.children}\n        </div>\n    )\n}\n\nexport default Layout;","import React, { Component } from 'react'\nimport { Hook, Console, Decode } from 'console-feed'\n\nclass ConsoleContainer extends Component {\n  state = {\n    logs: []\n  }\n\n  componentDidMount() {\n    Hook(window.console, log => {\n      this.setState(({ logs }) => ({ logs: [...logs, Decode(log)] }))\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"consolefeed-container\" style={{ backgroundColor: '#242424' }}>\n        <h2 className=\"console-title\">Output  </h2>\n        <div>\n          <Console \n            logs={this.state.logs} \n            variant=\"dark\"\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ConsoleContainer;","import React, { Component } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport Icon from \"@material-ui/core/Icon\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { red } from \"@material-ui/core/colors\";\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n    // margin: \"20px\",\n  },\n  buttonSelected: {\n      backgroundColor: red,\n  },\n  // leftIcon: {\n  //   marginRight: theme.spacing.unit,\n  // },\n  rightIcon: {\n    marginLeft: theme.spacing.unit\n  }\n  // iconSmall: {\n  //   fontSize: 20,\n  // },\n\n});\nclass Output extends Component {\n  state = {\n    timePointValues: {}\n  };\n\n  render() {\n    const markdown = require(\"../markdown\");\n    const { classes } = this.props;\n    const timePointValues = this.props.timePointValues;\n    return (\n      <div>\n        {this.props.snapshots.length !== 0 ? (\n          <div className=\"output-container\">\n            <div className=\"container-buttons\">\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                <h2\n                  style={{\n                    display: \"inline\"\n                  }}\n                >\n                  Time Points\n                </h2>\n                <div\n                  style={{\n                    display: \"inline\"\n                  }}\n                >\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    size=\"small\"\n                    className={classes.button}\n                    onClick={this.props.invokeContinuation}\n                  >\n                    Resume\n                    <Icon className={classes.rightIcon}>\n                      play_circle_filled\n                    </Icon>\n                  </Button>\n                </div>\n              </div>\n              <hr />\n              {this.props.snapshots.map(snapshot => {\n                return (\n                  <Button\n                    kont={snapshot.timePointId}\n                    id={snapshot.timePointId}\n                    key={snapshot.timePointId}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                    // style={{\n                    //   margin: \"5px\"\n                    // }}\n                    onClick={this.props.selectTimePoint}\n                  >\n                    TimePoint {snapshot.timePointId}\n                  </Button>\n                );\n              })}\n            </div>\n            <div className=\"container-inputs\">\n              <h2>Watched Variables</h2>\n              <hr />\n              {this.props.dependencies.map(dependency => {\n                return (\n                  <div key={dependency.name}>\n                    <TextField\n                      id=\"standard-name\"\n                      label={dependency.name}\n                      id={`input-${dependency.name}`}\n                      // defaultValue={}\n                      // value={}\n                      // onChange={this.handleChange('name')}\n                      margin=\"normal\"\n                      style={{\n                        margin: \"5px\"\n                      }}\n                    />\n                    {timePointValues[dependency.name]}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        ) : (\n          <div className=\"markdown-container\">\n            <ReactMarkdown source={markdown} escapeHtml={false} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nOutput.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Output);\n","export default \"delorean.watch(['a', 'c', 'x'])\\nconsole.log(\\\"Start Program 2\\\")\\nb = 7;\\na = b;\\n\\ndelorean.insertTimePoint('A');\\nconsole.log('First continuation', b);\\nc = 0;\\na = c;\\n\\ndelorean.insertTimePoint('B');\\nconsole.log('Second continuation', b);\\n\\nif(b == 7) {\\n    throw [\\\"throw activate in VM\\\", continuations];\\n}\\nconsole.log('End Program');\";","export default \"delorean.watch(['a', 'c', 'x']);\\n\\nfunction delay(ms){\\n    const startPoint = new Date().getTime()\\n    while (new Date().getTime() - startPoint <= ms) { /* wait */}\\n}\\n\\nconsole.log(\\\"Start Program\\\")\\n\\ndelorean.insertTimePoint('A');\\nconsole.log('First TimePoint');\\nvar b = 7;\\n\\nvar t = 0;\\nfor(i = 0; i < 5; ++i){\\n    t += i;\\n    delay(100)\\n    delorean.insertTimePoint('C');\\n    console.log('For TimePoint', i);\\n}\\n\\nif(b == 7) {\\n    throw [\\\"throw activate in VM\\\", continuations];\\n}\\nconsole.log('End Program');\";","export default \"console.log(\\\"Start Program 3\\\")\\nb = 7;\\na = b;\\n\\ndelorean.insertTimePoint('A');\\nconsole.log('First continuation', b);\\nc = 0;\\na = c;\\n\\ndelorean.insertTimePoint('B');\\nconsole.log('Second continuation', b);\\n\\nif(b == 7) {\\n    throw [\\\"throw activate in VM\\\", continuations];\\n}\\nconsole.log('End Program');\";","import React from 'react'\n\nconst Tab = (props) => {\n    return (\n        <div className=\"tab-container\" onClick={props.selectTab}>\n            <h4 name={props.name} >{props.name}</h4>\n        </div>\n    )\n}\n\nexport default Tab;","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Tab from './Tab'\n\nconst styles = theme => ({\n    button: {\n      margin: theme.spacing.unit,\n    },\n    leftIcon: {\n      marginRight: theme.spacing.unit,\n    },\n    rightIcon: {\n      marginLeft: theme.spacing.unit,\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  });\n\nclass StatusBar extends Component {\n    render(){\n        const { classes } = this.props;\n        return(\n            <div className=\"status-bar\">\n                <div className=\"tabs-container\">\n                    {\n                        this.props.tabs.map((tab) => {\n                            return (\n                            <Tab\n                                key={tab.name}\n                                name={tab.name}\n                                input={tab.input}\n                                selectTab={this.props.selectTab}\n                            />\n                            )\n                        })\n                    }\n                </div>\n                <h3>Delorean</h3>\n                {\n                    !this.props.isRunning ? \n\n                    <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={this.props.executeCode}>\n                        RUN!\n                        <Icon className={classes.rightIcon}>play_circle_filled</Icon>\n                    </Button> : \n                    <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={this.props.stopExecution}>\n                        STOP!\n                        <Icon className={classes.rightIcon}>stop</Icon>\n                    </Button>\n                }\n            </div>\n        )\n    }\n}\n\nStatusBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\nexport default withStyles(styles)(StatusBar);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","var WatchVisitor = require('./visitors/watch');\n\nvar DeclaratorVisitor = require('./visitors/declarator');\n\nvar AssignmentVisitor = require('./visitors/assignment');\n\nvar ContinuationsConfigVisitor = require('./visitors/createContinuation');\n\nvar StoreContinuationsVisitor = require('./visitors/storeContinuations');\n\nvar RestoreHeapVisitor = require('./visitors/heapRestore');\n\nvar RestoreContinuationVisitor = require('./visitors/continuationRestore');\n\nvar TryCatchVisitor = require('./visitors/tryCatch');\n\nvar LoopVisitor = require('./visitors/loop');\n\nvar IfBlockVisitor = require('./visitors/ifBlock');\n\nvar _require = require('./heap'),\n    addDependencies = _require.addDependencies;\n\nglobal.dependencies = [];\nvar DependenciesVisitor = {\n  Program: function Program(path) {\n    dependencies = [];\n    path.traverse(WatchVisitor);\n    path.traverse(DeclaratorVisitor);\n    path.traverse(AssignmentVisitor);\n    path.traverse(LoopVisitor);\n    addDependencies(dependencies);\n  }\n};\nmodule.exports = {\n  dependenciesVisitor: function dependenciesVisitor() {\n    return {\n      visitor: DependenciesVisitor\n    };\n  },\n  initConfigVisitor: function initConfigVisitor() {\n    return {\n      visitor: ContinuationsConfigVisitor\n    };\n  },\n  storeContinuationsVisitor: function storeContinuationsVisitor() {\n    return {\n      visitor: StoreContinuationsVisitor\n    };\n  },\n  restoreHeapVisitor: function restoreHeapVisitor() {\n    return {\n      visitor: RestoreHeapVisitor\n    };\n  },\n  restoreContinuationVisitor: function restoreContinuationVisitor() {\n    return {\n      visitor: RestoreContinuationVisitor\n    };\n  },\n  tryCatchVisitor: function tryCatchVisitor() {\n    return {\n      visitor: TryCatchVisitor\n    };\n  },\n  ifBlockVisitor: function ifBlockVisitor() {\n    return {\n      visitor: IfBlockVisitor\n    };\n  }\n};","var t = require('babel-types');\n\nmodule.exports = {\n  CallExpression: function CallExpression(path) {\n    if (path.node.callee.property && path.node.callee.property.name == 'watch') {\n      path.node.arguments[0].elements.map(function (element) {\n        dependencies.push({\n          name: element.value,\n          type: 'normal'\n        });\n      });\n    }\n  }\n};","module.exports = {\n  VariableDeclarator: function VariableDeclarator(path) {\n    var left = path.node.id.name;\n    var right = path.node.init;\n\n    if (right != null) {\n      // x = y\n      if (right.type == 'Identifier') {\n        if (dependencies.some(function (dependency) {\n          return dependency.name == left;\n        }) && left != right.name && !dependencies.some(function (dependency) {\n          return dependency.name == right.name;\n        })) {\n          dependencies.push({\n            name: right.name,\n            type: 'normal'\n          });\n        }\n      } // x = y * z\n\n\n      if (right.type == 'BinaryExpression' || right.type == 'CallExpression') {\n        path.traverse({\n          Identifier: function Identifier(path) {\n            if (dependencies.some(function (dependency) {\n              return dependency.name == left;\n            }) && left != path.node.name && !dependencies.some(function (dependency) {\n              return dependency.name == path.node.name;\n            })) {\n              dependencies.push({\n                name: path.node.name,\n                type: 'normal'\n              });\n            }\n          }\n        });\n      }\n    }\n  }\n};","module.exports = {\n  AssignmentExpression: function AssignmentExpression(path) {\n    var left = path.node.left.name;\n    var right = path.node.right.name; // left = right\n\n    if (right != undefined) {\n      if (dependencies.some(function (dependency) {\n        return dependency.name == left;\n      }) && left != right && !dependencies.some(function (dependency) {\n        return dependency.name == right;\n      })) {\n        dependencies.push({\n          name: right,\n          type: 'normal'\n        });\n      }\n    } // x = y * z\n\n\n    if (path.node.right.type == 'BinaryExpression' || path.node.right.type == 'CallExpression') {\n      path.traverse({\n        Identifier: function Identifier(path) {\n          if (dependencies.some(function (dependency) {\n            return dependency.name == left;\n          }) && left != path.node.name && !dependencies.some(function (dependency) {\n            return dependency.name == path.node.name;\n          })) {\n            dependencies.push({\n              name: path.node.name,\n              type: 'normal'\n            });\n          }\n        }\n      });\n    }\n  }\n};","var t = require('babel-types');\n\nmodule.exports = {\n  Program: function Program(path) {\n    // continuations = {};\n    path.node.body.unshift(t.expressionStatement(t.assignmentExpression('=', t.identifier('continuations'), t.objectExpression([])))); //  function createContinuation() {\n    //      return callCC(cont => cont); \n    //  }\n\n    path.node.body.unshift(t.functionDeclaration(t.identifier('createContinuation'), [], t.blockStatement([t.returnStatement(t.callExpression(t.identifier('callCC'), [t.arrowFunctionExpression([t.identifier('cont')], t.identifier('cont'), false)]))], []), false, false));\n  }\n};","var t = require('babel-types');\n\nglobal.snapshotCounter = 0;\nmodule.exports = {\n  /* continuations.kont* = createContinuation(); */\n  MemberExpression: function MemberExpression(path) {\n    if (path.node.object && path.node.property && path.node.object.name == 'delorean' && path.node.property.name == 'insertTimePoint') {\n      var snapshotCall = path.findParent(function (path) {\n        return path.isCallExpression();\n      });\n      var itIsInLoop = false;\n      parent = path.context.parentPath;\n\n      while (parent) {\n        parent = parent.context.parentPath;\n\n        if (parent) {\n          if (parent.node.type == 'ForStatement' || parent.node.type == 'DoWhileStatement' || parent.node.type == 'WhileStatement') {\n            itIsInLoop = true;\n            break;\n          }\n        }\n      }\n\n      if (itIsInLoop) {\n        snapshotCall.insertAfter(t.expressionStatement(t.callExpression(t.identifier('addCont'), [t.identifier('kont' + snapshotCall.container.expression.arguments[0].value), t.identifier('continuations'), t.stringLiteral('kont' + snapshotCall.container.expression.arguments[0].value)])));\n      } else {\n        snapshotCall.insertAfter(t.expressionStatement(t.assignmentExpression('=', t.memberExpression(t.identifier('continuations'), t.identifier('kont' + snapshotCall.container.expression.arguments[0].value)), t.identifier('kont' + snapshotCall.container.expression.arguments[0].value))));\n      }\n\n      snapshotCall.insertAfter(t.variableDeclaration('var', [t.variableDeclarator(t.identifier('kont' + snapshotCall.container.expression.arguments[0].value), t.callExpression(t.identifier('createContinuation'), []))]));\n      snapshotCounter++;\n    }\n  }\n};","var t = require('babel-types');\n\nvar snapshotCounter = 0;\n\nfunction rightType(key) {\n  switch (typeof heap.snapshots[restore][key]) {\n    case 'number':\n      return t.numericLiteral(heap.snapshots[restore][key]);\n\n    case 'string':\n      return t.stringLiteral(heap.snapshots[restore][key]);\n\n    case 'boolean':\n      return t.booleanLiteral(heap.snapshots[restore][key]);\n\n    /*case 'object':\n    let properties = [];\n        for(let property in heap.snapshots[restore][key]){\n            properties.push(t.objectProperty())\n        }\n    return t.objectExpression(properties);\n    case 'function':\n     return t.functionExpression(\n        t.identifier(heap.snapshots[restore][key].name),\n        t.arrayPattern(heap.snapshots[restore][key].arguments),\n        \n     )*/\n  }\n}\n\nmodule.exports = {\n  MemberExpression: function MemberExpression(path) {\n    if (path.node.property && path.node.property.name == 'kont' + restore && path.container.type == \"AssignmentExpression\") {\n      var continuationCall = path.findParent(function (path) {\n        return path.isAssignmentExpression();\n      });\n      Object.keys(heap.snapshots[restore]).forEach(function (key) {\n        if (heap.snapshots[restore][key]) {\n          continuationCall.insertAfter(t.expressionStatement(t.assignmentExpression('=', t.identifier(key), rightType(key))));\n        }\n      });\n    }\n  }\n};","var t = require('babel-types');\n\nmodule.exports = {\n  /* continuations.kont${restore}(); */\n  Program: function Program(path) {\n    path.node.body.unshift(t.expressionStatement(t.callExpression(t.memberExpression(t.identifier('continuations'), t.identifier(\"kont\".concat(restore))), [])));\n  }\n};","var t = require('babel-types');\n\nwindow.isTimePoint = function (element) {\n  return element && element.expression && element.expression.callee && element.expression.callee.object && element.expression.callee.property && element.expression.callee.object.name == 'delorean' && element.expression.callee.property.name == 'insertTimePoint';\n};\n\nvar catchClause = t.catchClause(t.identifier('e'), t.blockStatement([t.expressionStatement(t.callExpression(t.memberExpression(t.identifier('console'), t.identifier('log')), [t.identifier('e')]))]));\nmodule.exports = {\n  \"Program|BlockStatement\": {\n    exit: function exit(path) {\n      var block = path.node.body;\n      var splitPoints = [];\n\n      for (var i = 0; i < block.length; ++i) {\n        if (isTimePoint(block[i]) || t.isIfStatement(block[i]) || t.isDoWhileStatement(block[i]) || t.isTryStatement(block[i]) || t.isWhileStatement(block[i]) || t.isForStatement(block[i])) {\n          splitPoints.push(i);\n        }\n      }\n\n      var newBlock = [];\n      var auxBlock = [];\n\n      if (splitPoints.length != 0 && (t.isProgram(path) || !t.isTryStatement(path.getStatementParent()))) {\n        for (var _i = splitPoints.length - 1; _i >= -1; --_i) {\n          auxBlock = newBlock;\n          newBlock = [];\n          var startOfTryBlock = 0;\n          if (_i != -1) startOfTryBlock = splitPoints[_i] + 1;\n          var endOfTryBlock = block.length;\n          if (_i < splitPoints.length - 1) endOfTryBlock = splitPoints[_i + 1];\n          if (_i != -1) newBlock.push(block[splitPoints[_i]]);\n          newBlock.push(t.tryStatement(t.blockStatement(block.slice(startOfTryBlock, endOfTryBlock).concat(auxBlock), []), catchClause, null));\n        } //console.log(newBlock)                \n        //console.log(path.node)\n\n\n        while (path.get('body').length != 0) {\n          path.get('body')[0].remove();\n        }\n\n        for (var _i2 = 0; _i2 < newBlock.length; ++_i2) {\n          path.pushContainer('body', newBlock[_i2]);\n        }\n      }\n    }\n  }\n};","module.exports = {\n  \"ForStatement|DoWhileStatement|WhileStatement\": function ForStatementDoWhileStatementWhileStatement(path) {\n    var test = path.get('test');\n\n    if (test.type == 'BinaryExpression' || test.type == 'CallExpression') {\n      var hasTimepoint = false;\n      path.traverse({\n        ExpressionStatement: function ExpressionStatement(path) {\n          if (isTimePoint(path.node)) hasTimepoint = true;\n        }\n      });\n\n      if (hasTimepoint) {\n        test.traverse({\n          Identifier: function Identifier(path) {\n            if (!dependencies.some(function (dependency) {\n              return dependency.name == path.node.name;\n            })) {\n              dependencies.push({\n                name: path.node.name,\n                type: 'loop'\n              });\n            }\n          }\n        });\n      }\n    }\n  }\n};","var t = require('babel-types');\n\nmodule.exports = {\n  IfStatement: function IfStatement(path) {\n    if (path.node.consequent.type != 'BlockStatement') {\n      var block = t.blockStatement([path.node.consequent], []);\n      path.node.consequent = block;\n    }\n  }\n};","var fs = require('fs');\n\nvar babel = require('babel-core');\n\nmodule.exports = function (originalCode, visitors, isString) {\n  var data;\n\n  if (isString) {\n    data = originalCode;\n  } else {\n    data = fs.readFileSync(__dirname + \"/example/input.js\", 'utf8');\n  }\n\n  var src = data.toString();\n\n  var _babel$transform = babel.transform(src, {\n    plugins: visitors\n  }),\n      code = _babel$transform.code;\n\n  return {\n    dependencies: dependencies,\n    code: code\n  };\n};","module.exports = function (inputCode) {\n  var compiler = require('../main');\n\n  var sweet = require('sweet.js');\n\n  var src = sweet.compile(inputCode, {\n    noBabel: true\n  }).code;\n  var output = compiler(src, {\n    includeDebug: true\n  });\n  var finalSrc = \"var $Machine = vm.$Machine;\\n\" + \"var $ContinuationExc = vm.$ContinuationExc;\\n\" + \"var $Frame = vm.$Frame;\\n\" + \"var $DebugInfo = vm.$DebugInfo;\\n\" + output.code + \"var VM = new $Machine();\\n\" + \"VM.on('paused', function() { VM.continue() });\\n\" + \"VM.on('error', function(e) { console.log('error', e) });\\n\" + \"VM.setDebugInfo(new $DebugInfo(__debugInfo));\\n\" + \"VM.execute($__global);\";\n  return finalSrc;\n};","/**\n * Copyright (c) 2013, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\nvar assert = require(\"assert\");\n\nvar types = require(\"ast-types\");\n\nvar n = types.namedTypes;\nvar b = types.builders;\n\nvar hoist = require(\"./hoist\").hoist;\n\nvar Emitter = require(\"./emit\").Emitter;\n\nvar DebugInfo = require(\"./debug\").DebugInfo;\n\nvar escope = require('escope');\n\nvar withLoc = require(\"./util\").withLoc;\n\nexports.transform = function (ast, opts) {\n  n.Program.assert(ast);\n  var debugInfo = new DebugInfo();\n  var nodes = ast.body;\n  var asExpr = opts.asExpr;\n  var originalExpr = nodes[0];\n  var boxedVars = (opts.scope || []).reduce(function (acc, v) {\n    if (v.boxed) {\n      acc.push(v.name);\n    }\n\n    return acc;\n  }, []);\n  var scopes = escope.analyze(ast).scopes; // Scan the scopes bottom-up by simply reversing the array. We need\n  // this because we need to detect if an identifier is boxed before\n  // the scope which it is declared in is scanned.\n\n  scopes.reverse();\n  scopes.forEach(function (scope) {\n    if (scope.type !== 'global' || asExpr) {\n      if (asExpr) {\n        // We need to also scan the variables to catch top-level\n        // definitions that aren't referenced but might be boxed\n        // (think function re-definitions)\n        scope.variables.forEach(function (v) {\n          if (boxedVars.indexOf(v.name) !== -1) {\n            v.defs.forEach(function (def) {\n              def.name.boxed = true;\n            });\n          }\n        });\n      }\n\n      scope.references.forEach(function (r) {\n        var defBoxed = r.resolved && r.resolved.defs.reduce(function (acc, def) {\n          return acc || def.name.boxed || boxedVars.indexOf(def.name) !== -1;\n        }, false); // Ignore catch scopes\n\n        var from = r.from;\n\n        while (from.type == 'catch' && from.upper) {\n          from = from.upper;\n        }\n\n        if (defBoxed || !r.resolved && boxedVars.indexOf(r.identifier.name) !== -1 || r.resolved && r.resolved.scope.type !== 'catch' && r.resolved.scope !== from && // completely ignore references to a named function\n        // expression, as that binding is immutable (super weird)\n        !(r.resolved.defs[0].type === 'FunctionName' && r.resolved.defs[0].node.type === 'FunctionExpression')) {\n          r.identifier.boxed = true;\n\n          if (r.resolved) {\n            r.resolved.defs.forEach(function (def) {\n              def.name.boxed = true;\n            });\n          }\n        }\n      });\n    }\n  });\n\n  if (asExpr) {\n    // If evaluating as an expression, return the last value if it's\n    // an expression\n    var last = nodes.length - 1;\n\n    if (n.ExpressionStatement.check(nodes[last])) {\n      nodes[last] = withLoc(b.returnStatement(nodes[last].expression), nodes[last].loc);\n    }\n  }\n\n  nodes = b.functionExpression(b.identifier(asExpr ? '$__eval' : '$__global'), [], b.blockStatement(nodes));\n  var rootFn = types.traverse(nodes, function (node) {\n    return visitNode.call(this, node, [], debugInfo);\n  });\n\n  if (asExpr) {\n    rootFn = rootFn.body.body;\n\n    if (opts.scope) {\n      var vars = opts.scope.map(function (v) {\n        return v.name;\n      });\n      var decl = rootFn[0];\n\n      if (n.VariableDeclaration.check(decl)) {\n        decl.declarations = decl.declarations.reduce(function (acc, v) {\n          if (vars.indexOf(v.id.name) === -1) {\n            acc.push(v);\n          }\n\n          return acc;\n        }, []);\n\n        if (!decl.declarations.length) {\n          rootFn[0] = b.expressionStatement(b.literal(null));\n        }\n      }\n    } else {\n      rootFn[0] = b.expressionStatement(b.literal(null));\n    }\n\n    rootFn.unshift(b.expressionStatement(b.callExpression(b.memberExpression(b.identifier('VM'), b.identifier('pushState'), false), [])));\n    rootFn.push(b.variableDeclaration('var', [b.variableDeclarator(b.identifier('$__rval'), b.callExpression(b.identifier('$__eval'), []))]));\n    rootFn.push(b.expressionStatement(b.callExpression(b.memberExpression(b.identifier('VM'), b.identifier('popState'), false), [])));\n    rootFn.push(b.expressionStatement(b.identifier('$__rval')));\n  } else {\n    rootFn = rootFn.body.body;\n  }\n\n  ast.body = rootFn;\n  return {\n    ast: ast,\n    debugAST: opts.includeDebug ? [debugInfo.getDebugAST()] : [],\n    debugInfo: debugInfo.getDebugInfo()\n  };\n};\n\nvar id = 1;\n\nfunction newFunctionName() {\n  return b.identifier('$anon' + id++);\n}\n\nfunction visitNode(node, scope, debugInfo) {\n  // Boxed variables need to access the box instead of used directly\n  // (foo => foo[0])\n  if (n.Identifier.check(node) && (!n.VariableDeclarator.check(this.parent.node) || this.parent.node.id !== node) && node.boxed) {\n    this.replace(withLoc(b.memberExpression(node, b.literal(0), true), node.loc));\n    return;\n  }\n\n  if (!n.Function.check(node)) {\n    // Note that because we are not returning false here the traversal\n    // will continue into the subtree rooted at this node, as desired.\n    return;\n  }\n\n  node.generator = false;\n\n  if (node.expression) {\n    // Transform expression lambdas into normal functions.\n    node.expression = false; // This feels very dirty, is it ok to change the type like this?\n    // We need to output a function that we can name so it can be\n    // captured.\n    // TODO: properly compile out arrow functions\n\n    node.type = 'FunctionExpression';\n    node.body = b.blockStatement([withLoc(b.returnStatement(node.body), node.body.loc)]);\n  } // All functions are converted with assignments (foo = function\n  // foo() {}) but with the function name. Rename the function though\n  // so that if it is referenced inside itself, it will close over the\n  // \"outside\" variable (that should be boxed)\n\n\n  node.id = node.id || newFunctionName();\n  var isGlobal = node.id.name === '$__global';\n  var isExpr = node.id.name === '$__eval';\n  var nameId = node.id;\n  var funcName = node.id.name;\n  var vars = hoist(node);\n  var localScope = !vars ? node.params : node.params.concat(vars.declarations.map(function (v) {\n    return v.id;\n  })); // It sucks to traverse the whole function again, but we need to see\n  // if we need to manage a try stack\n\n  var hasTry = false;\n  types.traverse(node.body, function (child) {\n    if (n.Function.check(child)) {\n      return false;\n    }\n\n    if (n.TryStatement.check(child)) {\n      hasTry = true;\n    }\n\n    return;\n  }); // Traverse and compile child functions first\n\n  node.body = types.traverse(node.body, function (child) {\n    return visitNode.call(this, child, scope.concat(localScope), debugInfo);\n  }); // Now compile me\n\n  var debugId = debugInfo.makeId();\n  var em = new Emitter(debugId, debugInfo);\n  var path = new types.NodePath(node);\n  em.explode(path.get(\"body\"));\n  var finalBody = em.getMachine(node.id.name, localScope); // construct the thing\n\n  var inner = [];\n\n  if (!isGlobal && !isExpr) {\n    node.params.forEach(function (arg) {\n      if (arg.boxed) {\n        inner.push(b.expressionStatement(b.assignmentExpression('=', arg, b.arrayExpression([arg]))));\n      }\n    });\n\n    if (vars) {\n      inner = inner.concat(vars);\n    }\n  }\n\n  if (!isGlobal && !isExpr) {\n    inner.push.apply(inner, [b.ifStatement(b.unaryExpression('!', em.vmProperty('running')), b.returnStatement(b.callExpression(b.memberExpression(b.identifier('VM'), b.identifier('execute'), false), [node.id, b.literal(null), b.thisExpression(), b.identifier('arguments')])))]);\n  } // internal harnesses to run the function\n\n\n  inner.push(em.declareVar('$__next', b.literal(0)));\n  inner.push(em.declareVar('$__tmpid', b.literal(0)));\n\n  for (var i = 1, l = em.numTempVars(); i <= l; i++) {\n    inner.push(em.declareVar('$__t' + i, null));\n  }\n\n  if (hasTry) {\n    inner.push(em.declareVar('tryStack', b.arrayExpression([])));\n  }\n\n  var tmpSave = [];\n\n  for (var i = 1, l = em.numTempVars(); i <= l; i++) {\n    tmpSave.push(b.property('init', b.identifier('$__t' + i), b.identifier('$__t' + i)));\n  }\n\n  inner = inner.concat([b.tryStatement(b.blockStatement(getRestoration(em, isGlobal, localScope, hasTry).concat(finalBody)), b.catchClause(b.identifier('e'), null, b.blockStatement([b.ifStatement(b.unaryExpression('!', b.binaryExpression('instanceof', b.identifier('e'), b.identifier('$ContinuationExc'))), b.expressionStatement(b.assignmentExpression('=', b.identifier('e'), b.newExpression(b.identifier('$ContinuationExc'), [b.identifier('e')])))), b.ifStatement(b.unaryExpression('!', em.getProperty('e', 'reuse')), b.expressionStatement(b.callExpression(em.getProperty('e', 'pushFrame'), [b.newExpression(b.identifier('$Frame'), [b.literal(debugId), b.literal(funcName.slice(1)), b.identifier(funcName), b.identifier('$__next'), b.objectExpression(localScope.map(function (id) {\n    return b.property('init', id, id);\n  }).concat(tmpSave)), // b.literal(null),\n  b.arrayExpression(localScope.concat(scope).map(function (id) {\n    return b.objectExpression([b.property('init', b.literal('name'), b.literal(id.name)), b.property('init', b.literal('boxed'), b.literal(!!id.boxed))]);\n  })), b.thisExpression(), hasTry ? b.identifier('tryStack') : b.literal(null), b.identifier('$__tmpid')])]))), em.assign(em.getProperty('e', 'reuse'), b.literal(false)), b.throwStatement(b.identifier('e'))])))]);\n\n  if (isGlobal || isExpr) {\n    node.body = b.blockStatement([vars ? vars : b.expressionStatement(b.literal(null)), b.functionDeclaration(nameId, [], b.blockStatement(inner))]);\n  } else {\n    node.body = b.blockStatement(inner);\n  }\n\n  return false;\n}\n\nfunction getRestoration(self, isGlobal, localScope, hasTry) {\n  // restoring a frame\n  var restoration = [];\n  restoration.push(self.declareVar('$__frame', b.callExpression(self.vmProperty('popFrame'), [])));\n\n  if (!isGlobal) {\n    restoration = restoration.concat(localScope.map(function (id) {\n      return b.expressionStatement(b.assignmentExpression('=', b.identifier(id.name), self.getProperty(self.getProperty(b.identifier('$__frame'), 'state'), id)));\n    }));\n  }\n\n  restoration.push(self.assign(b.identifier('$__next'), self.getProperty(b.identifier('$__frame'), 'next')));\n\n  if (hasTry) {\n    restoration.push(self.assign(b.identifier('tryStack'), self.getProperty(b.identifier('$__frame'), 'tryStack')));\n  }\n\n  restoration = restoration.concat([self.declareVar('$__child', b.callExpression(self.vmProperty('nextFrame'), [])), self.assign(b.identifier('$__tmpid'), self.getProperty(b.identifier('$__frame'), 'tmpid')), b.ifStatement(b.identifier('$__child'), b.blockStatement([self.assign(self.getProperty(self.getProperty('$__frame', b.identifier('state')), b.binaryExpression('+', b.literal('$__t'), self.getProperty('$__frame', 'tmpid')), true), b.callExpression(self.getProperty(self.getProperty('$__child', 'fn'), 'call'), [self.getProperty('$__child', 'thisPtr')])), // if we are stepping, stop executing here so that it\n  // pauses on the \"return\" instruction\n  b.ifStatement(self.vmProperty('stepping'), b.throwStatement(b.newExpression(b.identifier('$ContinuationExc'), [b.literal(null), b.identifier('$__frame')])))]))]);\n\n  for (var i = 1, l = self.numTempVars(); i <= l; i++) {\n    restoration.push(b.expressionStatement(b.assignmentExpression('=', b.identifier('$__t' + i), self.getProperty(self.getProperty(b.identifier('$__frame'), 'state'), '$__t' + i))));\n  }\n\n  return [b.ifStatement(self.vmProperty('doRestore'), b.blockStatement(restoration), b.ifStatement( // if we are stepping, stop executing so it is stopped at\n  // the first instruction of the new frame\n  self.vmProperty('stepping'), b.throwStatement(b.newExpression(b.identifier('$ContinuationExc'), []))))];\n}","/**\n * Copyright (c) 2013, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\nvar assert = require(\"assert\");\n\nvar types = require(\"ast-types\");\n\nvar n = types.namedTypes;\nvar b = types.builders;\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nvar withLoc = require(\"./util\").withLoc; // The hoist function takes a FunctionExpression or FunctionDeclaration\n// and replaces any Declaration nodes in its body with assignments, then\n// returns a VariableDeclaration containing just the names of the removed\n// declarations.\n\n\nexports.hoist = function (fun) {\n  n.Function.assert(fun);\n  var vars = {};\n  var funDeclsToRaise = [];\n\n  function varDeclToExpr(vdec, includeIdentifiers) {\n    n.VariableDeclaration.assert(vdec);\n    var exprs = [];\n    vdec.declarations.forEach(function (dec) {\n      vars[dec.id.name] = dec.id;\n\n      if (dec.init) {\n        var assn = b.assignmentExpression('=', dec.id, dec.init);\n        exprs.push(withLoc(assn, dec.loc));\n      } else if (includeIdentifiers) {\n        exprs.push(dec.id);\n      }\n    });\n    if (exprs.length === 0) return null;\n    if (exprs.length === 1) return exprs[0];\n    return b.sequenceExpression(exprs);\n  }\n\n  types.traverse(fun.body, function (node) {\n    if (n.VariableDeclaration.check(node)) {\n      var expr = varDeclToExpr(node, false);\n\n      if (expr === null) {\n        this.replace();\n      } else {\n        // We don't need to traverse this expression any further because\n        // there can't be any new declarations inside an expression.\n        this.replace(withLoc(b.expressionStatement(expr), node.loc));\n      } // Since the original node has been either removed or replaced,\n      // avoid traversing it any further.\n\n\n      return false;\n    } else if (n.ForStatement.check(node)) {\n      if (n.VariableDeclaration.check(node.init)) {\n        var expr = varDeclToExpr(node.init, false);\n        this.get(\"init\").replace(expr);\n      }\n    } else if (n.ForInStatement.check(node)) {\n      if (n.VariableDeclaration.check(node.left)) {\n        var expr = varDeclToExpr(node.left, true);\n        this.get(\"left\").replace(expr);\n      }\n    } else if (n.FunctionDeclaration.check(node)) {\n      vars[node.id.name] = node.id;\n      var parentNode = this.parent.node; // Prefix the name with '$' as it introduces a new scoping rule\n      // and we want the original id to be referenced within the body\n\n      var funcExpr = b.functionExpression(b.identifier('$' + node.id.name), node.params, node.body, node.generator, node.expression);\n      funcExpr.loc = node.loc;\n      var assignment = withLoc(b.expressionStatement(withLoc(b.assignmentExpression(\"=\", node.id, funcExpr), node.loc)), node.loc);\n\n      if (n.BlockStatement.check(this.parent.node)) {\n        // unshift because later it will be added in reverse, so this\n        // will keep the original order\n        funDeclsToRaise.unshift({\n          block: this.parent.node,\n          assignment: assignment\n        }); // Remove the function declaration for now, but reinsert the assignment\n        // form later, at the top of the enclosing BlockStatement.\n\n        this.replace();\n      } else {\n        this.replace(assignment);\n      } // Don't hoist variables out of inner functions.\n\n\n      return false;\n    } else if (n.FunctionExpression.check(node)) {\n      // Don't descend into nested function expressions.\n      return false;\n    }\n  });\n  funDeclsToRaise.forEach(function (entry) {\n    entry.block.body.unshift(entry.assignment);\n  });\n  var declarations = [];\n  var paramNames = {};\n  fun.params.forEach(function (param) {\n    if (n.Identifier.check(param)) {\n      paramNames[param.name] = param;\n    } else {// Variables declared by destructuring parameter patterns will be\n      // harmlessly re-declared.\n    }\n  });\n  Object.keys(vars).forEach(function (name) {\n    if (!hasOwn.call(paramNames, name)) {\n      var id = vars[name];\n      declarations.push(b.variableDeclarator(id, id.boxed ? b.arrayExpression([b.identifier('undefined')]) : null));\n    }\n  });\n\n  if (declarations.length === 0) {\n    return null; // Be sure to handle this case!\n  }\n\n  return b.variableDeclaration(\"var\", declarations);\n};","/**\n * Copyright (c) 2013, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\nvar assert = require(\"assert\");\n\nvar types = require(\"ast-types\");\n\nvar n = types.namedTypes;\nvar b = types.builders;\n\nvar inherits = require(\"util\").inherits;\n\nfunction Entry() {\n  assert.ok(this instanceof Entry);\n}\n\nfunction FunctionEntry(returnLoc) {\n  Entry.call(this);\n  n.Literal.assert(returnLoc);\n  Object.defineProperties(this, {\n    returnLoc: {\n      value: returnLoc\n    }\n  });\n}\n\ninherits(FunctionEntry, Entry);\nexports.FunctionEntry = FunctionEntry;\n\nfunction LoopEntry(breakLoc, continueLoc, label) {\n  Entry.call(this);\n  n.Literal.assert(breakLoc);\n  n.Literal.assert(continueLoc);\n\n  if (label) {\n    n.Identifier.assert(label);\n  } else {\n    label = null;\n  }\n\n  Object.defineProperties(this, {\n    breakLoc: {\n      value: breakLoc\n    },\n    continueLoc: {\n      value: continueLoc\n    },\n    label: {\n      value: label\n    }\n  });\n}\n\ninherits(LoopEntry, Entry);\nexports.LoopEntry = LoopEntry;\n\nfunction SwitchEntry(breakLoc) {\n  Entry.call(this);\n  n.Literal.assert(breakLoc);\n  Object.defineProperties(this, {\n    breakLoc: {\n      value: breakLoc\n    }\n  });\n}\n\ninherits(SwitchEntry, Entry);\nexports.SwitchEntry = SwitchEntry;\n\nfunction TryEntry(catchEntry, finallyEntry) {\n  Entry.call(this);\n\n  if (catchEntry) {\n    assert.ok(catchEntry instanceof CatchEntry);\n  } else {\n    catchEntry = null;\n  }\n\n  if (finallyEntry) {\n    assert.ok(finallyEntry instanceof FinallyEntry);\n  } else {\n    finallyEntry = null;\n  }\n\n  Object.defineProperties(this, {\n    catchEntry: {\n      value: catchEntry\n    },\n    finallyEntry: {\n      value: finallyEntry\n    }\n  });\n}\n\ninherits(TryEntry, Entry);\nexports.TryEntry = TryEntry;\n\nfunction CatchEntry(firstLoc, paramId) {\n  Entry.call(this);\n  n.Literal.assert(firstLoc);\n  n.Identifier.assert(paramId);\n  Object.defineProperties(this, {\n    firstLoc: {\n      value: firstLoc\n    },\n    paramId: {\n      value: paramId\n    }\n  });\n}\n\ninherits(CatchEntry, Entry);\nexports.CatchEntry = CatchEntry;\n\nfunction FinallyEntry(firstLoc, nextLocTempVar) {\n  Entry.call(this);\n  n.Literal.assert(firstLoc);\n  n.Identifier.assert(nextLocTempVar);\n  Object.defineProperties(this, {\n    firstLoc: {\n      value: firstLoc\n    },\n    nextLocTempVar: {\n      value: nextLocTempVar\n    }\n  });\n}\n\ninherits(FinallyEntry, Entry);\nexports.FinallyEntry = FinallyEntry;\n\nfunction LeapManager(emitter) {\n  assert.ok(this instanceof LeapManager);\n\n  var Emitter = require(\"./emit\").Emitter;\n\n  assert.ok(emitter instanceof Emitter);\n  Object.defineProperties(this, {\n    emitter: {\n      value: emitter\n    },\n    entryStack: {\n      value: [new FunctionEntry(emitter.finalLoc)]\n    }\n  });\n}\n\nvar LMp = LeapManager.prototype;\nexports.LeapManager = LeapManager;\n\nLMp.withEntry = function (entry, callback) {\n  assert.ok(entry instanceof Entry);\n  this.entryStack.push(entry);\n\n  try {\n    callback.call(this.emitter);\n  } finally {\n    var popped = this.entryStack.pop();\n    assert.strictEqual(popped, entry);\n  }\n};\n\nLMp._leapToEntry = function (predicate, defaultLoc) {\n  var entry, loc;\n  var finallyEntries = [];\n  var skipNextTryEntry = null;\n\n  for (var i = this.entryStack.length - 1; i >= 0; --i) {\n    entry = this.entryStack[i];\n\n    if (entry instanceof CatchEntry || entry instanceof FinallyEntry) {\n      // If we are inside of a catch or finally block, then we must\n      // have exited the try block already, so we shouldn't consider\n      // the next TryStatement as a handler for this throw.\n      skipNextTryEntry = entry;\n    } else if (entry instanceof TryEntry) {\n      if (skipNextTryEntry) {\n        // If an exception was thrown from inside a catch block and this\n        // try statement has a finally block, make sure we execute that\n        // finally block.\n        if (skipNextTryEntry instanceof CatchEntry && entry.finallyEntry) {\n          finallyEntries.push(entry.finallyEntry);\n        }\n\n        skipNextTryEntry = null;\n      } else if (loc = predicate.call(this, entry)) {\n        break;\n      } else if (entry.finallyEntry) {\n        finallyEntries.push(entry.finallyEntry);\n      }\n    } else if (loc = predicate.call(this, entry)) {\n      break;\n    }\n  }\n\n  if (loc) {// fall through\n  } else if (defaultLoc) {\n    loc = defaultLoc;\n  } else {\n    return null;\n  }\n\n  n.Literal.assert(loc);\n  var finallyEntry;\n\n  while (finallyEntry = finallyEntries.pop()) {\n    this.emitter.emitAssign(finallyEntry.nextLocTempVar, loc);\n    loc = finallyEntry.firstLoc;\n  }\n\n  return loc;\n};\n\nfunction getLeapLocation(entry, property, label) {\n  var loc = entry[property];\n\n  if (loc) {\n    if (label) {\n      if (entry.label && entry.label.name === label.name) {\n        return loc;\n      }\n    } else {\n      return loc;\n    }\n  }\n\n  return null;\n}\n\nLMp.emitBreak = function (label) {\n  var loc = this._leapToEntry(function (entry) {\n    return getLeapLocation(entry, \"breakLoc\", label);\n  });\n\n  if (loc === null) {\n    throw new Error(\"illegal break statement\");\n  }\n\n  this.emitter.clearPendingException();\n  this.emitter.jump(loc);\n};\n\nLMp.emitContinue = function (label) {\n  var loc = this._leapToEntry(function (entry) {\n    return getLeapLocation(entry, \"continueLoc\", label);\n  });\n\n  if (loc === null) {\n    throw new Error(\"illegal continue statement\");\n  }\n\n  this.emitter.clearPendingException();\n  this.emitter.jump(loc);\n};","/**\n * Copyright (c) 2013, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\nvar assert = require(\"assert\");\n\nvar m = require(\"private\").makeAccessor();\n\nvar types = require(\"ast-types\");\n\nvar isArray = types.builtInTypes.array;\nvar n = types.namedTypes;\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nfunction makePredicate(propertyName, knownTypes) {\n  function onlyChildren(node) {\n    n.Node.assert(node); // Assume no side effects until we find out otherwise.\n\n    var result = false;\n\n    function check(child) {\n      if (result) {// Do nothing.\n      } else if (isArray.check(child)) {\n        child.some(check);\n      } else if (n.Node.check(child)) {\n        assert.strictEqual(result, false);\n        result = predicate(child);\n      }\n\n      return result;\n    }\n\n    types.eachField(node, function (name, child) {\n      check(child);\n    });\n    return result;\n  }\n\n  function predicate(node) {\n    n.Node.assert(node);\n    var meta = m(node);\n    if (hasOwn.call(meta, propertyName)) return meta[propertyName]; // Certain types are \"opaque,\" which means they have no side\n    // effects or leaps and we don't care about their subexpressions.\n\n    if (hasOwn.call(opaqueTypes, node.type)) return meta[propertyName] = false;\n    if (hasOwn.call(knownTypes, node.type)) return meta[propertyName] = true;\n    return meta[propertyName] = onlyChildren(node);\n  }\n\n  predicate.onlyChildren = onlyChildren;\n  return predicate;\n}\n\nvar opaqueTypes = {\n  FunctionExpression: true\n}; // These types potentially have side effects regardless of what side\n// effects their subexpressions have.\n\nvar sideEffectTypes = {\n  CallExpression: true,\n  // Anything could happen!\n  ForInStatement: true,\n  // Modifies the key variable.\n  UnaryExpression: true,\n  // Think delete.\n  BinaryExpression: true,\n  // Might invoke .toString() or .valueOf().\n  AssignmentExpression: true,\n  // Side-effecting by definition.\n  UpdateExpression: true,\n  // Updates are essentially assignments.\n  NewExpression: true // Similar to CallExpression.\n\n}; // These types are the direct cause of all leaps in control flow.\n\nvar leapTypes = {\n  YieldExpression: true,\n  BreakStatement: true,\n  ContinueStatement: true,\n  ReturnStatement: true,\n  ThrowStatement: true,\n  CallExpression: true,\n  DebuggerStatement: true\n}; // All leap types are also side effect types.\n\nfor (var type in leapTypes) {\n  if (hasOwn.call(leapTypes, type)) {\n    sideEffectTypes[type] = leapTypes[type];\n  }\n}\n\nexports.hasSideEffects = makePredicate(\"hasSideEffects\", sideEffectTypes);\nexports.containsLeap = makePredicate(\"containsLeap\", leapTypes);","var types = require(\"ast-types\");\n\nvar recast = require(\"recast\");\n\nvar b = types.builders;\n\nfunction DebugInfo() {\n  this.baseId = 0;\n  this.baseIndex = 1;\n  this.machines = [];\n  this.stepIds = [];\n  this.stmts = [];\n}\n\nDebugInfo.prototype.makeId = function () {\n  var id = this.baseId++;\n  this.machines[id] = {\n    locs: {},\n    finalLoc: null\n  };\n  return id;\n};\n\nDebugInfo.prototype.addStepIds = function (machineId, ids) {\n  this.stepIds[machineId] = ids;\n};\n\nDebugInfo.prototype.addSourceLocation = function (machineId, loc, index) {\n  this.machines[machineId].locs[index] = loc;\n  return index;\n};\n\nDebugInfo.prototype.getSourceLocation = function (machineId, index) {\n  return this.machines[machineId].locs[index];\n};\n\nDebugInfo.prototype.addFinalLocation = function (machineId, loc) {\n  this.machines[machineId].finalLoc = loc;\n};\n\nDebugInfo.prototype.getDebugAST = function () {\n  var ast = recast.parse('(' + JSON.stringify({\n    machines: this.machines,\n    stepIds: this.stepIds\n  }) + ')');\n  return b.variableDeclaration('var', [b.variableDeclarator(b.identifier('__debugInfo'), ast.program.body[0].expression)]);\n};\n\nDebugInfo.prototype.getDebugInfo = function () {\n  return {\n    machines: this.machines,\n    stepIds: this.stepIds\n  };\n};\n\nexports.DebugInfo = DebugInfo;"],"sourceRoot":""}