{"version":3,"sources":["markdown.js","../node_modules/codemirror/mode lazy /^/.//.*/.js$/ groupOptions: {} namespace object","../../src/delorean.js","../../unwinder/runtime/vm.js","../../unwinder/lib/util.js","../../src/debugger.js","../../node_modules/babel-core/lib/transformation/file/options sync","../../node_modules/babel-core/lib/transformation/file sync","../../src/heap.js","../../unwinder/main.js","../../unwinder/lib/emit.js","App.js","components/Layout.js","components/Console.js","components/Output.js","../../example/input1.js","../../example/input2.js","../../example/input3.js","components/Tab.js","components/StatusBar.js","index.js","../../src/staticAnalysis.js","../../src/visitors/watch.js","../../src/visitors/declarator.js","../../src/visitors/assignment.js","../../src/visitors/createContinuation.js","../../src/visitors/storeContinuations.js","../../src/visitors/heapRestore.js","../../src/visitors/continuationRestore.js","../../src/visitors/tryCatch.js","../../src/visitors/loop.js","../../src/visitors/ifBlock.js","../../index.js","../../unwinder/bin/compile.js","../../unwinder/lib/visit.js","../../unwinder/lib/hoist.js","../../unwinder/lib/leap.js","../../unwinder/lib/meta.js","../../unwinder/lib/debug.js"],"names":["module","exports","map","./apl/apl.js","./asciiarmor/asciiarmor.js","./asn.1/asn.1.js","./asterisk/asterisk.js","./brainfuck/brainfuck.js","./clike/clike.js","./clojure/clojure.js","./cmake/cmake.js","./cobol/cobol.js","./coffeescript/coffeescript.js","./commonlisp/commonlisp.js","./crystal/crystal.js","./css/css.js","./cypher/cypher.js","./d/d.js","./dart/dart.js","./diff/diff.js","./django/django.js","./dockerfile/dockerfile.js","./dtd/dtd.js","./dylan/dylan.js","./ebnf/ebnf.js","./ecl/ecl.js","./eiffel/eiffel.js","./elm/elm.js","./erlang/erlang.js","./factor/factor.js","./fcl/fcl.js","./forth/forth.js","./fortran/fortran.js","./gas/gas.js","./gfm/gfm.js","./gherkin/gherkin.js","./go/go.js","./groovy/groovy.js","./haml/haml.js","./handlebars/handlebars.js","./haskell-literate/haskell-literate.js","./haskell/haskell.js","./haxe/haxe.js","./htmlembedded/htmlembedded.js","./htmlmixed/htmlmixed.js","./http/http.js","./idl/idl.js","./javascript/javascript.js","./jinja2/jinja2.js","./jsx/jsx.js","./julia/julia.js","./livescript/livescript.js","./lua/lua.js","./markdown/markdown.js","./mathematica/mathematica.js","./mbox/mbox.js","./meta.js","./mirc/mirc.js","./mllike/mllike.js","./modelica/modelica.js","./mscgen/mscgen.js","./mumps/mumps.js","./nginx/nginx.js","./nsis/nsis.js","./ntriples/ntriples.js","./octave/octave.js","./oz/oz.js","./pascal/pascal.js","./pegjs/pegjs.js","./perl/perl.js","./php/php.js","./pig/pig.js","./powershell/powershell.js","./properties/properties.js","./protobuf/protobuf.js","./pug/pug.js","./puppet/puppet.js","./python/python.js","./q/q.js","./r/r.js","./rpm/rpm.js","./rst/rst.js","./ruby/ruby.js","./rust/rust.js","./sas/sas.js","./sass/sass.js","./scheme/scheme.js","./shell/shell.js","./sieve/sieve.js","./slim/slim.js","./smalltalk/smalltalk.js","./smarty/smarty.js","./solr/solr.js","./soy/soy.js","./sparql/sparql.js","./spreadsheet/spreadsheet.js","./sql/sql.js","./stex/stex.js","./stylus/stylus.js","./swift/swift.js","./tcl/tcl.js","./textile/textile.js","./tiddlywiki/tiddlywiki.js","./tiki/tiki.js","./toml/toml.js","./tornado/tornado.js","./troff/troff.js","./ttcn-cfg/ttcn-cfg.js","./ttcn/ttcn.js","./turtle/turtle.js","./twig/twig.js","./vb/vb.js","./vbscript/vbscript.js","./velocity/velocity.js","./verilog/verilog.js","./vhdl/vhdl.js","./vue/vue.js","./webidl/webidl.js","./xml/xml.js","./xquery/xquery.js","./yacas/yacas.js","./yaml-frontmatter/yaml-frontmatter.js","./yaml/yaml.js","./z80/z80.js","webpackAsyncContext","req","ids","Promise","all","slice","__webpack_require__","e","then","id","t","resolve","Error","code","keys","Object","heapSnapshot","insertTimePoint","watch","array","console","log","process","fs","compiler","IDLE","prototype","hasOwnProperty","Machine","this","debugInfo","stack","error","undefined","doRestore","evalResult","state","running","_events","stepping","prevStates","tryStack","machineBreaks","machineWatches","Frame","machineId","name","fn","next","scope","thisPtr","tmpid","DebugInfo","data","ContinuationExc","initialFrame","savedFrames","fnstack","reuse","loadScript","path","src","readFileSync","argv","output","includeDebug","setDebugInfo","setCode","run","loadModule","loadString","str","execute","args","prevState","ret","prevStepping","rootFrame","apply","fire","checkStatus","rootFn","Function","Array","call","arguments","join","bind","globalFn","abort","invokingContinuation","capturingContinuation","getNextStepId","stepId","offset","locs","stepIds","idx","indexOf","length","continue","getRootFrame","top","getTopFrame","hasBreakpoints","restore","step","_step","getLocation","stepOver","curloc","finalLoc","biggest","forEach","k","loc","start","line","end","column","ldiff","cdiff","evaluate","expr","asExpr","evalArg","withTopFrame","suppressEvents","onCapture","onInvoke","dispatchException","toggleBreakpoint","pos","lineToMachinePos","locId","callCC","x","arg","invokeContinuation","handleWatch","res","value","on","event","handler","arr","push","off","i","splice","setTimeout","getFrameOffset","count","child","depth","info","machines","isStepping","getOutput","getState","disableBreakpoints","enableBreakpoints","pushState","popState","pop","pushTry","catchLoc","finallyLoc","finallyTempVar","popCatch","entry","popFinally","exc","dispatched","obj","reverse","popFrame","r","nextFrame","frame","prev","newFrame","machine","prevNext","stackEach","func","stackMap","stackReduce","acc","hasCaught","hasFinally","finallyEntries","cur","len","parseInt","closestMachinePos","l","sort","a","b","ch","setWatch","Math","random","watches","pushFrame","$Machine","$Frame","$DebugInfo","$ContinuationExc","hasOwn","guessTabWidth","source","counts","lastIndent","split","indent","exec","diff","abs","maxCount","result","tabWidth","defaults","extension","key","withLoc","node","babel","_require","dependenciesVisitor","initConfigVisitor","storeContinuationsVisitor","tryCatchVisitor","ifBlockVisitor","restoreHeap","snapshot","heap","snapshots","element","TimePointId","dependencies","eval","concat","init","inputCode","_babel$transform","transform","plugins","compile","unwindedCode","kont","webpackEmptyContext","global","addDependencies","counter","originId","find","dependecy","toString","__dirname","assert","builders","utils","recast","esprimaHarmony","blockBindingExp","regenerator","options","supportBlockBinding","test","recastOptions","esprima","range","recastAst","parse","ast","program","defsResult","disallowUnknownReferences","disallowDuplicated","disallowVars","loopClosures","errors","transformed","body","unshift","debugAST","print","ok","version","runtime","dev","min","types","builtInTypes","n","namedTypes","leap","meta","makeSetBreakpointAST","blockStatement","traverse","Identifier","check","replace","Emitter","debugId","tmpId","maxTmpId","defineProperties","listing","marked","sourceLocations","leapManager","LeapManager","Ep","lit","literal","_location","getDeclError","JSON","stringify","mark","Literal","index","getLastMark","markAndBreak","emitAssign","identifier","emit","breakStatement","internal","Expression","expressionStatement","Statement","addSourceLocation","lhs","rhs","assign","assignmentExpression","declareVar","variableDeclaration","variableDeclarator","getProperty","prop","computed","memberExpression","vmProperty","clearPendingException","assignee","cp","jump","toLoc","jumpIf","srcLoc","ifStatement","jumpIfNot","unaryExpression","getTempVar","currentTempId","releaseTempVar","numTempVars","withTempVars","cb","prevId","getMachine","funcName","varNames","getDispatchLoop","resolveEmptyJumps","self","forwards","stmt","ReturnStatement","BreakStatement","ExpressionStatement","AssignmentExpression","expression","MemberExpression","left","object","property","right","current","alreadyEnded","cases","switchCase","ContinueStatement","ThrowStatement","isSwitchCaseEnder","addFinalLocation","addStepIds","reduce","val","returnStatement","callExpression","throwStatement","newExpression","whileStatement","logicalExpression","binaryExpression","switchStatement","explode","ignoreResult","NodePath","Node","explodeStatement","explodeExpression","Declaration","type","get","labelId","BlockStatement","each","label","before","after","withEntry","LoopEntry","first","head","update","tmpLoc","emitBreak","emitContinue","disc","defaultLoc","condition","caseLocs","c","SwitchCase","conditionalExpression","SwitchEntry","casePath","strictEqual","elseLoc","alternate","tmp","handlers","catchEntry","CatchEntry","param","finalizer","finallyEntry","FinallyEntry","nextLocTempVar","tryEntry","TryEntry","bodyPath","safeParam","catchScope","catchParamName","CatchClause","lookup","nil","method","firstLoc","finish","containsLeap","onlyChildren","explodeViaTempVar","tempVar","childPath","ignoreChildResult","keepTempVar","ThisExpression","shouldRelease","oldCalleePath","callArgs","newCallee","argPath","callee","objectExpression","propPath","kind","arrayExpression","elemPath","lastIndex","expressions","exprPath","operator","prefix","updateExpression","delorean","require","vm","App","props","_this","_Users_fruiz_Desktop_delorean_playground_delorean_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_fruiz_Desktop_delorean_playground_delorean_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_fruiz_Desktop_delorean_playground_delorean_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","tabs","input","example1","example2","example3","tabSelected","isRunning","readOnly","selected","selectedTarget","updateCode","ev","setState","getValue","selectTab","alert","example","o","currentTarget","firstChild","getAttribute","selectTabColor","classList","remove","add","updateSnapshots","updateDependencies","toggleIsRunning","executeCode","debuggerDelorean","consoleFeed","logs","attributes","stopExecution","editor","setOption","continuations","snapshotCounter","createRef","theme","tabSize","keyMap","mode","lineNumbers","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_8__","_components_StatusBar__WEBPACK_IMPORTED_MODULE_11__","className","_uiw_react_codemirror__WEBPACK_IMPORTED_MODULE_12___default","ref","onChange","_components_Console__WEBPACK_IMPORTED_MODULE_9__","_components_Output__WEBPACK_IMPORTED_MODULE_10__","Component","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","Layout","children","ConsoleContainer","_this2","Hook","window","_ref","_Users_fruiz_Desktop_delorean_playground_delorean_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","Decode","react__WEBPACK_IMPORTED_MODULE_6___default","style","backgroundColor","console_feed__WEBPACK_IMPORTED_MODULE_7__","variant","Output","markdown","dependency","_React$createElement","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","_Users_fruiz_Desktop_delorean_playground_delorean_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","margin","color","size","onClick","react_markdown__WEBPACK_IMPORTED_MODULE_7___default","escapeHtml","__webpack_exports__","Tab","react_default","StatusBar","classes","tab","components_Tab","Button_default","button","Icon_default","rightIcon","withStyles","spacing","unit","leftIcon","marginRight","marginLeft","iconSmall","fontSize","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","_App__WEBPACK_IMPORTED_MODULE_3__","ReactDOM","render","document","getElementById","WatchVisitor","DeclaratorVisitor","AssignmentVisitor","ContinuationsConfigVisitor","StoreContinuationsVisitor","RestoreHeapVisitor","RestoreContinuationVisitor","TryCatchVisitor","LoopVisitor","IfBlockVisitor","DependenciesVisitor","Program","visitor","restoreHeapVisitor","restoreContinuationVisitor","CallExpression","elements","VariableDeclarator","includes","functionDeclaration","arrowFunctionExpression","snapshotCall","findParent","isCallExpression","insertAfter","container","stringLiteral","continuationCall","isAssignmentExpression","numericLiteral","booleanLiteral","rightType","isTimePoint","catchClause","Program|BlockStatement","exit","block","splitPoints","isIfStatement","isDoWhileStatement","isTryStatement","isWhileStatement","isForStatement","newBlock","auxBlock","isProgram","getStatementParent","_i","startOfTryBlock","endOfTryBlock","tryStatement","_i2","pushContainer","ForStatement|DoWhileStatement|WhileStatement","hasTimepoint","IfStatement","consequent","originalCode","visitors","isString","noBabel","hoist","escope","opts","nodes","boxedVars","v","boxed","scopes","analyze","variables","defs","def","references","defBoxed","resolved","from","upper","last","functionExpression","visitNode","parent","generator","isGlobal","isExpr","nameId","vars","localScope","params","declarations","hasTry","TryStatement","makeId","em","finalBody","inner","thisExpression","tmpSave","getRestoration","decl","VariableDeclaration","getDebugAST","getDebugInfo","restoration","fun","funDeclsToRaise","varDeclToExpr","vdec","includeIdentifiers","exprs","dec","assn","sequenceExpression","ForStatement","ForInStatement","FunctionDeclaration","funcExpr","assignment","FunctionExpression","paramNames","inherits","Entry","FunctionEntry","returnLoc","breakLoc","continueLoc","paramId","emitter","entryStack","LMp","getLeapLocation","callback","popped","_leapToEntry","predicate","skipNextTryEntry","m","makeAccessor","isArray","makePredicate","propertyName","knownTypes","some","eachField","opaqueTypes","sideEffectTypes","UnaryExpression","BinaryExpression","UpdateExpression","NewExpression","leapTypes","YieldExpression","DebuggerStatement","hasSideEffects","baseId","baseIndex","stmts","getSourceLocation"],"mappings":"4EAAAA,EAAOC,QAAU,4kCCAjB,IAAAC,EAAA,CACAC,eAAA,CACA,KACA,IAEAC,6BAAA,CACA,KACA,IAEAC,mBAAA,CACA,KACA,IAEAC,yBAAA,CACA,KACA,IAEAC,2BAAA,CACA,KACA,IAEAC,mBAAA,CACA,KACA,GAEAC,uBAAA,CACA,KACA,IAEAC,mBAAA,CACA,KACA,IAEAC,mBAAA,CACA,KACA,IAEAC,iCAAA,CACA,KACA,IAEAC,6BAAA,CACA,KACA,IAEAC,uBAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,GAEAC,qBAAA,CACA,KACA,IAEAC,WAAA,CACA,KACA,IAEAC,iBAAA,CACA,KACA,EACA,IAEAC,iBAAA,CACA,KACA,IAEAC,qBAAA,CACA,KACA,EACA,EACA,IAEAC,6BAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,IAEAC,mBAAA,CACA,KACA,IAEAC,iBAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,IAEAC,qBAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,IAEAC,qBAAA,CACA,KACA,IAEAC,qBAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,IAEAC,mBAAA,CACA,KACA,IAEAC,uBAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,EACA,IAEAC,uBAAA,CACA,KACA,IAEAC,aAAA,CACA,KACA,IAEAC,qBAAA,CACA,KACA,IAEAC,iBAAA,CACA,KACA,EACA,EACA,IAEAC,6BAAA,CACA,KACA,IAEAC,yCAAA,CACA,KACA,IAEAC,uBAAA,CACA,KACA,IAEAC,iBAAA,CACA,KACA,IAEAC,iCAAA,CACA,KACA,EACA,EACA,IAEAC,2BAAA,CACA,KACA,EACA,EACA,IAEAC,iBAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,IAEAC,6BAAA,CACA,KACA,GAEAC,qBAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,EACA,IAEAC,mBAAA,CACA,KACA,IAEAC,6BAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,IAEAC,yBAAA,CACA,KACA,GAEAC,+BAAA,CACA,KACA,IAEAC,iBAAA,CACA,KACA,IAEAC,YAAA,CACA,KAEAC,iBAAA,CACA,KACA,IAEAC,qBAAA,CACA,KACA,IAEAC,yBAAA,CACA,KACA,IAEAC,qBAAA,CACA,KACA,IAEAC,mBAAA,CACA,KACA,IAEAC,mBAAA,CACA,KACA,IAEAC,iBAAA,CACA,KACA,IAEAC,yBAAA,CACA,KACA,IAEAC,qBAAA,CACA,KACA,IAEAC,aAAA,CACA,KACA,IAEAC,qBAAA,CACA,KACA,IAEAC,mBAAA,CACA,KACA,EACA,IAEAC,iBAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,EACA,EACA,EACA,IAEAC,eAAA,CACA,KACA,IAEAC,6BAAA,CACA,KACA,IAEAC,6BAAA,CACA,KACA,IAEAC,yBAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,EACA,EACA,GAEAC,qBAAA,CACA,KACA,IAEAC,qBAAA,CACA,KACA,IAEAC,WAAA,CACA,KACA,IAEAC,WAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,IAEAC,iBAAA,CACA,KACA,IAEAC,iBAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,IAEAC,iBAAA,CACA,KACA,EACA,IAEAC,qBAAA,CACA,KACA,IAEAC,mBAAA,CACA,KACA,IAEAC,mBAAA,CACA,KACA,IAEAC,iBAAA,CACA,KACA,EACA,EACA,IAEAC,2BAAA,CACA,KACA,IAEAC,qBAAA,CACA,KACA,IAEAC,iBAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,EACA,EACA,IAEAC,qBAAA,CACA,KACA,IAEAC,+BAAA,CACA,KACA,IAEAC,eAAA,CACA,KACA,KAEAC,iBAAA,CACA,KACA,KAEAC,qBAAA,CACA,KACA,GAEAC,mBAAA,CACA,KACA,KAEAC,eAAA,CACA,KACA,KAEAC,uBAAA,CACA,KACA,KAEAC,6BAAA,CACA,KACA,KAEAC,iBAAA,CACA,KACA,KAEAC,iBAAA,CACA,KACA,KAEAC,uBAAA,CACA,KACA,EACA,EACA,IAEAC,mBAAA,CACA,KACA,KAEAC,yBAAA,CACA,KACA,KAEAC,iBAAA,CACA,KACA,KAEAC,qBAAA,CACA,KACA,KAEAC,iBAAA,CACA,KACA,IAEAC,aAAA,CACA,KACA,KAEAC,yBAAA,CACA,KACA,KAEAC,yBAAA,CACA,KACA,KAEAC,uBAAA,CACA,KACA,KAEAC,iBAAA,CACA,KACA,KAEAC,eAAA,CACA,KACA,EACA,EACA,EACA,EACA,GAEAC,qBAAA,CACA,KACA,KAEAC,eAAA,CACA,KACA,KAEAC,qBAAA,CACA,KACA,KAEAC,mBAAA,CACA,KACA,KAEAC,yCAAA,CACA,KACA,IAEAC,iBAAA,CACA,KACA,KAEAC,eAAA,CACA,KACA,MAGA,SAAAC,EAAAC,GACA,IAAAC,EAAA5H,EAAA2H,GACA,OAAAC,EAOAC,QAAAC,IAAAF,EAAAG,MAAA,GAAA/H,IAAAgI,EAAAC,IAAAC,KAAA,WACA,IAAAC,EAAAP,EAAA,GACA,OAAAI,EAAAI,EAAAD,EAAA,KARAN,QAAAQ,UAAAH,KAAA,WACA,IAAAD,EAAA,IAAAK,MAAA,uBAAAX,EAAA,KAEA,MADAM,EAAAM,KAAA,mBACAN,IAQAP,EAAAc,KAAA,WACA,OAAAC,OAAAD,KAAAxI,IAEA0H,EAAAS,GAAA,KACArI,EAAAC,QAAA2H,wBCnhBA,IACAgB,EADeV,EAAQ,KACvBU,aAEA5I,EAAAC,QAAA,CACA4I,gBAAA,SAAAR,GACAO,EAAAP,IAEAS,MAAA,SAAAC,GACAC,QAAAC,IAAA,cAAAF,EAAA,8BCRA,SAAAG,GAAA,IAAAC,EAASjB,EAAQ,IAEjBkB,EAAelB,EAAQ,KAgBvBmB,GAdAV,OAAAW,UAAAC,eAcA,QAIA,SAAAC,IACAC,KAAAC,UAAA,KACAD,KAAAE,MAAA,KACAF,KAAAG,WAAAC,EACAJ,KAAAK,WAAA,EACAL,KAAAM,WAAA,KACAN,KAAAO,MAAAX,EACAI,KAAAQ,SAAA,EACAR,KAAAS,QAAA,GACAT,KAAAU,UAAA,EACAV,KAAAW,WAAA,GACAX,KAAAY,SAAA,GACAZ,KAAAa,cAAA,GACAb,KAAAc,eAAA,GAkmBA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAZ,EAAAa,EAAAC,EAAAT,EAAAU,GACAtB,KAAAgB,YACAhB,KAAAiB,OACAjB,KAAAkB,KACAlB,KAAAmB,OACAnB,KAAAO,QACAP,KAAAoB,QACApB,KAAAqB,UACArB,KAAAY,WACAZ,KAAAsB,QA8GA,SAAAC,EAAAC,GACAxB,KAAAwB,OAmEA,SAAAC,EAAAtB,EAAAuB,EAAAC,GACA3B,KAAA4B,QAAAD,IAAAD,EAAA,CAAAA,GAAA,IACA1B,KAAAG,QACAH,KAAA6B,QAAAH,EA7xBA3B,EAAAF,UAAAiC,WAAA,SAAAC,GACA,IAAAC,EAAAtC,EAAAuC,aAAAxC,EAAAyC,KAAA,YACAC,EAAAxC,EAAAqC,EAAA,CACAI,cAAA,IAEAnC,EAAA,IAAAsB,EAAAY,EAAAlC,WACAD,KAAAqC,aAAApC,GACAD,KAAAsC,QAAAP,EAAAI,EAAAnD,MACAgB,KAAAuC,OAGAxC,EAAAF,UAAA2C,WAAA,SAAAT,GACA,IAAAC,EAAAtC,EAAAuC,aAAAxC,EAAAyC,KAAA,YACAvC,EAAAqC,EAAA,CACAI,cAAA,KAIArC,EAAAF,UAAA4C,WAAA,SAAAC,GACA,IAAAP,EAAAxC,EAAA+C,EAAA,CACAN,cAAA,IAEAnC,EAAA,IAAAsB,EAAAY,EAAAlC,WACAD,KAAAqC,aAAApC,GACAD,KAAAsC,QAAA,QAAAH,EAAAnD,OAGAe,EAAAF,UAAA8C,QAAA,SAAAzB,EAAAG,EAAAuB,GAEA,IAAAC,EAAA7C,KAAAO,MACAP,KAAAO,MAhDA,YAiDAP,KAAAQ,SAAA,EACA,IAGAsC,EAHAC,EAAA/C,KAAAU,SACAV,KAAAgD,UACAhD,KAAAU,UAAA,EAGA,IAEAoC,EADAzB,GAAAuB,EACA1B,EAAA+B,MAAA5B,EAAAuB,GAAA,IAEA1B,IAEG,MAAAxC,GACHsB,KAAAE,MAAAxB,EAAAkD,QACA5B,KAAAG,MAAAzB,EAAAyB,MAiBA,OAdAH,KAAAU,SAAAqC,EAIA,cAAAF,GACA7C,KAAAG,OACAH,KAAAkD,KAAA,QAAAlD,KAAAG,OAGAH,KAAAO,MAAAsC,GAEA7C,KAAAmD,cAGAL,GAGA/C,EAAAF,UAAA0C,IAAA,WACAvC,KAAA+B,KAAA,IACA/C,EAAAgB,KAAAhB,KACAzI,EAAA,CACAC,QAAA,IAIA4M,EAFA,IAAAC,SAAA,KACA,yDAAArE,EAAA,sBACAkC,CAAAlB,KACAzJ,IAAAC,QAAAuK,EAAAU,EAAA,CACAjC,IAAA,WACA,IAAAoD,EAAAU,MAAAzD,UAAArB,MAAA+E,KAAAC,WACAxD,KAAAmC,QAAAS,EAAAa,KAAA,WACKC,KAAA1D,QAELA,KAAAmC,OAAA,GACAnC,KAAA2C,QAAAS,GACApD,KAAA2D,SAAAP,GAGArD,EAAAF,UAAA+D,MAAA,WACA5D,KAAAmC,OAAA,GACAnC,KAAA2D,SAAA,KACA3D,KAAAO,MAAAX,EACAI,KAAAQ,SAAA,EACAR,KAAA+B,KAAA,GACA/B,KAAAhB,KAAA,GACAgB,KAAA6D,qBAAA,KACA7D,KAAA8D,uBAAA,EACA9D,KAAAG,MAAA,MAGAJ,EAAAF,UAAAkE,cAAA,SAAA/C,EAAAgD,EAAAC,GACA,IAAAC,EAAAlE,KAAAC,UAAAuB,KAAA2C,QAAAnD,GACAoD,EAAAF,EAAAG,QAAAL,GAEA,OAAAI,EAAAH,EAAAC,EAAAI,OACAtE,KAAAC,UAAAuB,KAAA2C,QAAAnD,GAAAoD,EAAAH,GAGA,MAGAlE,EAAAF,UAAA0E,SAAA,WACA,GAhIA,cAgIAvE,KAAAO,MAAA,CACAP,KAAAkD,KAAA,WACAlD,KAAAwE,eAAA,IACAC,EAAAzE,KAAA0E,cACA1E,KAAAQ,SAAA,EACAR,KAAAO,MApIA,YAsIAP,KAAAa,cAAA4D,EAAAzD,WAAAyD,EAAAtD,QAIAnB,KAAAU,UAAA,EACAV,KAAA2E,gBAAA,EACA3E,KAAA4E,SAAA,GAEA5E,KAAA2E,gBAAA,EACA3E,KAAAU,UAAA,GAGAV,KAAAQ,SAAA,EACAR,KAAAO,MAnJA,YAoJAP,KAAA4E,YAIA7E,EAAAF,UAAAgF,KAAA,WACA,GAAA7E,KAAAE,MAAA,CACAF,KAAAkD,KAAA,WAEA,IAAA4B,EAAA,WACA9E,KAAAQ,SAAA,EACAR,KAAAU,UAAA,EACAV,KAAA2E,gBAAA,EACA3E,KAAA4E,SAAA,GACA5E,KAAA2E,gBAAA,EACA3E,KAAAU,UAAA,GACGgD,KAAA1D,MAEH8E,IAIA,IAFA9E,KAAA0E,cAxKA,cA0KA1E,KAAAO,QAAAP,KAAA+E,eAGAD,IA7KA,cAgLA9E,KAAAO,QACAP,KAAAQ,SAAA,EACAR,KAAAkD,KAAA,aAIAnD,EAAAF,UAAAmF,SAAA,WACA,GAAAhF,KAAAgD,UAAA,CACA,IAAAyB,EAAAzE,KAAA0E,cACAO,EAAAjF,KAAA+E,cACAG,EAAAD,EACAE,EAAA,EACAjB,EAAAlE,KAAAC,UAAAuB,KAAAiD,EAAAzD,WAAAkD,KAiBA,GAdAhF,OAAAD,KAAAiF,GAAAkB,QAAA,SAAAC,GACA,IAAAC,EAAApB,EAAAmB,GAEA,GAAAC,EAAAC,MAAAC,MAAAP,EAAAM,MAAAC,MAAAF,EAAAG,IAAAD,MAAAP,EAAAQ,IAAAD,MAAAF,EAAAC,MAAAG,QAAAT,EAAAM,MAAAG,QAAAJ,EAAAG,IAAAC,QAAAT,EAAAQ,IAAAC,OAAA,CACA,IAAAC,EAAAV,EAAAM,MAAAC,KAAAF,EAAAC,MAAAC,MAAAF,EAAAG,IAAAD,KAAAP,EAAAQ,IAAAD,MACAI,EAAAX,EAAAM,MAAAG,OAAAJ,EAAAC,MAAAG,QAAAJ,EAAAG,IAAAC,OAAAT,EAAAQ,IAAAC,QAEAC,EAAAC,EAAAT,IACAD,EAAAI,EACAH,EAAAQ,EAAAC,MAKAV,IAAAD,EAAA,CACA,KAAAjF,KAAA+E,gBAAAG,GACAlF,KAAA6E,OAGA7E,KAAA6E,YAEA7E,KAAA6E,SAIA9E,EAAAF,UAAAgG,SAAA,SAAAC,GACA,UAAAA,EACA,OAAA9F,KAAAM,WAiBA,GAAAN,KAAAE,MAAA,CACA,IAAAuE,EAAAzE,KAAA0E,cACAoB,EAAAnG,EAAAmG,EAAA,CACAC,QAAA,EACA3E,MAAAqD,EAAArD,QACKpC,KACLgB,KAAAQ,SAAA,EACAR,KAAAK,WAAA,EACAL,KAAAU,UAAA,EACA+D,EAAAoB,SAAA7F,KAAA8F,GACA9F,KAAAU,UAAA,EACAV,KAAAK,WAAA,EACAL,KAAAQ,SAAA,MACG,KAAAR,KAAA2D,SAuBH,UAAA5E,MAAA,4BAtBA+G,EAAAnG,EAAAmG,EAAA,CACAC,QAAA,IACK/G,KACLgB,KAAAgG,QAAAF,EACA9F,KAAAU,UAAA,EACAV,KAAAiG,aAAA,CACA9E,MAAA,EACAZ,MAAA,IACK,WACLP,KAAAK,WAAA,EAEA,IACAL,KAAA2D,WACO,MAAAjF,GACP,GAAAA,EAAAyB,MACA,MAAAzB,EAAAyB,MAIAH,KAAAK,WAAA,GACKqD,KAAA1D,OAKL,OAAAA,KAAAM,YAGAP,EAAAF,UAAA+E,QAAA,SAAAsB,GACA,IACAlG,KAAAK,WAAA,EACAL,KAAAwE,eAAAI,UACA5E,KAAAG,WAAAC,EACG,MAAA1B,GACHsB,KAAAE,MAAAxB,EAAAkD,QACA5B,KAAAG,MAAAzB,EAAAyB,MAGAH,KAAAmD,YAAA+C,IAGAnG,EAAAF,UAAAsD,YAAA,SAAA+C,GACA,GAAAlG,KAAAE,MAAA,CACA,GAAAF,KAAA8D,sBAGA,OAFA9D,KAAA8D,uBAAA,OACA9D,KAAAmG,YAIA,GAAAnG,KAAA6D,qBAAA,CACA,IAAAjC,EAAA5B,KAAA6D,qBAGA,OAFA7D,KAAA6D,qBAAA,UACA7D,KAAAoG,SAAAxE,GAIA,GAAA5B,KAAAG,MAAA,CACA,GAAAH,KAAAqG,oBACA,OAGA,IAAAH,EAEA,MAAAlG,KAAAG,WAEK+F,GACLlG,KAAAkD,KAAA,UAGAlD,KAAAO,MA9TA,iBAgUA2F,GACAlG,KAAAkD,KAAA,UAGAlD,KAAAO,MAAAX,EAGAI,KAAAQ,SAAA,GAGAT,EAAAF,UAAAyG,iBAAA,SAAAd,GACA,IACAe,EADAvG,KAAAC,UACAuG,iBAAAhB,GAEAe,IACAvG,KAAA2E,gBAAA,EAEA3E,KAAAa,cAAA0F,EAAAvF,WAAAuF,EAAAE,OACAzG,KAAAa,cAAA0F,EAAAvF,WAAAuF,EAAAE,QAAA,EAEAzG,KAAAa,cAAA0F,EAAAvF,WAAAuF,EAAAE,QAAA,IAKA1G,EAAAF,UAAA6G,OAAA,WAEA,MADA1G,KAAA8D,uBAAA,EACA,IAAArC,GAGA1B,EAAAF,UAAAsG,UAAA,WACA,IAAAvE,EAAA5B,KAAAE,MAAAzJ,IAAA,SAAAkQ,GACA,OAAAA,IAEAlC,EAAA7C,EAAA,GACAN,EAAAmD,EAAAnD,MACAH,EAAAnB,KAAA+D,cAAAU,EAAAzD,UAAAyD,EAAAtD,KAAA,GACAsD,EAAAtD,KAAAnB,KAAA+D,cAAAU,EAAAzD,UAAAyD,EAAAtD,KAAA,GAEAsD,EAAAlE,MAAA,QAAAkE,EAAAnD,MAAA,aAAAsF,GACAnC,EAAAtD,OACAsD,EAAAlE,MAAA,OAAAe,GAAAsF,EAEA5G,KAAAQ,QACAR,KAAA6G,mBAAAjF,GAEA5B,KAAAoG,SAAAxE,IAEG8B,KAAA1D,MAEHA,KAAA4E,WAGA7E,EAAAF,UAAAgH,mBAAA,SAAAjF,GAEA,MADA5B,KAAA6D,qBAAAjC,EACA,IAAAH,GAGA1B,EAAAF,UAAAuG,SAAA,SAAAxE,GACA5B,KAAAE,MAAA0B,EAAAnL,IAAA,SAAAkQ,GACA,OAAAA,IAEA3G,KAAAkD,KAAA,gBAEAlD,KAAAU,WACAV,KAAAQ,SAAA,EACAR,KAAAO,MAjYA,YAkYAP,KAAA4E,YAIA7E,EAAAF,UAAAiH,YAAA,SAAA9F,EAAAyF,EAAAM,GACA,IAAAnI,EAAAoB,KAAAc,eAAAE,GAAAyF,GAAA7H,GACAoB,KAAAkD,KAAA,WACAtE,KACAoI,MAAAD,KAIAhH,EAAAF,UAAAoH,GAAA,SAAAC,EAAAC,GACA,IAAAC,EAAApH,KAAAS,QAAAyG,IAAA,GACAE,EAAAC,KAAAF,GACAnH,KAAAS,QAAAyG,GAAAE,GAGArH,EAAAF,UAAAyH,IAAA,SAAAJ,EAAAC,GACA,IAAAC,EAAApH,KAAAS,QAAAyG,IAAA,GAEA,GAAAC,EAAA,CACA,IAAAI,EAAAH,EAAA/C,QAAA8C,IAEA,IAAAI,GACAH,EAAAI,OAAAD,EAAA,QAGAvH,KAAAS,QAAAyG,GAAA,IAIAnH,EAAAF,UAAAqD,KAAA,SAAAgE,EAAA1F,GACAiG,WAAA,YACAzH,KAAAS,QAAAyG,IAAA,IACA9B,QAAA,SAAA+B,GACAA,EAAA3F,MAEGkC,KAAA1D,MAAA,IAGHD,EAAAF,UAAA6E,YAAA,WACA,OAAA1E,KAAAE,OAAAF,KAAAE,MAAA,IAGAH,EAAAF,UAAA2E,aAAA,WACA,OAAAxE,KAAAE,OAAAF,KAAAE,MAAAF,KAAAE,MAAAoE,OAAA,IAGAvE,EAAAF,UAAA6H,eAAA,SAAAH,GAMA,IAHA,IAAA9C,EAAAzE,KAAAgD,UACA2E,EAAA,EAEAlD,EAAAmD,OACAnD,IAAAmD,MACAD,IAGA,GAAAJ,EAAAI,EACA,YAGA,IAAAE,EAAAF,EAAAJ,EAIA,IAHA9C,EAAAzE,KAAAgD,UACA2E,EAAA,EAEAlD,EAAAmD,OAAAD,EAAAE,GACApD,IAAAmD,MACAD,IAGA,OAAAlD,GAGA1E,EAAAF,UAAAwC,aAAA,SAAAyF,GACA9H,KAAAC,UAAA6H,GAAA,IAAAvG,EAAA,IACA,IAAAwG,EAAAD,EAAAtG,KAAAuG,SACA/H,KAAAa,cAAA,IAAAyC,MAAAyE,EAAAzD,QACAtE,KAAAc,eAAA,IAAAwC,MAAAyE,EAAAzD,QAEA,QAAAiD,EAAA,EAAiBA,EAAAQ,EAAAzD,OAAqBiD,IACtCvH,KAAAa,cAAA0G,GAAA,GAGA,IAAAA,EAAA,EAAiBA,EAAAQ,EAAAzD,OAAqBiD,IACtCvH,KAAAc,eAAAyG,GAAA,IAIAxH,EAAAF,UAAAyC,QAAA,SAAAP,EAAA/C,GACAgB,KAAA+B,OACA/B,KAAAhB,QAGAe,EAAAF,UAAAmI,WAAA,WACA,OAAAhI,KAAAU,UAGAX,EAAAF,UAAAoI,UAAA,WACA,OAAAjI,KAAAmC,QAGApC,EAAAF,UAAAqI,SAAA,WACA,OAAAlI,KAAAO,OAGAR,EAAAF,UAAAkF,YAAA,WACA,GAAA/E,KAAAE,OAAAF,KAAAC,UAAA,CACA,IAAAwE,EAAAzE,KAAA0E,cACA,OAAA1E,KAAAC,UAAAuB,KAAAuG,SAAAtD,EAAAzD,WAAAkD,KAAAO,EAAAtD,QAGApB,EAAAF,UAAAsI,mBAAA,WACAnI,KAAA2E,gBAAA,GAGA5E,EAAAF,UAAAuI,kBAAA,WACApI,KAAA2E,gBAAA,GAGA5E,EAAAF,UAAAwI,UAAA,WACArI,KAAAW,WAAA0G,KAAA,CAAArH,KAAAU,SAAAV,KAAA2E,iBACA3E,KAAAU,UAAA,EACAV,KAAA2E,gBAAA,GAGA5E,EAAAF,UAAAyI,SAAA,WACA,IAAA/H,EAAAP,KAAAW,WAAA4H,MACAvI,KAAAU,SAAAH,EAAA,GACAP,KAAA2E,eAAApE,EAAA,IAGAR,EAAAF,UAAA2I,QAAA,SAAAtI,EAAAuI,EAAAC,EAAAC,GACAD,GACAxI,EAAAmH,KAAA,CACAqB,aACAC,mBAIAF,GACAvI,EAAAmH,KAAA,CACAoB,cAKA1I,EAAAF,UAAA+I,SAAA,SAAA1I,EAAAuI,GACA,IAAAI,EAAA3I,IAAAoE,OAAA,GAEAuE,KAAAJ,cACAvI,EAAAqI,OAIAxI,EAAAF,UAAAiJ,WAAA,SAAA5I,EAAAwI,GACA,IAAAG,EAAA3I,IAAAoE,OAAA,GAEAuE,KAAAH,aACAxI,EAAAqI,MACAM,EAAA3I,IAAAoE,OAAA,IAGAuE,KAAAH,gBACAxI,EAAAqI,OAIAxI,EAAAF,UAAAwG,kBAAA,WACA,SAAArG,KAAAG,MACA,SAGA,IAAA4I,EAAA/I,KAAAG,MACA6I,GAAA,EACAjG,EAAA/C,KAAAU,SACAV,KAAAU,UAAA,EAEA,QAAA6G,EAAA,EAAiBA,EAAAvH,KAAAE,MAAAoE,OAAuBiD,IAAA,CAGxC,GAFAvH,KAAAE,MAAAqH,GAEAlB,kBAAArG,KAAA+I,GAAA,CAEA/I,KAAAE,MAAAF,KAAAE,MAAA1B,MAAA+I,GACAyB,GAAA,EACA,OASA,OALAjG,GAAAiG,IACAhJ,KAAA4E,UACA5E,KAAAG,WAAAC,GAGA4I,GAGAjJ,EAAAF,UAAAZ,KAAA,SAAAgK,GACA,OAAA/J,OAAAD,KAAAgK,GAAAC,WAGAnJ,EAAAF,UAAAsJ,SAAA,WACA,IAAAC,EAAApJ,KAAAE,MAAAqI,MAOA,OALAvI,KAAAE,MAAAoE,SACAtE,KAAAK,WAAA,EACAL,KAAAE,MAAA,MAGAkJ,GAGArJ,EAAAF,UAAAwJ,UAAA,WACA,OAAArJ,KAAAE,OAAAF,KAAAE,MAAAoE,OACAtE,KAAAE,MAAAF,KAAAE,MAAAoE,OAAA,GAGA,MAGAvE,EAAAF,UAAAoG,aAAA,SAAAqD,EAAApI,GACA,IAAAqI,EAAAvJ,KAAAE,MACAF,KAAAE,MAAA,CAAAoJ,GAEA,IACA,IAAAE,GAEAA,EAAAtI,OAEAqI,EAAA,GAAAC,GAEG,QACHxJ,KAAAE,MAAAqJ,IAiBAxI,EAAAlB,UAAA+E,QAAA,WACA5E,KAAAkB,GAAAqC,KAAAvD,KAAAqB,UAGAN,EAAAlB,UAAAgG,SAAA,SAAA4D,EAAA3D,GAwBA,OAvBA2D,EAAAzD,QAAAF,EACA2D,EAAAtJ,WAAAC,EACAqJ,EAAA/I,UAAA,EACA+I,EAAAxD,aAAAjG,KAAA,WACA,IAAA0J,EAAA1J,KAAAmB,KACAnB,KAAAmB,MAAA,EAEA,IACAnB,KAAAkB,GAAAqC,KAAAvD,KAAAqB,SACK,MAAA3C,GACL,KAAAA,aAAA+C,GACA,MAAA/C,EACO,GAAAA,EAAAyB,MACP,MAAAzB,EAAAyB,MAGA,IAAAqJ,EAAA9K,EAAAkD,QAAA,GAEA,OADA4H,EAAArI,KAAAuI,EACAF,EAGA,UAAAzK,MAAA,kCACG2E,KAAA1D,OACHyJ,EAAAnJ,YAGAS,EAAAlB,UAAA8J,UAAA,SAAAC,GACA5J,KAAA4H,OACA5H,KAAA4H,MAAA+B,UAAAC,GAGAA,EAAA5J,OAGAe,EAAAlB,UAAAgK,SAAA,SAAAD,GACA,IAAA7C,EASA,OANAA,EADA/G,KAAA4H,MACA5H,KAAA4H,MAAAiC,SAAAD,GAEA,IAGAvC,KAAAuC,EAAA5J,OACA+G,GAGAhG,EAAAlB,UAAAiK,YAAA,SAAAF,EAAAG,GAKA,OAJA/J,KAAA4H,QACAmC,EAAA/J,KAAA4H,MAAAkC,YAAAF,EAAAG,IAGAH,EAAAG,EAAA/J,OAGAe,EAAAlB,UAAAkF,YAAA,SAAA0E,GACA,OAAAA,EAAAxJ,UAAAuB,KAAAxB,KAAAgB,WAAAkD,KAAAlE,KAAAmB,OAGAJ,EAAAlB,UAAAwG,kBAAA,SAAAoD,EAAAV,GACA,IAAA/I,KAAAY,SACA,SAQA,IALA,IAAAO,EACA6I,GAAA,EACAC,GAAA,EACAC,EAAA,GAEA3C,EAAAvH,KAAAY,SAAA0D,OAAA,EAAwCiD,GAAA,EAAQA,IAAA,CAChD,IAAAsB,EAAA7I,KAAAY,SAAA2G,GAEA,GAAAsB,EAAAJ,SAAA,CACAtH,EAAA0H,EAAAJ,SACAuB,GAAA,EACA,MACKnB,EAAAH,aACLwB,EAAA7C,KAAAwB,GACAoB,GAAA,GAMA,KAAApB,EAAAqB,EAAA3B,OACAvI,KAAAO,MAAA,OAAAsI,EAAAF,gBAAAxH,EACAA,EAAA0H,EAAAH,WAYA,OATA1I,KAAAmB,OAEA8I,IAAAD,GACAP,EAAAxD,aAAAjG,KAAA,WACAyJ,EAAApJ,WAAA,EACAL,KAAA4E,WACKlB,KAAA1D,OAGLgK,GAQAzI,EAAA1B,UAAA2G,iBAAA,SAAAhB,GACA,IAAAxF,KAAAwB,KAAA,YAKA,IAJA,IAAAuG,EAAA/H,KAAAwB,KAAAuG,SAIAR,EAAAQ,EAAAzD,OAAA,EAAmCiD,GAAA,EAAQA,IAI3C,IAHA,IAAArD,EAAA6D,EAAAR,GAAArD,KACAjF,EAAAC,OAAAD,KAAAiF,GAEAiG,EAAA,EAAAC,EAAAnL,EAAAqF,OAAwC6F,EAAAC,EAAWD,IAAA,CAGnD,GAFAjG,EAAAjF,EAAAkL,IAEA5E,MAAAC,SACA,OACAxE,UAAAuG,EACAd,MAAA4D,SAAApL,EAAAkL,KAMA,aAGA5I,EAAA1B,UAAAyK,kBAAA,SAAA/E,EAAAE,GACA,IAAAzF,KAAAwB,KAAA,YAEA,QAAA+F,EAAA,EAAAgD,EAAAvK,KAAAwB,KAAA8C,OAAuCiD,EAAAgD,EAAOhD,IAAA,CAC9C,IAAArD,EAAAlE,KAAAwB,KAAA+F,GAAArD,KACAjF,EAAAC,OAAAD,KAAAiF,IACAjF,IAAAxI,IAAA,SAAA4O,GACA,OAAAgF,SAAAhF,MAEAmF,KAAA,SAAAC,EAAAC,GACA,OAAAD,EAAAC,IAGA,QAAAP,EAAA,EAAAC,EAAAnL,EAAAqF,OAAwC6F,EAAAC,EAAWD,IAAA,CACnD,IAAA7E,EAAApB,EAAAjF,EAAAkL,IAEA,IAAA7E,EAAAC,MAAAC,KAAAD,EAAAC,MAAAF,EAAAC,MAAAC,OAAAD,EAAAC,MAAAF,EAAAC,MAAAG,QAAAH,EAAAoF,MAAArF,EAAAG,IAAAD,KAAAC,EAAAD,MAAAF,EAAAG,IAAAD,OAAAC,EAAAD,MAAAF,EAAAG,IAAAC,QAAAD,EAAAkF,IACA,OACA3J,UAAAuG,EACAd,MAAAxH,EAAAkL,KAMA,aAGA5I,EAAA1B,UAAA+K,SAAA,SAAArE,EAAAvE,GAEA,IAAApD,EAAA,IAAAiM,KAAAC,SAAA,EAMA,OALA9K,KAAA+K,QAAA1D,KAAA,CACAd,MACAvE,MACApD,OAEAA,GASA6C,EAAA5B,UAAAmL,UAAA,SAAA1B,GAEAtJ,KAAA4B,QAAAyF,KAAAiC,IAIA/S,EAAAC,QAAAyU,SAAAlL,EACAxJ,EAAAC,QAAA0U,OAAAnK,EACAxK,EAAAC,QAAA2U,WAAA5J,EACAhL,EAAAC,QAAA4U,iBAAA3J,wCCt0BA,IAAA4J,EAAAnM,OAAAW,UAAAC,eAEAtJ,EAAA8U,cAAA,SAAAC,GACA,IAAAC,EAAA,GAEAC,EAAA,EACAF,EAAAG,MAAA,MAAAtG,QAAA,SAAAI,GACA,IAAAmG,EAAA,OAAAC,KAAApG,GAAA,GAAAlB,OACAuH,EAAAhB,KAAAiB,IAAAH,EAAAF,GACAD,EAAAK,GAAA,IAAAL,EAAAK,GACAJ,EAAAE,IAKA,IAHA,IAAAI,GAAA,EACAC,EAAA,EAEAC,EAAA,EAAwBA,EAAAT,EAAAlH,OAA0B2H,GAAA,EAClDA,KAAAT,KAAAS,GAAAF,IACAA,EAAAP,EAAAS,GACAD,EAAAC,GAIA,OAAAD,GAGAxV,EAAA0V,SAAA,SAAAjD,GAIA,IAHA,IACAkD,EADA/B,EAAA5G,UAAAc,OAGAiD,EAAA,EAAiBA,EAAA6C,IAAS7C,EAC1B,GAAA4E,EAAA3I,UAAA+D,GACA,QAAA6E,KAAAD,EACAd,EAAA9H,KAAA4I,EAAAC,KAAAf,EAAA9H,KAAA0F,EAAAmD,KACAnD,EAAAmD,GAAAD,EAAAC,IAMA,OAAAnD,GAIAzS,EAAA6V,QAAA,SAAAC,EAAAhH,GAEA,OADAgH,EAAAhH,MACAgH,qDCtDA,IAAAC,MAAY9N,oBAAQ,KAEpB+N,SAAe/N,oBAAQ,KACvBgO,oBAAAD,SAAAC,oBACAC,kBAAAF,SAAAE,kBACAC,0BAAAH,SAAAG,0BACAC,gBAAAJ,SAAAI,gBACAC,eAAAL,SAAAK,eAEA,SAAAC,YAAAlI,SACA,IAAAmI,SACAC,KAAAC,UAAAxW,IAAA,SAAAyW,GACAA,EAAAC,aAAAvI,UAAAmI,SAAAG,KAEAE,aAAA3W,IAAA,SAAA2V,KACAiB,KAAA,GAAAC,OAAAlB,IAAA,sCAAAkB,OAAAlB,IAAA,yCAAAkB,OAAAlB,IAAA,QAIA7V,OAAAC,QAAA,CACA+W,KAAA,SAAAA,KAAAC,WACA,IAAAxL,IAAcvD,oBAAQ,IAARA,CAAkB+O,UAAA,CAAAf,oBAAAG,kBAAA,GAAA5N,KAEhCyO,iBAAAlB,MAAAmB,UAAA1L,IAAA,CACA2L,QAAA,CAAAd,eAAAH,kBAAAC,6BAEA3N,KAAAyO,iBAAAzO,KAEAA,KAAA,qOAA8OA,KAE9O,IAAA4O,QAAkBnP,oBAAQ,KAE1BoP,aAAAD,QAAA5O,MAEA,IACAO,QAAAC,IAAA,2DACA6N,KAAAQ,cACAtO,QAAAC,IAAA,4DACK,MAAAd,GACLa,QAAAC,IAAAd,EAAA,mBAGAmI,mBAAA,SAAAA,mBAAAiH,MACAhB,YAAAgB,MAEA,IACAvO,QAAAC,IAAA,qBAAA8N,OAAAQ,MAAA,oCACAT,KAAA,mCAAAC,OAAAQ,KAAA,kCAA6DR,OAAAQ,KAAA,oCAAiDR,OAAAQ,KAAA,eAC9GvO,QAAAC,IAAA,mBAAA8N,OAAAQ,MAAA,oCACK,MAAApP,GACLa,QAAAC,IAAAd,EAAA,uCClDA,SAAAqP,EAAA3P,GACA,IAAAM,EAAA,IAAAK,MAAA,uBAAAX,EAAA,KAEA,MADAM,EAAAM,KAAA,mBACAN,EAEAqP,EAAA9O,KAAA,WAAuC,UACvC8O,EAAAjP,QAAAiP,EACAxX,EAAAC,QAAAuX,EACAA,EAAAnP,GAAA,uBCRA,SAAAmP,EAAA3P,GACA,IAAAM,EAAA,IAAAK,MAAA,uBAAAX,EAAA,KAEA,MADAM,EAAAM,KAAA,mBACAN,EAEAqP,EAAA9O,KAAA,WAAuC,UACvC8O,EAAAjP,QAAAiP,EACAxX,EAAAC,QAAAuX,EACAA,EAAAnP,GAAA,0BCRA,SAAAoP,KAAAhB,KAAA,GACAA,KAAAC,UAAA,GACA1W,EAAAC,QAAA,CACAyX,gBAAA,SAAAb,GACAJ,KAAAI,gBAEAjO,aAAA,SAAAP,GAKA,IAJA,IAAAmO,EAAA,GACAmB,EAAA,EACAC,EAAAvP,EAEAoO,KAAAC,UAAAmB,KAAA,SAAAlB,GACA,OAAAA,EAAAC,aAAAvO,KAEAA,EAAAuP,KAAAD,EAGAnB,EAAAI,YAAAvO,EACAoO,KAAAI,aAAA3W,IAAA,SAAA4X,GACAtB,EAAA,GAAAO,OAAAe,IAAAL,EAAAK,EAAAC,cAEAtB,KAAAC,UAAA5F,KAAA0F,8CCrBA,SAAAwB,GASA,IAAAC,EAAa/P,EAAQ,IAErBsD,EAAWtD,EAAQ,IAMnBiP,GAJYjP,EAAQ,IAEpBgQ,SAEgBhQ,EAAQ,KAAaiP,WAErCgB,EAAYjQ,EAAQ,KAEpBkQ,EAAalQ,EAAQ,KAErBmQ,EAAqBnQ,EAAQ,KAG7BoQ,EAAA,mBAGA,SAAAC,EAAAvD,EAAAwD,GAIA,IAAAC,KAHAD,EAAAL,EAAAxC,SAAA6C,GAAA,GAAwC,CACxCC,qBAAA,KAEAA,oBAEAA,IACAH,EAAAI,KAAA1D,KACAyD,GAAA,IAIA,IAAAE,EAAA,CACAjD,SAAAyC,EAAApD,cAAAC,GAGA4D,QAAAP,EACAQ,MAAAJ,EACA1J,KAAA,GAEA+J,EAAAV,EAAAW,MAAA/D,EAAA2D,GACAK,EAAAF,EAAAG,QAEA,GAAAR,EAAA,CACA,IAAAS,EAAqBhR,EAAQ,IAARA,CAAc8Q,EAAA,CACnCA,KAAA,EACAG,2BAAA,EACAC,oBAAA,EACAC,cAAA,EACAC,aAAA,SAGA,GAAAJ,EAAAK,OACA,UAAA/Q,MAAA0Q,EAAAK,OAAArM,KAAA,OAIA,IAAAsM,EAAArC,EAAA6B,EAAAR,GACAM,EAAAG,QAAAO,EAAAR,IAGA,GAAAR,EAAA3M,aAAA,CACA,IAAA4N,EAAAX,EAAAG,QAAAQ,KACAA,EAAAC,QAAAhN,MAAA+M,EAAAD,EAAAG,UAGA,OACAlR,KAAA2P,EAAAwB,MAAAd,EAAAH,GAAAlQ,KAAA,KACAiB,UAAA8P,EAAA9P,WAlDAuO,EAAA4B,GAAA,UAAAnB,KAAAL,EAAAyB,SAAA,wBAAAzB,EAAAyB,SAuDAvB,EAAApB,YACAoB,EAAAwB,QAAA,CACAC,IAAAxO,EAAA0B,KAAA8K,EAAA,mBACAiC,IAAAzO,EAAA0B,KAAA8K,EAAA,qBAGAhY,EAAAC,QAAAsY,qDC7EA,IAAAN,EAAa/P,EAAQ,IAErBgS,EAAYhS,EAAQ,IAEpBkQ,EAAalQ,EAAQ,KAGrBiM,GADA+F,EAAAC,aAAApR,MACAmR,EAAAhC,UACAkC,EAAAF,EAAAG,WAEAC,EAAWpS,EAAQ,KAEnBqS,EAAWrS,EAAQ,KAInB4N,GAFAnN,OAAAW,UAAAC,eAEcrB,EAAQ,KAAQ4N,SAgB9B,IAdArN,EAcA+R,GAdA/R,EAcA,8DAbA,WAEA,IAAAuQ,EAAA7E,EAAAsG,eAAArC,EAAAW,MAAAtQ,GAAAwQ,QAAAQ,MACApN,EAAAY,UACA,OAAAiN,EAAAQ,SAAA1B,EAAA,SAAAjD,GACA,GAAAqE,EAAAO,WAAAC,MAAA7E,IAAA,MAAAA,EAAArL,KAAA,IACA,IAAAmD,EAAAiG,SAAAiC,EAAArL,KAAAzC,MAAA,IACA,OAAAwB,KAAAoR,QAAAxO,EAAAwB,EAAA,SAQA,SAAAiN,EAAAC,EAAArR,GACAuO,EAAA4B,GAAApQ,gBAAAqR,GACArR,KAAAuR,MAAA,EACAvR,KAAAwR,SAAA,EACAtS,OAAAuS,iBAAAzR,KAAA,CAGA0R,QAAA,CACA1K,MAAA,IAIA2K,OAAA,CACA3K,MAAA,MAGA4K,gBAAA,CACA5K,MAAA,MAIA9B,SAAA,CACA8B,MAAA1B,KAEAgM,QAAA,CACAtK,MAAAsK,GAEArR,UAAA,CACA+G,MAAA/G,KAMAf,OAAAuS,iBAAAzR,KAAA,CAIA6R,YAAA,CACA7K,MAAA,IAAA6J,EAAAiB,YAAA9R,SAKA,IAAA+R,EAAAV,EAAAxR,UAOA,SAAAyF,IACA,IAAA0M,EAAAtH,EAAAuH,SAAA,GAIA,OADAD,EAAAE,WAAA,EACAF,EA0PA,SAAAG,EAAA7F,GACA,WAAAvN,MAAA,sGAAAqT,KAAAC,UAAA/F,IAtQA9V,EAAA6a,UAgBAU,EAAAO,KAAA,SAAAhN,GACAqL,EAAA4B,QAAA/D,OAAAlJ,GACA,IAAAkN,EAAAxS,KAAA0R,QAAApN,OAGA,OAFAgB,EAAA0B,MAAAwL,EACAxS,KAAA2R,OAAAa,IAAA,EACAlN,GAGAyM,EAAAU,YAAA,WAGA,IAFA,IAAAD,EAAAxS,KAAA0R,QAAApN,OAEAkO,EAAA,IAAAxS,KAAA2R,OAAAa,IACAA,IAGA,OAAAA,GAGAT,EAAAW,aAAA,WACA,IAAAvR,EAAAmE,IACAtF,KAAA2S,WAAAjI,EAAAkI,WAAA,WAAAzR,GACAnB,KAAA6S,KAAAnI,EAAAoI,eAAA,UACA9S,KAAAsS,KAAAnR,IAGA4Q,EAAAc,KAAA,SAAAvG,EAAAyG,GAQA,GAPApC,EAAAqC,WAAA7B,MAAA7E,KACAA,EAAAD,EAAA3B,EAAAuI,oBAAA3G,KAAAhH,MAGAqL,EAAAuC,UAAA1E,OAAAlC,GACAtM,KAAA0R,QAAArK,KAAAiF,IAEAyG,EAAA,CACA,IAAAzG,EAAAhH,IACA,UAAAvG,MAAA,4BAAAqT,KAAAC,UAAA/F,IAEAtM,KAAAC,UAAAkT,kBAAAnT,KAAAsR,QAAAhF,EAAAhH,IAAAtF,KAAA0R,QAAApN,OAAA,KAOAyN,EAAAY,WAAA,SAAAS,EAAAC,EAAA/N,GAEA,OADAtF,KAAA6S,KAAA7S,KAAAsT,OAAAF,EAAAC,EAAA/N,OACA8N,GAIArB,EAAAuB,OAAA,SAAAF,EAAAC,EAAA/N,GACA,IAAAgH,EAAA5B,EAAAuI,oBAAAvI,EAAA6I,qBAAA,IAAAH,EAAAC,IAEA,OADA/G,EAAAhH,MACAgH,GAGAyF,EAAAyB,WAAA,SAAAvS,EAAAsM,EAAAjI,GACA,OAAA+G,EAAA3B,EAAA+I,oBAAA,OAAA/I,EAAAgJ,mBAAAhJ,EAAAkI,WAAA3R,GAAAsM,KAAAjI,IAGAyM,EAAA4B,YAAA,SAAA1K,EAAA2K,EAAAC,EAAAvO,GACA,OAAA+G,EAAA3B,EAAAoJ,iBAAA,kBAAA7K,EAAAyB,EAAAkI,WAAA3J,KAAA,kBAAA2K,EAAAlJ,EAAAkI,WAAAgB,OAAAC,GAAAvO,IAGAyM,EAAAgC,WAAA,SAAA9S,EAAAqE,GACA,IAAAgH,EAAA5B,EAAAoJ,iBAAApJ,EAAAkI,WAAA,MAAAlI,EAAAkI,WAAA3R,IAAA,GAEA,OADAqL,EAAAhH,MACAgH,GAGAyF,EAAAiC,sBAAA,SAAAC,EAAA3O,GACA,IAAA4O,EAAAlU,KAAA+T,WAAA,SAEAE,GACAjU,KAAA2S,WAAAsB,EAAAC,EAAA5O,GAGAtF,KAAA2S,WAAAuB,EAAAxJ,EAAAuH,QAAA,QAKAF,EAAAoC,KAAA,SAAAC,GACApU,KAAA2S,WAAAjI,EAAAkI,WAAA,WAAAwB,GACApU,KAAA6S,KAAAnI,EAAAoI,kBAAA,IAIAf,EAAAsC,OAAA,SAAApF,EAAAmF,EAAAE,GACA3D,EAAAqC,WAAAxE,OAAAS,GACA0B,EAAA4B,QAAA/D,OAAA4F,GACApU,KAAA6S,KAAAxG,EAAA3B,EAAA6J,YAAAtF,EAAAvE,EAAAsG,eAAA,CAAAhR,KAAAsT,OAAA5I,EAAAkI,WAAA,WAAAwB,GAAA1J,EAAAoI,oBAAAwB,KAIAvC,EAAAyC,UAAA,SAAAvF,EAAAmF,EAAAE,GACA3D,EAAAqC,WAAAxE,OAAAS,GACA0B,EAAA4B,QAAA/D,OAAA4F,GACApU,KAAA6S,KAAAxG,EAAA3B,EAAA6J,YAAA7J,EAAA+J,gBAAA,IAAAxF,GAAAvE,EAAAsG,eAAA,CAAAhR,KAAAsT,OAAA5I,EAAAkI,WAAA,WAAAwB,GAAA1J,EAAAoI,oBAAAwB,KAKAvC,EAAA2C,WAAA,WAOA,OANA1U,KAAAuR,QAEAvR,KAAAuR,MAAAvR,KAAAwR,WACAxR,KAAAwR,SAAAxR,KAAAuR,OAGA7G,EAAAkI,WAAA,OAAA5S,KAAAuR,QAGAQ,EAAA4C,cAAA,WACA,OAAA3U,KAAAuR,OAGAQ,EAAA6C,eAAA,WACA5U,KAAAuR,SAGAQ,EAAA8C,YAAA,WACA,OAAA7U,KAAAwR,UAGAO,EAAA+C,aAAA,SAAAC,GACA,IAAAC,EAAAhV,KAAAuR,MACAxK,EAAAgO,IAEA,OADA/U,KAAAuR,MAAAyD,EACAjO,GAGAgL,EAAAkD,WAAA,SAAAC,EAAAC,GACA,OAAAnV,KAAAoV,gBAAAF,EAAAC,IAGApD,EAAAsD,kBAAA,WACA,IAAAC,EAAAtV,KACAuV,EAAA,GAGAD,EAAA5D,QAAAtM,QAAA,SAAAoQ,EAAAjO,GACA+N,EAAA3D,OAAA7R,eAAAyH,IAAA+N,EAAA3D,OAAA7R,eAAAyH,EAAA,KAAAoJ,EAAA8E,gBAAAtE,MAAAmE,EAAA5D,QAAAnK,EAAA,KAAAoJ,EAAA+E,eAAAvE,MAAAmE,EAAA5D,QAAAnK,EAAA,MAAAoJ,EAAAgF,oBAAAxE,MAAAqE,IAAA7E,EAAAiF,qBAAAzE,MAAAqE,EAAAK,aAAAlF,EAAAmF,iBAAA3E,MAAAqE,EAAAK,WAAAE,OAAA,QAAAP,EAAAK,WAAAE,KAAAC,OAAA/U,MAAA,WAAAuU,EAAAK,WAAAE,KAAAE,SAAAhV,OACAsU,EAAAhO,GAAAiO,EAAAK,WAAAK,SAGAzF,EAAAQ,SAAAqE,EAAA5D,QAAA,SAAApF,GACAqE,EAAA4B,QAAApB,MAAA7E,MAAA4F,WAAAqD,EAAAzV,eAAAwM,EAAAtF,QACAhH,KAAAoR,QAAAmE,EAAAjJ,EAAAtF,WAgBA+K,EAAAqD,gBAAA,SAAAF,EAAAC,GACA,IAIAgB,EAJAb,EAAAtV,KAGAoW,GAAA,EAEAC,EAAA,GA8BA,OA3BAf,EAAAD,oBACAC,EAAA5D,QAAAtM,QAAA,SAAAoQ,EAAAjO,GACA+N,EAAA3D,OAAA7R,eAAAyH,KACA8O,EAAAhP,KAAAqD,EAAA4L,WAAA5L,EAAAuH,QAAA1K,GAAA4O,EAAA,KACAC,GAAA,GAGAA,IACAD,EAAA9O,KAAAmO,GAyBA,SAAAA,GACA,OAAA7E,EAAA+E,eAAAvE,MAAAqE,IAAA7E,EAAA4F,kBAAApF,MAAAqE,IAAA7E,EAAA8E,gBAAAtE,MAAAqE,IAAA7E,EAAA6F,eAAArF,MAAAqE,GAzBAiB,CAAAjB,KAAAY,GAAA,MAKApW,KAAAkF,SAAA8B,MAAAhH,KAAA0R,QAAApN,OACAtE,KAAAC,UAAAyW,iBAAA1W,KAAAsR,QAAAtR,KAAAkF,SAAA8B,OACAhH,KAAAC,UAAA0W,WAAA3W,KAAAsR,QAAAtR,KAAA2R,OAAAiF,OAAA,SAAA7M,EAAA8M,EAAAtP,GAKA,OAJAsP,GACA9M,EAAA1C,KAAAE,GAGAwC,GACG,KAEHsM,EAAAhP,KAAApE,MAAAoT,EAAA,CAAA3L,EAAA4L,WAAA,SAAA5L,EAAA4L,WAAAtW,KAAAkF,SAAA,CAAAwF,EAAAoM,gBAAA,UAEAT,EAAAhP,KAAAqD,EAAA4L,WAAA5L,EAAAuH,SAAA,IAAAqD,EAAAhC,OAAAgC,EAAAvB,WAAA,cAAArJ,EAAAqM,eAAArM,EAAAkI,WAAA,SAAA0C,EAAAvB,WAAA,cAAArJ,EAAAsM,eAAAtM,EAAAuM,cAAAvM,EAAAkI,WAAA,4BACA,CACAlI,EAAAwM,eAAAxM,EAAAuH,QAAA,GAAAvH,EAAAsG,eAAA,CAAAtG,EAAA6J,YAAA7J,EAAAyM,kBAAA,KAAA7B,EAAAvB,WAAA,kBAAArJ,EAAA0M,iBAAA,MAAA9B,EAAA3B,YAAA2B,EAAA3B,YAAA2B,EAAAvB,WAAA,iBAAArJ,EAAAuH,QAAAjS,KAAAsR,UAAA,GAAA5G,EAAAkI,WAAA,eACAlI,EAAAkI,WAAA,eAAAlI,EAAAsM,eAAAtM,EAAAuM,cAAAvM,EAAAkI,WAAA,0BAAAlI,EAAA2M,gBAAA3M,EAAAkI,WAAA,WAAAyD,GAAA3L,EAAA6J,YAAAe,EAAAvB,WAAA,YAAArJ,EAAAsM,eAAAtM,EAAAuM,cAAAvM,EAAAkI,WAAA,+BAeAb,EAAAuF,QAAA,SAAAvV,EAAAwV,GACA/I,EAAA4B,GAAArO,aAAA0O,EAAA+G,UACA,IAAAlL,EAAAvK,EAAAiF,MAGA,GADA2J,EAAA8G,KAAAjJ,OAAAlC,GACAqE,EAAAuC,UAAA/B,MAAA7E,GAAA,OAFAtM,KAEA0X,iBAAA3V,GACA,GAAA4O,EAAAqC,WAAA7B,MAAA7E,GAAA,OAHAtM,KAGA2X,kBAAA5V,EAAAwV,GACA,GAAA5G,EAAAiH,YAAAzG,MAAA7E,GAAA,MAAA6F,EAAA7F,GAEA,OAAAA,EAAAuL,MACA,cACA,OAAA9V,EAAA+V,IAAA,QAAArhB,IARAuJ,KAQA0X,iBARA1X,MAUA,yBACA,MAAAmS,EAAA7F,GAIA,eACA,iBACA,kBACA,UAAAvN,MAAAuN,EAAAuL,KAAA,6CAEA,QACA,UAAA9Y,MAAA,wBAAAqT,KAAAC,UAAA/F,EAAAuL,SAQA9F,EAAA2F,iBAAA,SAAA3V,EAAAgW,GACAvJ,EAAA4B,GAAArO,aAAA0O,EAAA+G,UACA,IAAAhC,EAAAzT,EAAAiF,MACAsO,EAAAtV,KAWA,GAVA2Q,EAAAuC,UAAA1E,OAAAgH,GAEAuC,EACApH,EAAAO,WAAA1C,OAAAuJ,GAEAA,EAAA,KAKApH,EAAAqH,eAAA7G,MAAAqE,GACA,OAAAzT,EAAA+V,IAAA,QAAAG,KAAA3C,EAAAoC,iBAAApC,GAYA,OAAAE,EAAAqC,MACA,0BACAvC,EAAAqC,kBAAA5V,EAAA+V,IAAA,kBACA,MAEA,uBACAxC,EAAAoC,iBAAA3V,EAAA+V,IAAA,QAAAtC,EAAA0C,OACA,MAEA,qBACA,IAAAC,EAAA7S,IACA8S,EAAA9S,IACAgQ,EAAAhD,KAAA6F,GACA7C,EAAAd,UAAAc,EAAAqC,kBAAA5V,EAAA+V,IAAA,SAAAM,EAAArW,EAAA+V,IAAA,QAAAxL,KAAAhH,KACAgQ,EAAA5C,eACA4C,EAAAzD,YAAAwG,UAAA,IAAAxH,EAAAyH,UAAAF,EAAAD,EAAAJ,GAAA,WACAzC,EAAAoC,iBAAA3V,EAAA+V,IAAA,WAEAxC,EAAAnB,KAAAgE,GACA7C,EAAAhD,KAAA8F,GACA,MAEA,uBACA,IAAAG,EAAAjT,IACA2J,EAAA3J,IACA8S,EAAA9S,IACAgQ,EAAAhD,KAAAiG,GACAjD,EAAAzD,YAAAwG,UAAA,IAAAxH,EAAAyH,UAAAF,EAAAnJ,EAAA8I,GAAA,WACAzC,EAAAgC,QAAAvV,EAAA+V,IAAA,WAEAxC,EAAAhD,KAAArD,GACAqG,EAAAjB,OAAAiB,EAAAqC,kBAAA5V,EAAA+V,IAAA,SAAAS,EAAAxW,EAAA+V,IAAA,QAAAxL,KAAAhH,KACAgQ,EAAA3C,WAAAjI,EAAAkI,WAAA,WAAAwF,GACA9C,EAAAzC,KAAAnI,EAAAoI,kBAAA,GACAwC,EAAAhD,KAAA8F,GACA,MAEA,mBACA,IAAAI,EAAAlT,IACAmT,EAAAnT,IACA8S,EAAA9S,IAEAkQ,EAAAjI,MAGA+H,EAAAgC,QAAAvV,EAAA+V,IAAA,YAGAxC,EAAAhD,KAAAkG,GAEAhD,EAAAvG,MACAqG,EAAAd,UAAAc,EAAAqC,kBAAA5V,EAAA+V,IAAA,SAAAM,EAAArW,EAAA+V,IAAA,QAAAxL,KAAAhH,KAIAtF,KAAA0S,eACA4C,EAAAzD,YAAAwG,UAAA,IAAAxH,EAAAyH,UAAAF,EAAAK,EAAAV,GAAA,WACAzC,EAAAoC,iBAAA3V,EAAA+V,IAAA,WAEAxC,EAAAhD,KAAAmG,GAEAjD,EAAAiD,QAGAnD,EAAAgC,QAAAvV,EAAA+V,IAAA,cAGAxC,EAAAnB,KAAAqE,GACAlD,EAAAhD,KAAA8F,GACA,MAEA,qBACAzH,EAAAO,WAAA1C,OAAAgH,EAAAO,MACAyC,EAAAlT,IACA8S,EAAA9S,IADA,IAEArG,EAAAqW,EAAA3C,WAAA2C,EAAAZ,aAAAhK,EAAAqM,eAAAzB,EAAAvB,WAAA,SAAAuB,EAAAqC,kBAAA5V,EAAA+V,IAAA,YAAA/V,EAAA+V,IAAA,SAAAxL,KAAAhH,KACAoT,EAAApT,IACAgQ,EAAAhD,KAAAoG,GACApD,EAAAhD,KAAAkG,GACAlD,EAAAd,UAAA9J,EAAAoJ,iBAAA7U,EAAAyL,EAAAkI,WAAA,cAAAwF,EAAA5C,EAAAU,MAAA5Q,KACAgQ,EAAA3C,WAAA6C,EAAAO,KAAArL,EAAAqM,eAAArM,EAAAoJ,iBAAA7U,EAAAyL,EAAAkI,WAAA,eAAA4C,EAAAO,KAAAzQ,KACAgQ,EAAA5C,eACA4C,EAAAzD,YAAAwG,UAAA,IAAAxH,EAAAyH,UAAAF,EAAAI,EAAAT,GAAA,WACAzC,EAAAoC,iBAAA3V,EAAA+V,IAAA,WAEAxC,EAAAnB,KAAAqE,GACAlD,EAAAhD,KAAA8F,GACA9C,EAAAV,iBACA,MAEA,qBACAU,EAAAzD,YAAA8G,UAAAnD,EAAA0C,OACA,MAEA,wBACA5C,EAAAzD,YAAA+G,aAAApD,EAAA0C,OACA,MAEA,sBAWA,IARA,IAAAW,EAAAvD,EAAA3C,WAAA2C,EAAAZ,aAAAY,EAAAqC,kBAAA5V,EAAA+V,IAAA,kBAEAgB,GADAV,EAAA9S,IACAA,KACAyT,EAAAD,EACAE,EAAA,GAEA3C,EAAAb,EAAAa,OAAA,GAEA9O,EAAA8O,EAAA/R,OAAA,EAAoCiD,GAAA,IAAQA,EAAA,CAC5C,IAAA0R,EAAA5C,EAAA9O,GACAoJ,EAAAuI,WAAA1K,OAAAyK,GAEAA,EAAAhK,KACA8J,EAAArO,EAAAyO,sBAAAzO,EAAA0M,iBAAA,MAAAyB,EAAAI,EAAAhK,MAAA+J,EAAAzR,GAAAjC,IAAAyT,GAEAC,EAAAzR,GAAAuR,EAIAxD,EAAAnB,KAAAmB,EAAAqC,kBAAA,IAAAlH,EAAA+G,SAAAuB,EAAAhX,EAAA,kBACAuT,EAAAzD,YAAAwG,UAAA,IAAAxH,EAAAuI,YAAAhB,GAAA,WACArW,EAAA+V,IAAA,SAAAG,KAAA,SAAAoB,GACAA,EAAArS,MAAA,IACAO,EAAA8R,EAAApY,KACAqU,EAAAhD,KAAA0G,EAAAzR,IACA8R,EAAAvB,IAAA,cAAAG,KAAA3C,EAAAoC,iBAAApC,OAGAA,EAAAV,iBACAU,EAAAhD,KAAA8F,IAEA,IAAAU,EAAA9R,QACAsO,EAAAhD,KAAAwG,GACAtK,EAAA8K,YAAAlB,EAAApR,MAAA8R,EAAA9R,QAGA,MAEA,kBACA,IAAAuS,EAAA/D,EAAAgE,WAAAlU,IACA8S,EAAA9S,IACAgQ,EAAAd,UAAAc,EAAAqC,kBAAA5V,EAAA+V,IAAA,SAAAyB,GAAAnB,EAAArW,EAAA+V,IAAA,QAAAxL,KAAAhH,KACAgQ,EAAA5C,eACA4C,EAAAoC,iBAAA3V,EAAA+V,IAAA,eAEAyB,IACAjE,EAAAnB,KAAAiE,GACA9C,EAAAhD,KAAAiH,GACAjE,EAAAoC,iBAAA3V,EAAA+V,IAAA,eAGAxC,EAAAhD,KAAA8F,GACA,MAEA,sBACA,IAAAxR,EAAA7E,EAAA+V,IAAA,YACA2B,EAAAnE,EAAAZ,aACA0D,EAAA9S,IACAgQ,EAAA3C,WAAAjI,EAAAkI,WAAA,WAAAwF,EAAAxR,EAAA0F,KAAAhH,KACAgQ,EAAA3C,WAAA8G,EAAAzZ,KAAA2X,kBAAA/Q,IAIA0O,EAAAhD,KAAA8F,GACA9C,EAAAV,iBACAU,EAAAzC,KAAAxG,EAAA3B,EAAAoM,gBAAA2C,GAAA1X,EAAAuK,KAAAhH,MACA,MAEA,oBACA,UAAAvG,MAAAuN,KAAAuL,KAAA,0CAEA,mBACAO,EAAA9S,IAAA,IACA6B,EAAAqO,EAAArO,SAEAA,GAAAqO,EAAAkE,WACAvS,EAAAqO,EAAAkE,SAAA,UAGA,IAAAjR,EAAAtB,GAAA7B,IACAqU,EAAAlR,GAAA,IAAAoI,EAAA+I,WAAAnR,EAAAtB,EAAA0S,OACAnR,EAAA8M,EAAAsE,WAAAxU,IACAyU,EAAArR,GAAA,IAAAmI,EAAAmJ,aAAAtR,EAAA4M,EAAAZ,cAEAqF,GAIAzE,EAAA3C,WAAAoH,EAAAE,eAAA7B,EAAArW,EAAAuK,KAAAhH,KAGA,IAAA4U,EAAA,IAAArJ,EAAAsJ,SAAAR,EAAAI,GAGAzE,EAAA9M,QAAA0R,EAAAnY,EAAAuK,KAAAhH,KACAgQ,EAAA5C,eACA4C,EAAAzD,YAAAwG,UAAA6B,EAAA,WAGA,GAFA5E,EAAAoC,iBAAA3V,EAAA+V,IAAA,UAEArP,EAAA,CAGA6M,EAAA1M,SAAA+Q,EAAAxS,EAAA7B,KAEAoD,EAIA4M,EAAAnB,KAAAzL,GAIA4M,EAAAnB,KAAAiE,GAGA9C,EAAAhD,KAAA7J,GAIA6M,EAAA1M,SAAA+Q,EAAAxS,EAAA7B,KAEA,IAAA8U,EAAArY,EAAA+V,IAAA,kBACAuC,EAAA/E,EAAAZ,aACAY,EAAAtB,sBAAAqG,EAAAlT,EAAA7B,KACAgQ,EAAA5C,eACA,IAAA4H,EAAAF,EAAAhZ,MACAmZ,EAAApT,EAAA0S,MAAA5Y,KACA0P,EAAA6J,YAAAhM,OAAA8L,EAAAhO,MACAkC,EAAA8K,YAAAgB,EAAAG,OAAAF,GAAAD,GACA7J,EAAAQ,SAAAmJ,EAAA,SAAA9N,GACA,GAAAqE,EAAAO,WAAAC,MAAA7E,MAAArL,OAAAsZ,GAAAva,KAAAoB,MAAAqZ,OAAAF,KAAAD,EAEA,OADAta,KAAAoR,QAAAiJ,IACA,IAGA/E,EAAAzD,YAAAwG,UAAAsB,EAAA,WACArE,EAAAoC,iBAAA0C,KAEA9E,EAAAV,iBAGAlM,IACA4M,EAAAhD,KAAA5J,GACA4M,EAAAxM,WAAAiR,EAAAvE,EAAAsE,UAAAxU,KACAgQ,EAAA5C,eACA4C,EAAAzD,YAAAwG,UAAA0B,EAAA,WACAzE,EAAAoC,iBAAA3V,EAAA+V,IAAA,gBAEAxC,EAAAnB,KAAA4F,EAAAE,gBACA3E,EAAAV,oBAGAU,EAAAhD,KAAA8F,GACA,MAEA,qBACA9C,EAAAzC,KAAAxG,EAAA3B,EAAAsM,eAAA1B,EAAAqC,kBAAA5V,EAAA+V,IAAA,cAAA/V,EAAAuK,KAAAhH,MACA,MAEA,wBACA8S,EAAA9S,IACAgQ,EAAAzC,KAAA9B,EAAArG,EAAAuH,QAAAjS,KAAAsR,SAAA8G,IAAA,GACA9C,EAAA3C,WAAAjI,EAAAkI,WAAA,WAAAwF,GACA9C,EAAAzC,KAAAnI,EAAAoI,kBAAA,GACAwC,EAAAhD,KAAA8F,GACAA,EAAA9S,IACAgQ,EAAA3C,WAAAjI,EAAAkI,WAAA,WAAAwF,EAAArW,EAAAuK,KAAAhH,KACAgQ,EAAAzC,KAAAnI,EAAAoI,kBAAA,GACAwC,EAAAhD,KAAA8F,GACA,MAEA,QACA,UAAArZ,MAAA,6BAAAqT,KAAAC,UAAAmD,EAAAqC,SAMA9F,EAAAvJ,QAAA,SAAA0R,EAAA5U,GACAkJ,EAAA4B,GAAA8J,aAAArJ,EAAAsJ,UACA,IAAAO,EAAAhQ,EAAAuH,QAAA,MACA0H,EAAAO,EAAAP,WACAI,EAAAG,EAAAH,aACAY,EAAA3a,KAAA+T,WAAA,WACAnR,EAAA,CAAA8H,EAAAkI,WAAA,YAAA+G,KAAAiB,UAAAF,EAAAX,KAAAa,UAAAF,EAAAX,GAAArP,EAAAuH,QAAA5H,SAAA0P,EAAAE,eAAAhZ,KAAAmQ,QAAA,cAAAsJ,GACA1a,KAAA6S,KAAAxG,EAAA3B,EAAAqM,eAAA4D,EAAA/X,GAAA0C,KAKAyM,EAAAnJ,SAAA,SAAA+Q,EAAArU,GACA,IAAAmD,EAEAkR,GACAnL,EAAA4B,GAAAuJ,aAAA9I,EAAA+I,YACAnR,EAAAkR,EAAAiB,WAEApM,EAAA8K,YAAAK,EAAA,MACAlR,EAAAiC,EAAAuH,QAAA,OAKAjS,KAAA6S,KAAAxG,EAAA3B,EAAAqM,eAAA/W,KAAA+T,WAAA,aAAArJ,EAAAkI,WAAA,YAAAnK,IAAAnD,KAMAyM,EAAAjJ,WAAA,SAAAiR,EAAAzU,GACA,IAAAoD,EAEAqR,GACAvL,EAAA4B,GAAA2J,aAAAlJ,EAAAmJ,cACAtR,EAAAqR,EAAAa,WAEApM,EAAA8K,YAAAS,EAAA,MACArR,EAAAgC,EAAAuH,QAAA,OAMAjS,KAAA6S,KAAAxG,EAAA3B,EAAAqM,eAAA/W,KAAA+T,WAAA,eAAArJ,EAAAkI,WAAA,YAAAlK,IAAApD,KAGAyM,EAAA4F,kBAAA,SAAA5V,EAAAwV,GACA/I,EAAA4B,GAAArO,aAAA0O,EAAA+G,UACA,IAAA1R,EAAA/D,EAAAiF,MAEA,IAAAlB,EAGA,OAAAA,EAFA6K,EAAAqC,WAAAxE,OAAA1I,GAKA,IACAkG,EADAsJ,EAAAtV,KAGA,SAAA6a,EAAA/U,GAGA,GAFA6K,EAAAqC,WAAAxE,OAAA1I,IAEAyR,EAOA,OAAAzR,EANA,IAAAsS,EAAA9S,IACAgQ,EAAAzC,KAAA/M,GACAwP,EAAA3C,WAAAjI,EAAAkI,WAAA,WAAAwF,GACA9C,EAAAzC,KAAAnI,EAAAoI,kBAAA,GACAwC,EAAAhD,KAAA8F,GAeAtH,EAAAgK,aAAAC,aAAAjV,GAUA,SAAAkV,EAAAC,EAAAC,EAAAC,EAAAC,GAIA,GAHA5M,EAAA4B,GAAA8K,aAAAzK,EAAA+G,UACAhJ,EAAA4B,IAAA+K,IAAAF,EAAA,oGAvbAnV,EAybAoV,EAAA5O,KAxbAqE,EAAA4B,QAAApB,MAAArL,IAAA6K,EAAAO,WAAAC,MAAArL,IAAA6K,EAAA0K,eAAAlK,MAAArL,IAAA6K,EAAAmF,iBAAA3E,MAAArL,OAAA+N,SA2bA,OAAAyB,EAAAqC,kBAAAuD,EAAAC,GACK,IAAAA,EAAA,CACL,IAAAG,GAAAL,IAAAG,EACAH,KAAA3F,EAAAZ,aACA,IAAA1I,EAAAsJ,EAAAqC,kBAAAuD,EAAAC,GAEAnP,EAAAsJ,EAAA3C,WAAAsI,EAAAjP,EAAAkP,EAAA5O,KAAAhH,KACAgQ,EAAA5C,eAEA4I,GACAhG,EAAAV,iBAtcA,IAAA9O,EA0cA,OAAAkG,EAMA,OAAAlG,EAAA+R,MACA,uBACA,OAAAgD,EAAAxO,EAAA3B,EAAAoJ,iBAAAwB,EAAAqC,kBAAA5V,EAAA+V,IAAA,WAAAhS,EAAA+N,SAAAmH,EAAA,KAAAjZ,EAAA+V,IAAA,mBAAAhS,EAAAmQ,SAAAnQ,EAAA+N,UAAA9R,EAAAuK,KAAAhH,MAEA,qBACA,IAAAiW,EAAAxZ,EAAA+V,IAAA,UACA0D,EAAAzZ,EAAA+V,IAAA,aAEA,eAAAyD,EAAAjP,KAAAuL,MAAA,WAAA0D,EAAAjP,KAAArL,OACAua,EAAA,KAAA/K,EAAA+G,SAAAnL,EAAA3B,EAAAqM,eAAArM,EAAAoJ,iBAAApJ,EAAAkI,WAAA,MAAAlI,EAAAkI,WAAA,kBAAA2I,EAAAjP,KAAAhH,OACAiW,EAAAxZ,EAAA+V,IAAA,aAAAA,IAAA,IAGA,IAAA2D,EAAAnG,EAAAqC,kBAAA4D,GAeA,OAdAjG,EAAAR,aAAA,WACA,IAAAsD,EAAA9S,IACA1C,EAAA4Y,EAAA/kB,IAAA,SAAAilB,GACA,OAAAV,EAAA,KAAAU,GAAA,QAEAjC,EAAAnE,EAAAZ,aACAiH,EAAAF,EAMA,OALAnG,EAAA3C,WAAAjI,EAAAkI,WAAA,WAAAwF,EAAArW,EAAAuK,KAAAhH,KACAgQ,EAAA3C,WAAAjI,EAAAkI,WAAA,YAAAlI,EAAAuH,QAAAqD,EAAAX,kBACAW,EAAA3C,WAAA8G,EAAA/O,EAAAqM,eAAA4E,EAAA/Y,IACA0S,EAAAzC,KAAAnI,EAAAoI,kBAAA,GACAwC,EAAAhD,KAAA8F,GACAqB,IAIA,oBAGA,OAAAnE,EAAAR,aAAA,WACA,OAAA+F,EAAAnQ,EAAAuM,cAAA+D,EAAA,KAAAjZ,EAAA+V,IAAA,iBAAA/V,EAAA+V,IAAA,aAAArhB,IAAA,SAAAilB,GACA,OAAAV,EAAA,KAAAU,GAAA,YAIA,uBACA,OAAApG,EAAAR,aAAA,WACA,OAAA+F,EAAAnQ,EAAAkR,iBAAA7Z,EAAA+V,IAAA,cAAArhB,IAAA,SAAAolB,GACA,OAAAnR,EAAAuL,SAAA4F,EAAA7U,MAAA8U,KAAAD,EAAA7U,MAAAoF,IAAA4O,EAAA,KAAAa,EAAA/D,IAAA,uBAIA,sBACA,OAAAxC,EAAAR,aAAA,WACA,OAAA+F,EAAAnQ,EAAAqR,gBAAAha,EAAA+V,IAAA,YAAArhB,IAAA,SAAAulB,GACA,OAAAhB,EAAA,KAAAgB,GAAA,YAIA,yBACA,IAAAC,EAAAnW,EAAAoW,YAAA5X,OAAA,EAQA,OAPAvC,EAAA+V,IAAA,eAAAG,KAAA,SAAAkE,GACAA,EAAAlb,OAAAgb,EACAjQ,EAAAsJ,EAAAqC,kBAAAwE,EAAA5E,GAEAjC,EAAAqC,kBAAAwE,GAAA,KAGAnQ,EAEA,wBACA,IAAAoM,EAAA9S,IAiBA,OAhBAgQ,EAAAR,aAAA,WACAyC,IACAvL,EAAAsJ,EAAAZ,cAGA,IAAAqB,EAAAiF,EAAAhP,EAAAjK,EAAA+V,IAAA,eAEA,OAAAhS,EAAAsW,SACA9G,EAAAd,UAAAuB,EAAAqC,EAAArW,EAAA+V,IAAA,QAAAxL,KAAAhH,KACS,OAAAQ,EAAAsW,UACT9G,EAAAjB,OAAA0B,EAAAqC,EAAArW,EAAA+V,IAAA,QAAAxL,KAAAhH,KAGA0V,EAAAhP,EAAAjK,EAAA+V,IAAA,SAAAP,GAAA,GACAjC,EAAAhD,KAAA8F,KAEApM,EAEA,4BACA,IAAAuN,EAAAjU,IAEA2J,GADAmJ,EAAA9S,IACAgQ,EAAAqC,kBAAA5V,EAAA+V,IAAA,UAiBA,OAhBAxC,EAAAd,UAAAvF,EAAAsK,EAAAxX,EAAA+V,IAAA,QAAAxL,KAAAhH,KAEAiS,IACAvL,EAAAsJ,EAAAZ,cAGAsG,EAAAhP,EAAAjK,EAAA+V,IAAA,cAAAP,GACAjC,EAAAnB,KAAAiE,GACA9C,EAAAhD,KAAAiH,GACAyB,EAAAhP,EAAAjK,EAAA+V,IAAA,aAAAP,GACAjC,EAAAhD,KAAA8F,GAEAb,GACAjC,EAAAV,iBAGA5I,EAEA,sBACA,OAAA6O,EAAAxO,EAAA3B,EAAA+J,gBAAA3O,EAAAsW,SAEA9G,EAAAqC,kBAAA5V,EAAA+V,IAAA,eAAAhS,EAAAuW,QAAAta,EAAAuK,KAAAhH,MAEA,uBACA,OAAAgQ,EAAAR,aAAA,WACA,OAAA+F,EAAAxO,EAAA3B,EAAA0M,iBAAAtR,EAAAsW,SAAApB,EAAA,KAAAjZ,EAAA+V,IAAA,eAAAkD,EAAA,KAAAjZ,EAAA+V,IAAA,iBAAA/V,EAAAuK,KAAAhH,QAGA,2BACA,OAAAuV,EAAAxO,EAAA3B,EAAA6I,qBAAAzN,EAAAsW,SAAA9G,EAAAqC,kBAAA5V,EAAA+V,IAAA,SAAAxC,EAAAqC,kBAAA5V,EAAA+V,IAAA,WAAA/V,EAAAuK,KAAAhH,MAEA,uBACA,OAAAuV,EAAAxO,EAAA3B,EAAA4R,iBAAAxW,EAAAsW,SAAA9G,EAAAqC,kBAAA5V,EAAA+V,IAAA,aAAAhS,EAAAuW,QAAAta,EAAAuK,KAAAhH,MAqBA,iBACA,yBACA,8BACA,qBACA,cACA,OAAAuV,EAAA/U,GAGA,QACA,UAAA/G,MAAA,8BAAAqT,KAAAC,UAAAvM,EAAA+R,yQCh5BA7J,EAAOuO,SAAWC,EAAQ,MAC1BxO,EAAOyO,GAAKD,EAAQ,UAEdE,cA0BJ,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAA1d,OAAA2d,EAAA,EAAA3d,CAAAc,KAAA0c,IAChBE,EAAA1d,OAAA4d,EAAA,EAAA5d,CAAAc,KAAAd,OAAA6d,EAAA,EAAA7d,CAAAwd,GAAAnZ,KAAAvD,KAAM2c,KA1BRpc,MAAQ,CACNyc,KAAM,CACJ,CACE/b,KAAM,eACNgc,MAAOC,KAET,CACEjc,KAAM,qBACNgc,MAAOE,KAET,CACElc,KAAM,qBACNgc,MAAOG,MAGXC,YAAa,GACbpQ,UAAW,GACXG,aAAc,GACdpO,KAAM,mCACNse,WAAW,EACXC,UAAU,EACVC,UAAU,EACVC,eAAgB,IAGAb,EAMlBc,WAAa,SAAAC,GACK,iBAANA,EACRf,EAAKgB,SAAS,CACZ5e,KAAM2e,IAGRf,EAAKgB,SAAS,CACZ5e,KAAM2e,EAAGE,cAbGjB,EAkBlBkB,UAAY,SAAAH,GACV,GAAIf,EAAKrc,MAAM+c,UAObS,MAAM,sEAPiB,CACvB,IAAIC,EAAUpB,EAAKrc,MAAMyc,KAAK5O,KAC5B,SAAA6P,GAAC,OAAIA,EAAEhd,OAAS0c,EAAGO,cAAcC,WAAWC,aAAa,UAE3DxB,EAAKc,WAAWM,EAAQf,OACxBL,EAAKyB,eAAeV,KAxBNf,EA8BlByB,eAAiB,SAAAV,GACXf,EAAKrc,MAAMid,SACbZ,EAAKrc,MAAMkd,eAAea,UAAUC,OAAO,YAE3C3B,EAAKgB,SAAS,CACZJ,UAAU,IAGdG,EAAGO,cAAcI,UAAUE,IAAI,YAC/B5B,EAAKgB,SAAS,CACZH,eAAgBE,EAAGO,iBAxCLtB,EA4ClB6B,gBAAkB,SAAAxR,GAChB2P,EAAKgB,SAAS,CACZ3Q,eA9Cc2P,EAkDlB8B,mBAAqB,SAAAtR,GACnBwP,EAAKgB,SAAS,CACZxQ,kBApDcwP,EAwDlB+B,gBAAkB,WAChB/B,EAAKgB,SAAS,CACZN,WAAYV,EAAKrc,MAAM+c,UACvBC,UAAWX,EAAKrc,MAAMgd,YA3DRX,EA+DlBgC,YAAc,WACZ,IACEhC,EAAK+B,kBACLE,IAAiBtR,KAAKqP,EAAKrc,MAAMvB,MACjC4d,EAAK8B,mBAAmB1Q,EAAOhB,KAAKI,cACpCwP,EAAK6B,gBAAgBzQ,EAAOhB,KAAKC,WACjC,MAAO9M,GACPZ,QAAQY,MAAMA,KAtEAyc,EA0ElB/V,mBAAqB,SAAA8W,GACnBf,EAAKkC,YAAY3I,QAAQ5V,MAAMwe,KAAO,GACtC,IAAIjR,EAAO6P,EAAGO,cAAcc,WAAjB,KAAoChY,MAC/C6X,IAAiBhY,mBAAmBiH,IA7EpB8O,EAgFlBqC,cAAgB,WACdrC,EAAKkC,YAAY3I,QAAQ5V,MAAMwe,KAAO,GACtCnC,EAAKsC,OAAO/I,QAAQ+I,OAAOC,UAAU,YAAY,GACjDnR,EAAOhB,KAAO,CACZI,aAAc,GACdH,UAAW,IAEbe,EAAOoR,cAAgB,GACvBpR,EAAOqR,gBAAkB,EACzBzC,EAAK+B,kBACL/B,EAAKgB,SAAS,CACZ3Q,UAAW,GACXG,aAAc,MA1FhBwP,EAAKkC,YAAcQ,sBACnB1C,EAAKsC,OAASI,sBAHE1C,wEAiGhB,IAAI7N,EAAU,CACZwQ,MAAO,MACPC,QAAS,EACTC,OAAQ,UACRC,KAAM,KACNC,aAAa,EACbpC,SAAUvd,KAAKO,MAAMgd,UAEvB,OACEqC,EAAAnV,EAAAoV,cAACC,EAAA,EAAD,KACEF,EAAAnV,EAAAoV,cAACE,EAAA,EAAD,CACE/C,KAAMhd,KAAKO,MAAMyc,KACjBc,UAAW9d,KAAK8d,UAChBc,YAAa5e,KAAK4e,YAClBK,cAAejf,KAAKif,cACpB3B,UAAWtd,KAAKO,MAAM+c,YAExBsC,EAAAnV,EAAAoV,cAAA,OAAKG,UAAU,wBACbJ,EAAAnV,EAAAoV,cAAA,OAAKG,UAAU,cACbJ,EAAAnV,EAAAoV,cAAA,OAAKG,UAAU,oBACbJ,EAAAnV,EAAAoV,cAACI,EAAAxV,EAAD,CACEyV,IAAKlgB,KAAKkf,OACVlY,MAAOhH,KAAKO,MAAMvB,KAClB+P,QAASA,EACToR,SAAUngB,KAAK0d,cAGnBkC,EAAAnV,EAAAoV,cAACO,EAAA,EAAD,CACEF,IAAKlgB,KAAK8e,eAGdc,EAAAnV,EAAAoV,cAAA,OAAKG,UAAU,eACbJ,EAAAnV,EAAAoV,cAACQ,EAAA,EAAD,CACEpT,UAAWjN,KAAKO,MAAM0M,UACtBG,aAAcpN,KAAKO,MAAM6M,aACzBvG,mBAAoB7G,KAAK6G,+BA9JrByZ,aAuKH5D,2DC9Lf,IAAA6D,EAAA9hB,EAAA,GAAA+hB,EAAA/hB,EAAAkS,EAAA4P,GAUeE,IARA,SAAC9D,GACZ,OACI6D,EAAA/V,EAAAoV,cAAA,OAAKG,UAAU,oBACVrD,EAAM+D,2HCFbC,6MACJpgB,MAAQ,CACNwe,KAAM,uFAGY,IAAA6B,EAAA5gB,KAClB6gB,eAAKC,OAAOvhB,QAAS,SAAAC,GACnBohB,EAAKhD,SAAS,SAAAmD,GAAA,IAAGhC,EAAHgC,EAAGhC,KAAH,MAAe,CAAEA,KAAI,GAAAzR,OAAApO,OAAA8hB,EAAA,EAAA9hB,CAAM6f,GAAN,CAAYkC,iBAAOzhB,2CAKxD,OACE0hB,EAAAzW,EAAAoV,cAAA,OAAKG,UAAU,wBAAwBmB,MAAO,CAAEC,gBAAiB,YAC/DF,EAAAzW,EAAAoV,cAAA,MAAIG,UAAU,iBAAd,YACAkB,EAAAzW,EAAAoV,cAAA,WACEqB,EAAAzW,EAAAoV,cAACwB,EAAA,QAAD,CACEtC,KAAM/e,KAAKO,MAAMwe,KACjBuC,QAAQ,kBAlBWhB,aA0BhBK,wICzBTY,mLAEM,IAAA3E,EAAA5c,KACEwhB,EAAWhF,EAAQ,MAEzB,OACI0E,EAAAzW,EAAAoV,cAAA,WAEwC,IAAhC7f,KAAK2c,MAAM1P,UAAU3I,OAEjB4c,EAAAzW,EAAAoV,cAAA,OAAKG,UAAU,oBACXkB,EAAAzW,EAAAoV,cAAA,OAAKG,UAAU,oBACXkB,EAAAzW,EAAAoV,cAAA,kBAEI7f,KAAK2c,MAAMvP,aAAa3W,IAAI,SAACgrB,GAAe,IAAAC,EACxC,OAAQR,EAAAzW,EAAAoV,cAAA,OAAKzT,IAAKqV,GACVP,EAAAzW,EAAAoV,cAAC8B,EAAA,GAADD,EAAA,CACI9iB,GAAG,gBACHsZ,MAAOuJ,GAFXviB,OAAA0iB,EAAA,EAAA1iB,CAAAwiB,EAAA,cAAApU,OAGiBmU,IAHjBviB,OAAA0iB,EAAA,EAAA1iB,CAAAwiB,EAAA,eAIkBZ,OAAOW,IAJzBviB,OAAA0iB,EAAA,EAAA1iB,CAAAwiB,EAAA,SAOW,UAPXxiB,OAAA0iB,EAAA,EAAA1iB,CAAAwiB,EAAA,QAQW,CACHG,OAAQ,QAThBH,QAiBpBR,EAAAzW,EAAAoV,cAAA,OAAKG,UAAU,qBACXkB,EAAAzW,EAAAoV,cAAA,yBAEI7f,KAAK2c,MAAM1P,UAAUxW,IAAI,SAACsW,GACtB,OACImU,EAAAzW,EAAAoV,cAAC8B,EAAA,EAAD,CACI7T,KAAMf,EAASI,YACfvO,GAAImO,EAASI,YACbf,IAAKW,EAASI,YACdmU,QAAQ,YACRQ,MAAM,UACNC,KAAK,QACLZ,MAAO,CACHU,OAAO,OAEXG,QAASpF,EAAKD,MAAM9V,oBAVxB,aAYWkG,EAASI,iBAQ5C+T,EAAAzW,EAAAoV,cAAA,OAAKG,UAAU,sBACXkB,EAAAzW,EAAAoV,cAACoC,EAAAxX,EAAD,CACAc,OAAQiW,EACRU,YAAY,aA7Df5B,aAuENiB,wCC3EAY,EAAA,iYCAAA,EAAA,0jBCAAA,EAAA,wcCUAC,EARH,SAACzF,GACT,OACI0F,EAAA5X,EAAAoV,cAAA,OAAKG,UAAU,gBAAgBgC,QAASrF,EAAMmB,WAC1CuE,EAAA5X,EAAAoV,cAAA,MAAI5e,KAAM0b,EAAM1b,MAAQ0b,EAAM1b,QCiBpCqhB,mLACM,IAAA1F,EAAA5c,KACIuiB,EAAYviB,KAAK2c,MAAjB4F,QACR,OACIF,EAAA5X,EAAAoV,cAAA,OAAKG,UAAU,cACXqC,EAAA5X,EAAAoV,cAAA,OAAKG,UAAU,kBAEPhgB,KAAK2c,MAAMK,KAAKvmB,IAAI,SAAC+rB,GACjB,OACAH,EAAA5X,EAAAoV,cAAC4C,EAAD,CACIrW,IAAKoW,EAAIvhB,KACTA,KAAMuhB,EAAIvhB,KACVgc,MAAOuF,EAAIvF,MACXa,UAAWlB,EAAKD,MAAMmB,eAMtCuE,EAAA5X,EAAAoV,cAAA,sBAEK7f,KAAK2c,MAAMW,UAMZ+E,EAAA5X,EAAAoV,cAAC6C,EAAAjY,EAAD,CAAQ6W,QAAQ,YAAYQ,MAAM,UAAU9B,UAAWuC,EAAQI,OAAQX,QAAShiB,KAAK2c,MAAMsC,eAA3F,QAEIoD,EAAA5X,EAAAoV,cAAC+C,EAAAnY,EAAD,CAAMuV,UAAWuC,EAAQM,WAAzB,SANJR,EAAA5X,EAAAoV,cAAC6C,EAAAjY,EAAD,CAAQ6W,QAAQ,YAAYQ,MAAM,UAAU9B,UAAWuC,EAAQI,OAAQX,QAAShiB,KAAK2c,MAAMiC,aAA3F,OAEIyD,EAAA5X,EAAAoV,cAAC+C,EAAAnY,EAAD,CAAMuV,UAAWuC,EAAQM,WAAzB,+BAzBAvC,aAyCTwC,yBAxDA,SAAAvD,GAAK,MAAK,CACrBoD,OAAQ,CACNd,OAAQtC,EAAMwD,QAAQC,MAExBC,SAAU,CACRC,YAAa3D,EAAMwD,QAAQC,MAE7BH,UAAW,CACTM,WAAY5D,EAAMwD,QAAQC,MAE5BI,UAAW,CACTC,SAAU,MA6CDP,CAAmBR,2EC/DlC7jB,EAAA2K,EAAA+Y,GAAA,IAAA5B,EAAA9hB,EAAA,GAAA+hB,EAAA/hB,EAAAkS,EAAA4P,GAAA+C,EAAA7kB,EAAA,IAAA8kB,EAAA9kB,EAAAkS,EAAA2S,GAAAE,GAAA/kB,EAAA,KAAAA,EAAA,MAKAglB,IAASC,OAAOlD,EAAA/V,EAAAoV,cAAC2D,EAAA,EAAD,MAASG,SAASC,eAAe,2ECLjD,SAAA5V,GAAA,IAAA6V,EAAmBplB,EAAQ,KAE3BqlB,EAAwBrlB,EAAQ,KAEhCslB,EAAwBtlB,EAAQ,KAEhCulB,EAAiCvlB,EAAQ,KAEzCwlB,EAAgCxlB,EAAQ,KAExCylB,EAAyBzlB,EAAQ,KAEjC0lB,EAAiC1lB,EAAQ,KAEzC2lB,EAAsB3lB,EAAQ,KAE9B4lB,EAAkB5lB,EAAQ,KAE1B6lB,EAAqB7lB,EAAQ,KAG7BwP,EADexP,EAAQ,KACvBwP,gBAEAD,EAAAZ,aAAA,GACA,IAAAmX,EAAA,CACAC,QAAA,SAAAziB,GACAqL,aAAA,GACArL,EAAAkP,SAAA4S,GACA9hB,EAAAkP,SAAA6S,GACA/hB,EAAAkP,SAAA8S,GACAhiB,EAAAkP,SAAAoT,GACApW,EAAAb,gBAGA7W,EAAAC,QAAA,CACAiW,oBAAA,WACA,OACAgY,QAAAF,IAGA7X,kBAAA,WACA,OACA+X,QAAAT,IAGArX,0BAAA,WACA,OACA8X,QAAAR,IAGAS,mBAAA,WACA,OACAD,QAAAP,IAGAS,2BAAA,WACA,OACAF,QAAAN,IAGAvX,gBAAA,WACA,OACA6X,QAAAL,IAGAvX,eAAA,WACA,OACA4X,QAAAH,6CCnEQ7lB,EAAQ,GAEhBlI,EAAAC,QAAA,CACAouB,eAAA,SAAA7iB,GACAA,EAAAuK,KAAAqP,OAAA1F,UAAA,SAAAlU,EAAAuK,KAAAqP,OAAA1F,SAAAhV,MACAc,EAAAuK,KAAA9I,UAAA,GAAAqhB,SAAApuB,IAAA,SAAAyW,GACAE,aAAA/F,KAAA6F,EAAAlG,8BCNAzQ,EAAAC,QAAA,CACAsuB,mBAAA,SAAA/iB,GACA,IAAAgU,EAAAhU,EAAAuK,KAAA1N,GAAAqC,KACAiV,EAAAnU,EAAAuK,KAAAiB,KAEA,MAAA2I,IAEA,cAAAA,EAAA2B,MACAzK,aAAA2X,SAAAhP,OAAAG,EAAAjV,OAAAmM,aAAA2X,SAAA7O,EAAAjV,OACAmM,aAAA/F,KAAA6O,EAAAjV,MAKA,oBAAAiV,EAAA2B,MAAA,kBAAA3B,EAAA2B,MACA9V,EAAAkP,SAAA,CACAC,WAAA,SAAAnP,GACAqL,aAAA2X,SAAAhP,OAAAhU,EAAAuK,KAAArL,OAAAmM,aAAA2X,SAAAhjB,EAAAuK,KAAArL,OACAmM,aAAA/F,KAAAtF,EAAAuK,KAAArL,+BClBA1K,EAAAC,QAAA,CACAof,qBAAA,SAAA7T,GACA,IAAAgU,EAAAhU,EAAAuK,KAAAyJ,KAAA9U,KACAiV,EAAAnU,EAAAuK,KAAA4J,MAAAjV,UAEAb,GAAA8V,GACA9I,aAAA2X,SAAAhP,OAAAG,IAAA9I,aAAA2X,SAAA7O,IACA9I,aAAA/F,KAAA6O,GAKA,oBAAAnU,EAAAuK,KAAA4J,MAAA2B,MAAA,kBAAA9V,EAAAuK,KAAA4J,MAAA2B,MACA9V,EAAAkP,SAAA,CACAC,WAAA,SAAAnP,GACAqL,aAAA2X,SAAAhP,OAAAhU,EAAAuK,KAAArL,OAAAmM,aAAA2X,SAAAhjB,EAAAuK,KAAArL,OACAmM,aAAA/F,KAAAtF,EAAAuK,KAAArL,gCChBA,IAAApC,EAAQJ,EAAQ,GAEhBlI,EAAAC,QAAA,CACAguB,QAAA,SAAAziB,GAEAA,EAAAuK,KAAA0D,KAAAC,QAAApR,EAAAoU,oBAAApU,EAAA0U,qBAAA,IAAA1U,EAAA+T,WAAA,iBAAA/T,EAAA+c,iBAAA,OAIA7Z,EAAAuK,KAAA0D,KAAAC,QAAApR,EAAAmmB,oBAAAnmB,EAAA+T,WAAA,yBAAA/T,EAAAmS,eAAA,CAAAnS,EAAAiY,gBAAAjY,EAAAkY,eAAAlY,EAAA+T,WAAA,WAAA/T,EAAAomB,wBAAA,CAAApmB,EAAA+T,WAAA,SAAA/T,EAAA+T,WAAA,oDCTA,SAAA5E,GAAA,IAAAnP,EAAQJ,EAAQ,GAEhBuP,EAAAqR,gBAAA,EACA9oB,EAAAC,QAAA,CAEAsf,iBAAA,SAAA/T,GACA,GAAAA,EAAAuK,KAAA0J,QAAAjU,EAAAuK,KAAA2J,UAAA,YAAAlU,EAAAuK,KAAA0J,OAAA/U,MAAA,mBAAAc,EAAAuK,KAAA2J,SAAAhV,KAAA,CACA,IAAAikB,EAAAnjB,EAAAojB,WAAA,SAAApjB,GACA,OAAAA,EAAAqjB,qBAEAF,EAAAG,YAAAxmB,EAAAoU,oBAAApU,EAAAkY,eAAAlY,EAAA+T,WAAA,YAAA/T,EAAA+T,WAAA,OAAAsS,EAAAI,UAAAzP,WAAArS,UAAA,GAAAwD,OAAAnI,EAAA+T,WAAA,iBAAA/T,EAAA0mB,cAAA,OAAAL,EAAAI,UAAAzP,WAAArS,UAAA,GAAAwD,WACAke,EAAAG,YAAAxmB,EAAA4U,oBAAA,OAAA5U,EAAA6U,mBAAA7U,EAAA+T,WAAA,OAAAsS,EAAAI,UAAAzP,WAAArS,UAAA,GAAAwD,OAAAnI,EAAAkY,eAAAlY,EAAA+T,WAAA,8BACAyM,6DCZA,IAAAxgB,EAAQJ,EAAQ,GA8BhBlI,EAAAC,QAAA,CACAsf,iBAAA,SAAA/T,GACA,GAAAA,EAAAuK,KAAA2J,UAAAlU,EAAAuK,KAAA2J,SAAAhV,MAAA,OAAA2D,SAAA,wBAAA7C,EAAAujB,UAAAzN,KAAA,CACA,IAAA2N,EAAAzjB,EAAAojB,WAAA,SAAApjB,GACA,OAAAA,EAAA0jB,2BAEAvmB,OAAAD,KAAA+N,KAAAC,UAAArI,UAAAQ,QAAA,SAAAgH,GACAY,KAAAC,UAAArI,SAAAwH,IACAoZ,EAAAH,YAAAxmB,EAAAoU,oBAAApU,EAAA0U,qBAAA,IAAA1U,EAAA+T,WAAAxG,GAlCA,SAAAA,GACA,cAAAY,KAAAC,UAAArI,SAAAwH,IACA,aACA,OAAAvN,EAAA6mB,eAAA1Y,KAAAC,UAAArI,SAAAwH,IAEA,aACA,OAAAvN,EAAA0mB,cAAAvY,KAAAC,UAAArI,SAAAwH,IAEA,cACA,OAAAvN,EAAA8mB,eAAA3Y,KAAAC,UAAArI,SAAAwH,KAyBAwZ,CAAAxZ,gCCtCA,IAAAvN,EAAQJ,EAAQ,GAEhBlI,EAAAC,QAAA,CAEAguB,QAAA,SAAAziB,GACAA,EAAAuK,KAAA0D,KAAAC,QAAApR,EAAAoU,oBAAApU,EAAAkY,eAAAlY,EAAAiV,iBAAAjV,EAAA+T,WAAA,iBAAA/T,EAAA+T,WAAA,OAAAtF,OAAA1I,WAAA,6BCLA,IAAA/F,EAAQJ,EAAQ,GAEhBqiB,OAAA+E,YAAA,SAAA3Y,GACA,OAAAA,KAAA2I,YAAA3I,EAAA2I,WAAA8F,QAAAzO,EAAA2I,WAAA8F,OAAA3F,QAAA9I,EAAA2I,WAAA8F,OAAA1F,UAAA,YAAA/I,EAAA2I,WAAA8F,OAAA3F,OAAA/U,MAAA,mBAAAiM,EAAA2I,WAAA8F,OAAA1F,SAAAhV,MAGA,IAAA6kB,EAAAjnB,EAAAinB,YAAAjnB,EAAA+T,WAAA,KAAA/T,EAAAmS,eAAA,CAAAnS,EAAAoU,oBAAApU,EAAAkY,eAAAlY,EAAAiV,iBAAAjV,EAAA+T,WAAA,WAAA/T,EAAA+T,WAAA,SAAA/T,EAAA+T,WAAA,WACArc,EAAAC,QAAA,CACAuvB,yBAAA,CACAC,KAAA,SAAAjkB,GAIA,IAHA,IAAAkkB,EAAAlkB,EAAAuK,KAAA0D,KACAkW,EAAA,GAEA3e,EAAA,EAAqBA,EAAA0e,EAAA3hB,SAAkBiD,GACvCse,YAAAI,EAAA1e,KAAA1I,EAAAsnB,cAAAF,EAAA1e,KAAA1I,EAAAunB,mBAAAH,EAAA1e,KAAA1I,EAAAwnB,eAAAJ,EAAA1e,KAAA1I,EAAAynB,iBAAAL,EAAA1e,KAAA1I,EAAA0nB,eAAAN,EAAA1e,MACA2e,EAAA7e,KAAAE,GAIA,IAAAif,EAAA,GACAC,EAAA,GAEA,MAAAP,EAAA5hB,SAAAzF,EAAA6nB,UAAA3kB,KAAAlD,EAAAwnB,eAAAtkB,EAAA4kB,uBAAA,CACA,QAAAC,EAAAV,EAAA5hB,OAAA,EAA6CsiB,IAAA,IAAUA,EAAA,CACvDH,EAAAD,EACAA,EAAA,GACA,IAAAK,EAAA,GACA,GAAAD,IAAAC,EAAAX,EAAAU,GAAA,GACA,IAAAE,EAAAb,EAAA3hB,OACAsiB,EAAAV,EAAA5hB,OAAA,IAAAwiB,EAAAZ,EAAAU,EAAA,KACA,GAAAA,GAAAJ,EAAAnf,KAAA4e,EAAAC,EAAAU,KACAJ,EAAAnf,KAAAxI,EAAAkoB,aAAAloB,EAAAmS,eAAAiV,EAAAznB,MAAAqoB,EAAAC,GAAAxZ,OAAAmZ,GAAA,IAAAX,EAAA,OAKA,QAAA/jB,EAAA+V,IAAA,QAAAxT,QACAvC,EAAA+V,IAAA,WAAAyG,SAGA,QAAAyI,EAAA,EAAyBA,EAAAR,EAAAliB,SAAuB0iB,EAChDjlB,EAAAklB,cAAA,OAAAT,EAAAQ,2BCzCAzwB,EAAAC,QAAA,CACA0wB,+CAAA,SAAAnlB,GACA,IAAAkN,EAAAlN,EAAA+V,IAAA,QAEA,uBAAA7I,EAAA4I,MAAA,kBAAA5I,EAAA4I,KAAA,CACA,IAAAsP,GAAA,EACAplB,EAAAkP,SAAA,CACA0E,oBAAA,SAAA5T,GACA8jB,YAAA9jB,EAAAuK,QAAA6a,GAAA,MAIAA,GACAlY,EAAAgC,SAAA,CACAC,WAAA,SAAAnP,GACAqL,aAAA2X,SAAAhjB,EAAAuK,KAAArL,OACAmM,aAAA/F,KAAAtF,EAAAuK,KAAArL,iCChBA,IAAApC,EAAQJ,EAAQ,GAEhBlI,EAAAC,QAAA,CACA4wB,YAAA,SAAArlB,GACA,qBAAAA,EAAAuK,KAAA+a,WAAAxP,KAAA,CACA,IAAAoO,EAAApnB,EAAAmS,eAAA,CAAAjP,EAAAuK,KAAA+a,YAAA,IACAtlB,EAAAuK,KAAA+a,WAAApB,2BCNA,SAAA1X,GAAA,IAAA7O,EAASjB,EAAQ,IAEjB8N,EAAY9N,EAAQ,KAEpBlI,EAAAC,QAAA,SAAA8wB,EAAAC,EAAAC,GACA,IAQAxlB,GANAwlB,EACAF,EAEA5nB,EAAAuC,aAAAsM,EAAA,6BAGAD,WAKAtP,EAHAuN,EAAAmB,UAAA1L,EAAA,CACA2L,QAAA4Z,IAEAvoB,KAEA,OACAoO,0BACApO,+CCtBAzI,EAAAC,QAAA,SAAAgX,GAYA,MADA,uIAViB/O,EAAQ,IAOzBkB,CALclB,EAAQ,KAEtBmP,QAAAJ,EAAA,CACAia,SAAA,IACGzoB,KACH,CACAoD,cAAA,IAEmKpD,KAAA,kOCFtJP,EAAQ,IAArB,IAEAgS,EAAYhS,EAAQ,IAEpBkS,EAAAF,EAAAG,WACAlG,EAAA+F,EAAAhC,SAEAiZ,EAAYjpB,EAAQ,KAASipB,MAE7BrW,EAAc5S,EAAQ,KAAQ4S,QAE9B9P,EAAgB9C,EAAQ,KAAS8C,UAEjComB,EAAalpB,EAAQ,KAErB4N,EAAc5N,EAAQ,KAAQ4N,QAE9B7V,EAAAkX,UAAA,SAAA6B,EAAAqY,GACAjX,EAAA6T,QAAAhW,OAAAe,GACA,IAAAtP,EAAA,IAAAsB,EACAsmB,EAAAtY,EAAAS,KACAjK,EAAA6hB,EAAA7hB,OAEA+hB,GADAD,EAAA,IACAD,EAAAxmB,OAAA,IAAAwV,OAAA,SAAA7M,EAAAge,GAKA,OAJAA,EAAAC,OACAje,EAAA1C,KAAA0gB,EAAA9mB,MAGA8I,GACG,KACHke,EAAAN,EAAAO,QAAA3Y,GAAA0Y,OA8CA,GA1CAA,EAAA/e,UACA+e,EAAA7iB,QAAA,SAAAhE,IACA,WAAAA,EAAAyW,MAAA9R,KACAA,GAIA3E,EAAA+mB,UAAA/iB,QAAA,SAAA2iB,IACA,IAAAD,EAAAzjB,QAAA0jB,EAAA9mB,OACA8mB,EAAAK,KAAAhjB,QAAA,SAAAijB,GACAA,EAAApnB,KAAA+mB,OAAA,MAMA5mB,EAAAknB,WAAAljB,QAAA,SAAAgE,GAOA,IANA,IAAAmf,EAAAnf,EAAAof,UAAApf,EAAAof,SAAAJ,KAAAxR,OAAA,SAAA7M,EAAAse,GACA,OAAAte,GAAAse,EAAApnB,KAAA+mB,QAAA,IAAAF,EAAAzjB,QAAAgkB,EAAApnB,QACS,GAETwnB,EAAArf,EAAAqf,KAEA,SAAAA,EAAA5Q,MAAA4Q,EAAAC,OACAD,IAAAC,OAGAH,IAAAnf,EAAAof,WAAA,IAAAV,EAAAzjB,QAAA+E,EAAAwJ,WAAA3R,OAAAmI,EAAAof,UAAA,UAAApf,EAAAof,SAAApnB,MAAAyW,MAAAzO,EAAAof,SAAApnB,QAAAqnB,IAEA,iBAAArf,EAAAof,SAAAJ,KAAA,GAAAvQ,MAAA,uBAAAzO,EAAAof,SAAAJ,KAAA,GAAA9b,KAAAuL,SACAzO,EAAAwJ,WAAAoV,OAAA,EAEA5e,EAAAof,UACApf,EAAAof,SAAAJ,KAAAhjB,QAAA,SAAAijB,GACAA,EAAApnB,KAAA+mB,OAAA,UAQAjiB,EAAA,CAGA,IAAA4iB,EAAAd,EAAAvjB,OAAA,EAEAqM,EAAAgF,oBAAAxE,MAAA0W,EAAAc,MACAd,EAAAc,GAAAtc,EAAA3B,EAAAoM,gBAAA+Q,EAAAc,GAAA9S,YAAAgS,EAAAc,GAAArjB,MAIAuiB,EAAAnd,EAAAke,mBAAAle,EAAAkI,WAAA7M,EAAA,0BAAA2E,EAAAsG,eAAA6W,IACA,IAAAzkB,EAAAqN,EAAAQ,SAAA4W,EAAA,SAAAvb,GACA,OAmDA,SAAAuc,EAAAvc,EAAAlL,EAAAnB,GAGA,GAAA0Q,EAAAO,WAAAC,MAAA7E,MAAAqE,EAAAmU,mBAAA3T,MAAAnR,KAAA8oB,OAAAxc,OAAAtM,KAAA8oB,OAAAxc,KAAA1N,KAAA0N,MAAA0b,MAEA,YADAhoB,KAAAoR,QAAA/E,EAAA3B,EAAAoJ,iBAAAxH,EAAA5B,EAAAuH,QAAA,OAAA3F,EAAAhH,MAIA,IAAAqL,EAAAtN,SAAA8N,MAAA7E,GAGA,OAGAA,EAAAyc,WAAA,EAEAzc,EAAAuJ,aAEAvJ,EAAAuJ,YAAA,EAKAvJ,EAAAuL,KAAA,qBACAvL,EAAA0D,KAAAtF,EAAAsG,eAAA,CAAA3E,EAAA3B,EAAAoM,gBAAAxK,EAAA0D,MAAA1D,EAAA0D,KAAA1K,QAOAgH,EAAA1N,GAAA0N,EAAA1N,IAlCA8L,EAAAkI,WAAA,QAAAhU,KAmCA,IAAAoqB,EAAA,cAAA1c,EAAA1N,GAAAqC,KACA,IAAAgoB,EAAA,YAAA3c,EAAA1N,GAAAqC,KACA,IAAAioB,EAAA5c,EAAA1N,GACA,IAAAsW,EAAA5I,EAAA1N,GAAAqC,KACA,IAAAkoB,EAAAzB,EAAApb,GACA,IAAA8c,EAAAD,EAAA7c,EAAA+c,OAAA/b,OAAA6b,EAAAG,aAAA7yB,IAAA,SAAAsxB,GACA,OAAAA,EAAAnpB,MADA0N,EAAA+c,OAKA,IAAAE,GAAA,EACA9Y,EAAAQ,SAAA3E,EAAA0D,KAAA,SAAApI,GACA,GAAA+I,EAAAtN,SAAA8N,MAAAvJ,GACA,SAGA+I,EAAA6Y,aAAArY,MAAAvJ,KACA2hB,GAAA,KAMAjd,EAAA0D,KAAAS,EAAAQ,SAAA3E,EAAA0D,KAAA,SAAApI,GACA,OAAAihB,EAAAtlB,KAAAvD,KAAA4H,EAAAxG,EAAAkM,OAAA8b,GAAAnpB,KAGA,IAAAqR,EAAArR,EAAAwpB,SACA,IAAAC,EAAA,IAAArY,EAAAC,EAAArR,GACA,IAAA8B,EAAA,IAAA0O,EAAA+G,SAAAlL,GACAod,EAAApS,QAAAvV,EAAA+V,IAAA,SACA,IAAA6R,EAAAD,EAAAzU,WAAA3I,EAAA1N,GAAAqC,KAAAmoB,GAEA,IAAAQ,EAAA,GAEAZ,GAAAC,IACA3c,EAAA+c,OAAAjkB,QAAA,SAAAwB,GACAA,EAAAohB,OACA4B,EAAAviB,KAAAqD,EAAAuI,oBAAAvI,EAAA6I,qBAAA,IAAA3M,EAAA8D,EAAAqR,gBAAA,CAAAnV,SAIAuiB,IACAS,IAAAtc,OAAA6b,KAIAH,GAAAC,GACAW,EAAAviB,KAAApE,MAAA2mB,EAAA,CAAAlf,EAAA6J,YAAA7J,EAAA+J,gBAAA,IAAAiV,EAAA3V,WAAA,YAAArJ,EAAAoM,gBAAApM,EAAAqM,eAAArM,EAAAoJ,iBAAApJ,EAAAkI,WAAA,MAAAlI,EAAAkI,WAAA,gBAAAtG,EAAA1N,GAAA8L,EAAAuH,QAAA,MAAAvH,EAAAmf,iBAAAnf,EAAAkI,WAAA,mBAIAgX,EAAAviB,KAAAqiB,EAAAlW,WAAA,UAAA9I,EAAAuH,QAAA,KACA2X,EAAAviB,KAAAqiB,EAAAlW,WAAA,WAAA9I,EAAAuH,QAAA,KAEA,QAAA1K,EAAA,EAAAgD,EAAAmf,EAAA7U,cAAuCtN,GAAAgD,EAAQhD,IAC/CqiB,EAAAviB,KAAAqiB,EAAAlW,WAAA,OAAAjM,EAAA,OAGAgiB,GACAK,EAAAviB,KAAAqiB,EAAAlW,WAAA,WAAA9I,EAAAqR,gBAAA,MAGA,IAAA+N,EAAA,GAEA,QAAAviB,EAAA,EAAAgD,EAAAmf,EAAA7U,cAAuCtN,GAAAgD,EAAQhD,IAC/CuiB,EAAAziB,KAAAqD,EAAAuL,SAAA,OAAAvL,EAAAkI,WAAA,OAAArL,GAAAmD,EAAAkI,WAAA,OAAArL,KAGAqiB,IAAAtc,OAAA,CAAA5C,EAAAqc,aAAArc,EAAAsG,eAAA+Y,EAAAL,EAAAV,EAAAI,EAAAG,GAAAjc,OAAAqc,IAAAjf,EAAAob,YAAApb,EAAAkI,WAAA,UAAAlI,EAAAsG,eAAA,CAAAtG,EAAA6J,YAAA7J,EAAA+J,gBAAA,IAAA/J,EAAA0M,iBAAA,aAAA1M,EAAAkI,WAAA,KAAAlI,EAAAkI,WAAA,sBAAAlI,EAAAuI,oBAAAvI,EAAA6I,qBAAA,IAAA7I,EAAAkI,WAAA,KAAAlI,EAAAuM,cAAAvM,EAAAkI,WAAA,qBAAAlI,EAAAkI,WAAA,UAAAlI,EAAA6J,YAAA7J,EAAA+J,gBAAA,IAAAiV,EAAA/V,YAAA,cAAAjJ,EAAAuI,oBAAAvI,EAAAqM,eAAA2S,EAAA/V,YAAA,kBAAAjJ,EAAAuM,cAAAvM,EAAAkI,WAAA,WAAAlI,EAAAuH,QAAAX,GAAA5G,EAAAuH,QAAAiD,EAAA1W,MAAA,IAAAkM,EAAAkI,WAAAsC,GAAAxK,EAAAkI,WAAA,WAAAlI,EAAAkR,iBAAAwN,EAAA3yB,IAAA,SAAAmI,GACA,OAAA8L,EAAAuL,SAAA,OAAArX,OACG0O,OAAAwc,IACHpf,EAAAqR,gBAAAqN,EAAA9b,OAAAlM,GAAA3K,IAAA,SAAAmI,GACA,OAAA8L,EAAAkR,iBAAA,CAAAlR,EAAAuL,SAAA,OAAAvL,EAAAuH,QAAA,QAAAvH,EAAAuH,QAAArT,EAAAqC,OAAAyJ,EAAAuL,SAAA,OAAAvL,EAAAuH,QAAA,SAAAvH,EAAAuH,UAAArT,EAAAopB,aACGtd,EAAAmf,iBAAAN,EAAA7e,EAAAkI,WAAA,YAAAlI,EAAAuH,QAAA,MAAAvH,EAAAkI,WAAA,kBAAA8W,EAAApW,OAAAoW,EAAA/V,YAAA,aAAAjJ,EAAAuH,SAAA,IAAAvH,EAAAsM,eAAAtM,EAAAkI,WAAA,YAGHtG,EAAA0D,KADAgZ,GAAAC,EACAve,EAAAsG,eAAA,CAAAmY,GAAAze,EAAAuI,oBAAAvI,EAAAuH,QAAA,OAAAvH,EAAAsa,oBAAAkE,EAAA,GAAAxe,EAAAsG,eAAA4Y,MAEAlf,EAAAsG,eAAA4Y,GAGA,UArKArmB,KAAAvD,KAAAsM,EAAA,GAAArM,KAGA,GAAA8F,EAAA,CAGA,GAFA3C,IAAA4M,UAEA4X,EAAAxmB,MAAA,CACA,IAAA+nB,EAAAvB,EAAAxmB,MAAA3K,IAAA,SAAAsxB,GACA,OAAAA,EAAA9mB,OAEA+oB,EAAA5mB,EAAA,GAEAuN,EAAAsZ,oBAAA9Y,MAAA6Y,KACAA,EAAAV,aAAAU,EAAAV,aAAA1S,OAAA,SAAA7M,EAAAge,GAKA,OAJA,IAAAoB,EAAA9kB,QAAA0jB,EAAAnpB,GAAAqC,OACA8I,EAAA1C,KAAA0gB,GAGAhe,GACS,IAETigB,EAAAV,aAAAhlB,SACAlB,EAAA,GAAAsH,EAAAuI,oBAAAvI,EAAAuH,QAAA,cAIA7O,EAAA,GAAAsH,EAAAuI,oBAAAvI,EAAAuH,QAAA,OAGA7O,EAAA6M,QAAAvF,EAAAuI,oBAAAvI,EAAAqM,eAAArM,EAAAoJ,iBAAApJ,EAAAkI,WAAA,MAAAlI,EAAAkI,WAAA,uBACAxP,EAAAiE,KAAAqD,EAAA+I,oBAAA,OAAA/I,EAAAgJ,mBAAAhJ,EAAAkI,WAAA,WAAAlI,EAAAqM,eAAArM,EAAAkI,WAAA,mBACAxP,EAAAiE,KAAAqD,EAAAuI,oBAAAvI,EAAAqM,eAAArM,EAAAoJ,iBAAApJ,EAAAkI,WAAA,MAAAlI,EAAAkI,WAAA,sBACAxP,EAAAiE,KAAAqD,EAAAuI,oBAAAvI,EAAAkI,WAAA,kBAEAxP,IAAA4M,UAIA,OADAT,EAAAS,KAAA5M,EACA,CACAmM,MACAW,SAAA0X,EAAAxlB,aAAA,CAAAnC,EAAAiqB,eAAA,GACAjqB,YAAAkqB,iBAIA,IAAAvrB,EAAA,EA2HA,SAAAmrB,EAAAzU,EAAA0T,EAAAI,EAAAG,GAEA,IAAAa,EAAA,GACAA,EAAA/iB,KAAAiO,EAAA9B,WAAA,WAAA9I,EAAAqM,eAAAzB,EAAAvB,WAAA,kBAEAiV,IACAoB,IAAA9c,OAAA8b,EAAA3yB,IAAA,SAAAmI,GACA,OAAA8L,EAAAuI,oBAAAvI,EAAA6I,qBAAA,IAAA7I,EAAAkI,WAAAhU,EAAAqC,MAAAqU,EAAA3B,YAAA2B,EAAA3B,YAAAjJ,EAAAkI,WAAA,qBAAAhU,SAIAwrB,EAAA/iB,KAAAiO,EAAAhC,OAAA5I,EAAAkI,WAAA,WAAA0C,EAAA3B,YAAAjJ,EAAAkI,WAAA,sBAEA2W,GACAa,EAAA/iB,KAAAiO,EAAAhC,OAAA5I,EAAAkI,WAAA,YAAA0C,EAAA3B,YAAAjJ,EAAAkI,WAAA,0BAGAwX,IAAA9c,OAAA,CAAAgI,EAAA9B,WAAA,WAAA9I,EAAAqM,eAAAzB,EAAAvB,WAAA,kBAAAuB,EAAAhC,OAAA5I,EAAAkI,WAAA,YAAA0C,EAAA3B,YAAAjJ,EAAAkI,WAAA,sBAAAlI,EAAA6J,YAAA7J,EAAAkI,WAAA,YAAAlI,EAAAsG,eAAA,CAAAsE,EAAAhC,OAAAgC,EAAA3B,YAAA2B,EAAA3B,YAAA,WAAAjJ,EAAAkI,WAAA,UAAAlI,EAAA0M,iBAAA,IAAA1M,EAAAuH,QAAA,QAAAqD,EAAA3B,YAAA,yBAAAjJ,EAAAqM,eAAAzB,EAAA3B,YAAA2B,EAAA3B,YAAA,0BAAA2B,EAAA3B,YAAA,yBAEAjJ,EAAA6J,YAAAe,EAAAvB,WAAA,YAAArJ,EAAAsM,eAAAtM,EAAAuM,cAAAvM,EAAAkI,WAAA,qBAAAlI,EAAAuH,QAAA,MAAAvH,EAAAkI,WAAA,qBAEA,QAAArL,EAAA,EAAAgD,EAAA+K,EAAAT,cAAyCtN,GAAAgD,EAAQhD,IACjD6iB,EAAA/iB,KAAAqD,EAAAuI,oBAAAvI,EAAA6I,qBAAA,IAAA7I,EAAAkI,WAAA,OAAArL,GAAA+N,EAAA3B,YAAA2B,EAAA3B,YAAAjJ,EAAAkI,WAAA,4BAAArL,MAGA,OAAAmD,EAAA6J,YAAAe,EAAAvB,WAAA,aAAArJ,EAAAsG,eAAAoZ,GAAA1f,EAAA6J,YAEAe,EAAAvB,WAAA,YAAArJ,EAAAsM,eAAAtM,EAAAuM,cAAAvM,EAAAkI,WAAA,kDC3RanU,EAAQ,IAArB,IAEAgS,EAAYhS,EAAQ,IAEpBkS,EAAAF,EAAAG,WACAlG,EAAA+F,EAAAhC,SACApD,EAAAnM,OAAAW,UAAAC,eAEAuM,EAAc5N,EAAQ,KAAQ4N,QAM9B7V,EAAAkxB,MAAA,SAAA2C,GACA1Z,EAAAtN,SAAAmL,OAAA6b,GACA,IAAAlB,EAAA,GACAmB,EAAA,GAEA,SAAAC,EAAAC,EAAAC,GACA9Z,EAAAsZ,oBAAAzb,OAAAgc,GACA,IAAAE,EAAA,GAWA,OAVAF,EAAAlB,aAAAlkB,QAAA,SAAAulB,GAGA,GAFAxB,EAAAwB,EAAA/rB,GAAAqC,MAAA0pB,EAAA/rB,GAEA+rB,EAAApd,KAAA,CACA,IAAAqd,EAAAlgB,EAAA6I,qBAAA,IAAAoX,EAAA/rB,GAAA+rB,EAAApd,MACAmd,EAAArjB,KAAAgF,EAAAue,EAAAD,EAAArlB,WACOmlB,GACPC,EAAArjB,KAAAsjB,EAAA/rB,MAGA,IAAA8rB,EAAApmB,OAAA,KACA,IAAAomB,EAAApmB,OAAAomB,EAAA,GACAhgB,EAAAmgB,mBAAAH,GAGAja,EAAAQ,SAAAoZ,EAAAra,KAAA,SAAA1D,GACA,GAAAqE,EAAAsZ,oBAAA9Y,MAAA7E,GAaA,OAVA,QAFAxG,EAAAykB,EAAAje,GAAA,IAGAtM,KAAAoR,UAIApR,KAAAoR,QAAA/E,EAAA3B,EAAAuI,oBAAAnN,GAAAwG,EAAAhH,OAKA,EACK,GAAAqL,EAAAma,aAAA3Z,MAAA7E,IACL,GAAAqE,EAAAsZ,oBAAA9Y,MAAA7E,EAAAiB,MAAA,CACA,IAAAzH,EAAAykB,EAAAje,EAAAiB,MAAA,GACAvN,KAAA8X,IAAA,QAAA1G,QAAAtL,SAEK,GAAA6K,EAAAoa,eAAA5Z,MAAA7E,IACL,GAAAqE,EAAAsZ,oBAAA9Y,MAAA7E,EAAAyJ,MAAA,CACAjQ,EAAAykB,EAAAje,EAAAyJ,MAAA,GACA/V,KAAA8X,IAAA,QAAA1G,QAAAtL,QAEK,IAAA6K,EAAAqa,oBAAA7Z,MAAA7E,GAAA,CACL6c,EAAA7c,EAAA1N,GAAAqC,MAAAqL,EAAA1N,GACAoB,KAAA8oB,OAAAxc,KAAA,IAGA2e,EAAAvgB,EAAAke,mBAAAle,EAAAkI,WAAA,IAAAtG,EAAA1N,GAAAqC,MAAAqL,EAAA+c,OAAA/c,EAAA0D,KAAA1D,EAAAyc,UAAAzc,EAAAuJ,YACAoV,EAAA3lB,IAAAgH,EAAAhH,IACA,IAAA4lB,EAAA7e,EAAA3B,EAAAuI,oBAAA5G,EAAA3B,EAAA6I,qBAAA,IAAAjH,EAAA1N,GAAAqsB,GAAA3e,EAAAhH,MAAAgH,EAAAhH,KAiBA,OAfAqL,EAAAqH,eAAA7G,MAAAnR,KAAA8oB,OAAAxc,OAGAge,EAAAra,QAAA,CACAgW,MAAAjmB,KAAA8oB,OAAAxc,KACA4e,eAIAlrB,KAAAoR,WAEApR,KAAAoR,QAAA8Z,IAIA,EACK,GAAAva,EAAAwa,mBAAAha,MAAA7E,GAEL,YAGAge,EAAAllB,QAAA,SAAAyD,GACAA,EAAAod,MAAAjW,KAAAC,QAAApH,EAAAqiB,cAEA,IAAA5B,EAAA,GACA8B,EAAA,GAeA,OAdAf,EAAAhB,OAAAjkB,QAAA,SAAAyU,GACAlJ,EAAAO,WAAAC,MAAA0I,KACAuR,EAAAvR,EAAA5Y,MAAA4Y,KAKA3a,OAAAD,KAAAkqB,GAAA/jB,QAAA,SAAAnE,GACA,IAAAoK,EAAA9H,KAAA6nB,EAAAnqB,GAAA,CACA,IAAArC,EAAAuqB,EAAAloB,GACAqoB,EAAAjiB,KAAAqD,EAAAgJ,mBAAA9U,IAAAopB,MAAAtd,EAAAqR,gBAAA,CAAArR,EAAAkI,WAAA,yBAIA,IAAA0W,EAAAhlB,OACA,KAGAoG,EAAA+I,oBAAA,MAAA6V,yBCnHA,IAAA9a,EAAa/P,EAAQ,IAErBgS,EAAYhS,EAAQ,IAEpBkS,EAAAF,EAAAG,WAGAya,GAFA5a,EAAAhC,SAEehQ,EAAQ,IAAM4sB,UAE7B,SAAAC,IACA9c,EAAA4B,GAAApQ,gBAAAsrB,GAGA,SAAAC,EAAAC,GACAF,EAAA/nB,KAAAvD,MACA2Q,EAAA4B,QAAA/D,OAAAgd,GACAtsB,OAAAuS,iBAAAzR,KAAA,CACAwrB,UAAA,CACAxkB,MAAAwkB,KAQA,SAAAlT,EAAAmT,EAAAC,EAAAxT,GACAoT,EAAA/nB,KAAAvD,MACA2Q,EAAA4B,QAAA/D,OAAAid,GACA9a,EAAA4B,QAAA/D,OAAAkd,GAEAxT,EACAvH,EAAAO,WAAA1C,OAAA0J,GAEAA,EAAA,KAGAhZ,OAAAuS,iBAAAzR,KAAA,CACAyrB,SAAA,CACAzkB,MAAAykB,GAEAC,YAAA,CACA1kB,MAAA0kB,GAEAxT,MAAA,CACAlR,MAAAkR,KAQA,SAAAkB,EAAAqS,GACAH,EAAA/nB,KAAAvD,MACA2Q,EAAA4B,QAAA/D,OAAAid,GACAvsB,OAAAuS,iBAAAzR,KAAA,CACAyrB,SAAA,CACAzkB,MAAAykB,KAQA,SAAAtR,EAAAR,EAAAI,GACAuR,EAAA/nB,KAAAvD,MAEA2Z,EACAnL,EAAA4B,GAAAuJ,aAAAC,GAEAD,EAAA,KAGAI,EACAvL,EAAA4B,GAAA2J,aAAAC,GAEAD,EAAA,KAGA7a,OAAAuS,iBAAAzR,KAAA,CACA2Z,WAAA,CACA3S,MAAA2S,GAEAI,aAAA,CACA/S,MAAA+S,KAQA,SAAAH,EAAAgB,EAAA+Q,GACAL,EAAA/nB,KAAAvD,MACA2Q,EAAA4B,QAAA/D,OAAAoM,GACAjK,EAAAO,WAAA1C,OAAAmd,GACAzsB,OAAAuS,iBAAAzR,KAAA,CACA4a,SAAA,CACA5T,MAAA4T,GAEA+Q,QAAA,CACA3kB,MAAA2kB,KAQA,SAAA3R,EAAAY,EAAAX,GACAqR,EAAA/nB,KAAAvD,MACA2Q,EAAA4B,QAAA/D,OAAAoM,GACAjK,EAAAO,WAAA1C,OAAAyL,GACA/a,OAAAuS,iBAAAzR,KAAA,CACA4a,SAAA,CACA5T,MAAA4T,GAEAX,eAAA,CACAjT,MAAAiT,KAQA,SAAAnI,EAAA8Z,GACApd,EAAA4B,GAAApQ,gBAAA8R,GAEA,IAAAT,EAAgB5S,EAAQ,KAAQ4S,QAEhC7C,EAAA4B,GAAAwb,aAAAva,GACAnS,OAAAuS,iBAAAzR,KAAA,CACA4rB,QAAA,CACA5kB,MAAA4kB,GAEAC,WAAA,CACA7kB,MAAA,KAAAukB,EAAAK,EAAA1mB,cApHAmmB,EAAAE,EAAAD,GACA90B,EAAA+0B,gBA0BAF,EAAA/S,EAAAgT,GACA90B,EAAA8hB,YAYA+S,EAAAjS,EAAAkS,GACA90B,EAAA4iB,cA2BAiS,EAAAlR,EAAAmR,GACA90B,EAAA2jB,WAgBAkR,EAAAzR,EAAA0R,GACA90B,EAAAojB,aAgBAyR,EAAArR,EAAAsR,GACA90B,EAAAwjB,eAkBA,IAAA8R,EAAAha,EAAAjS,UAkEA,SAAAksB,EAAAljB,EAAAoN,EAAAiC,GACA,IAAA5S,EAAAuD,EAAAoN,GAEA,GAAA3Q,EAAA,CACA,IAAA4S,EAKA,OAAA5S,EAJA,GAAAuD,EAAAqP,OAAArP,EAAAqP,MAAAjX,OAAAiX,EAAAjX,KACA,OAAAqE,EAOA,YA9EA9O,EAAAsb,cAEAga,EAAAzT,UAAA,SAAAxP,EAAAmjB,GACAxd,EAAA4B,GAAAvH,aAAAyiB,GACAtrB,KAAA6rB,WAAAxkB,KAAAwB,GAEA,IACAmjB,EAAAzoB,KAAAvD,KAAA4rB,SACG,QACH,IAAAK,EAAAjsB,KAAA6rB,WAAAtjB,MACAiG,EAAA8K,YAAA2S,EAAApjB,KAIAijB,EAAAI,aAAA,SAAAC,EAAArT,GAKA,IAJA,IAAAjQ,EAAAvD,EAwCAyU,EAvCA7P,EAAA,GACAkiB,EAAA,KAEA7kB,EAAAvH,KAAA6rB,WAAAvnB,OAAA,EAA0CiD,GAAA,IAAQA,EAGlD,IAFAsB,EAAA7I,KAAA6rB,WAAAtkB,cAEAqS,GAAA/Q,aAAAmR,EAIAoS,EAAAvjB,OACK,GAAAA,aAAAsR,EACL,GAAAiS,EAIAA,aAAAxS,GAAA/Q,EAAAkR,cACA7P,EAAA7C,KAAAwB,EAAAkR,cAGAqS,EAAA,SACO,IAAA9mB,EAAA6mB,EAAA5oB,KAAAvD,KAAA6I,GACP,MACOA,EAAAkR,cACP7P,EAAA7C,KAAAwB,EAAAkR,mBAEK,GAAAzU,EAAA6mB,EAAA5oB,KAAAvD,KAAA6I,GACL,MAIA,GAAAvD,OACG,KAAAwT,EAGH,YAFAxT,EAAAwT,EAQA,IAHAnI,EAAA4B,QAAA/D,OAAAlJ,GAGAyU,EAAA7P,EAAA3B,OACAvI,KAAA4rB,QAAAjZ,WAAAoH,EAAAE,eAAA3U,GACAA,EAAAyU,EAAAa,SAGA,OAAAtV,GAmBAwmB,EAAAnT,UAAA,SAAAT,GACA,IAAA5S,EAAAtF,KAAAksB,aAAA,SAAArjB,GACA,OAAAkjB,EAAAljB,EAAA,WAAAqP,KAGA,UAAA5S,EACA,UAAAvG,MAAA,2BAGAiB,KAAA4rB,QAAA5X,wBACAhU,KAAA4rB,QAAAzX,KAAA7O,IAGAwmB,EAAAlT,aAAA,SAAAV,GACA,IAAA5S,EAAAtF,KAAAksB,aAAA,SAAArjB,GACA,OAAAkjB,EAAAljB,EAAA,cAAAqP,KAGA,UAAA5S,EACA,UAAAvG,MAAA,8BAGAiB,KAAA4rB,QAAA5X,wBACAhU,KAAA4rB,QAAAzX,KAAA7O,yBCzPA,IAAAkJ,EAAa/P,EAAQ,IAErB4tB,EAAQ5tB,EAAQ,KAAS6tB,eAEzB7b,EAAYhS,EAAQ,IAEpB8tB,EAAA9b,EAAAC,aAAApR,MACAqR,EAAAF,EAAAG,WACAvF,EAAAnM,OAAAW,UAAAC,eAEA,SAAA0sB,EAAAC,EAAAC,GACA,SAAA3R,EAAAzO,GACAqE,EAAA8G,KAAAjJ,OAAAlC,GAEA,IAAAN,GAAA,EAEA,SAAAmF,EAAAvJ,GASA,OARAoE,IACOugB,EAAApb,MAAAvJ,GACPA,EAAA+kB,KAAAxb,GACOR,EAAA8G,KAAAtG,MAAAvJ,KACP4G,EAAA8K,YAAAtN,GAAA,GACAA,EAAAmgB,EAAAvkB,KAGAoE,EAMA,OAHAyE,EAAAmc,UAAAtgB,EAAA,SAAArL,EAAA2G,GACAuJ,EAAAvJ,KAEAoE,EAGA,SAAAmgB,EAAA7f,GACAqE,EAAA8G,KAAAjJ,OAAAlC,GACA,IAAAwE,EAAAub,EAAA/f,GACA,OAAAjB,EAAA9H,KAAAuN,EAAA2b,GAAA3b,EAAA2b,GAGAphB,EAAA9H,KAAAspB,EAAAvgB,EAAAuL,MAAA/G,EAAA2b,IAAA,EACAphB,EAAA9H,KAAAmpB,EAAApgB,EAAAuL,MAAA/G,EAAA2b,IAAA,EACA3b,EAAA2b,GAAA1R,EAAAzO,GAIA,OADA6f,EAAApR,eACAoR,EAGA,IAAAU,EAAA,CACA1B,oBAAA,GAIA2B,EAAA,CACAlI,gBAAA,EAEAmG,gBAAA,EAEAgC,iBAAA,EAEAC,kBAAA,EAEApX,sBAAA,EAEAqX,kBAAA,EAEAC,eAAA,GAIAC,EAAA,CACAC,iBAAA,EACA1X,gBAAA,EACAa,mBAAA,EACAd,iBAAA,EACAe,gBAAA,EACAoO,gBAAA,EACAyI,mBAAA,GAGA,QAAAxV,KAAAsV,EACA9hB,EAAA9H,KAAA4pB,EAAAtV,KACAiV,EAAAjV,GAAAsV,EAAAtV,IAIArhB,EAAA82B,eAAAd,EAAA,iBAAAM,GACAt2B,EAAAskB,aAAA0R,EAAA,eAAAW,wBCjGA,IAAA1c,EAAYhS,EAAQ,IAEpBkQ,EAAalQ,EAAQ,KAErBiM,EAAA+F,EAAAhC,SAEA,SAAAlN,IACAvB,KAAAutB,OAAA,EACAvtB,KAAAwtB,UAAA,EACAxtB,KAAA+H,SAAA,GACA/H,KAAAmE,QAAA,GACAnE,KAAAytB,MAAA,GAGAlsB,EAAA1B,UAAA4pB,OAAA,WACA,IAAA7qB,EAAAoB,KAAAutB,SAKA,OAJAvtB,KAAA+H,SAAAnJ,GAAA,CACAsF,KAAA,GACAgB,SAAA,MAEAtG,GAGA2C,EAAA1B,UAAA8W,WAAA,SAAA3V,EAAA3C,GACA2B,KAAAmE,QAAAnD,GAAA3C,GAGAkD,EAAA1B,UAAAsT,kBAAA,SAAAnS,EAAAsE,EAAAkN,GAEA,OADAxS,KAAA+H,SAAA/G,GAAAkD,KAAAsO,GAAAlN,EACAkN,GAGAjR,EAAA1B,UAAA6tB,kBAAA,SAAA1sB,EAAAwR,GACA,OAAAxS,KAAA+H,SAAA/G,GAAAkD,KAAAsO,IAGAjR,EAAA1B,UAAA6W,iBAAA,SAAA1V,EAAAsE,GACAtF,KAAA+H,SAAA/G,GAAAkE,SAAAI,GAGA/D,EAAA1B,UAAAqqB,YAAA,WACA,IAAA3a,EAAAZ,EAAAW,MAAA,IAAA8C,KAAAC,UAAA,CACAtK,SAAA/H,KAAA+H,SACA5D,QAAAnE,KAAAmE,UACG,KACH,OAAAuG,EAAA+I,oBAAA,OAAA/I,EAAAgJ,mBAAAhJ,EAAAkI,WAAA,eAAArD,EAAAC,QAAAQ,KAAA,GAAA6F,eAGAtU,EAAA1B,UAAAsqB,aAAA,WACA,OACApiB,SAAA/H,KAAA+H,SACA5D,QAAAnE,KAAAmE,UAIA3N,EAAA+K","file":"static/js/main.e0af2245.chunk.js","sourcesContent":["module.exports = \"\\n# Delorean\\n\\n---\\n\\nDelorean is a proposal of a debugger for JavaScript.\\n\\n## Features\\n\\n---\\n\\n  - You can go back to any point of your program\\n\\n  - We capture the heap and stack of your program\\n\\n  - Continuations use case\\n\\n## Usage\\n\\n---\\n\\nWe expose a simple object to work with our debugger called **delorean**.\\n\\n```js\\n\\n/* Set the variables to debug. */\\n\\ndelorean.watch(observables: array): void;\\n\\n/* Create a timepoint with the name received by parameter. */\\n\\ndelorean.insertTimePoint(name: string): void;\\n\\n```\\n\\n## Tech\\n\\n---\\n\\nDelorean uses a number of open source projects to work properly:\\n\\n* [Babel](https://babeljs.io) - awesome and configurable transpiler!\\n\\n* [Node.js](https://nodejs.org/) - evented I/O for the backend\\n\\n* [mocha](https://mochajs.org/) - simple, flexible JavaScript test framework\\n\\n* [unwinder](https://github.com/jlongster/unwinder) - an implementation of continuations in JavaScript\\n\\nAnd of course Delorean itself is open source with a [public repository](https://github.com/fruizrob/delorean) on GitHub.\\n\"\n\n","var map = {\n\t\"./apl/apl.js\": [\n\t\t1293,\n\t\t29\n\t],\n\t\"./asciiarmor/asciiarmor.js\": [\n\t\t1294,\n\t\t30\n\t],\n\t\"./asn.1/asn.1.js\": [\n\t\t1295,\n\t\t31\n\t],\n\t\"./asterisk/asterisk.js\": [\n\t\t1296,\n\t\t32\n\t],\n\t\"./brainfuck/brainfuck.js\": [\n\t\t1297,\n\t\t33\n\t],\n\t\"./clike/clike.js\": [\n\t\t1282,\n\t\t2\n\t],\n\t\"./clojure/clojure.js\": [\n\t\t1298,\n\t\t34\n\t],\n\t\"./cmake/cmake.js\": [\n\t\t1299,\n\t\t35\n\t],\n\t\"./cobol/cobol.js\": [\n\t\t1300,\n\t\t36\n\t],\n\t\"./coffeescript/coffeescript.js\": [\n\t\t1283,\n\t\t37\n\t],\n\t\"./commonlisp/commonlisp.js\": [\n\t\t1301,\n\t\t38\n\t],\n\t\"./crystal/crystal.js\": [\n\t\t1302,\n\t\t39\n\t],\n\t\"./css/css.js\": [\n\t\t1279,\n\t\t1\n\t],\n\t\"./cypher/cypher.js\": [\n\t\t1303,\n\t\t40\n\t],\n\t\"./d/d.js\": [\n\t\t1304,\n\t\t41\n\t],\n\t\"./dart/dart.js\": [\n\t\t1305,\n\t\t2,\n\t\t42\n\t],\n\t\"./diff/diff.js\": [\n\t\t1306,\n\t\t43\n\t],\n\t\"./django/django.js\": [\n\t\t1307,\n\t\t0,\n\t\t1,\n\t\t11\n\t],\n\t\"./dockerfile/dockerfile.js\": [\n\t\t1308,\n\t\t21\n\t],\n\t\"./dtd/dtd.js\": [\n\t\t1309,\n\t\t44\n\t],\n\t\"./dylan/dylan.js\": [\n\t\t1310,\n\t\t45\n\t],\n\t\"./ebnf/ebnf.js\": [\n\t\t1311,\n\t\t46\n\t],\n\t\"./ecl/ecl.js\": [\n\t\t1312,\n\t\t47\n\t],\n\t\"./eiffel/eiffel.js\": [\n\t\t1313,\n\t\t48\n\t],\n\t\"./elm/elm.js\": [\n\t\t1314,\n\t\t49\n\t],\n\t\"./erlang/erlang.js\": [\n\t\t1315,\n\t\t50\n\t],\n\t\"./factor/factor.js\": [\n\t\t1316,\n\t\t22\n\t],\n\t\"./fcl/fcl.js\": [\n\t\t1317,\n\t\t51\n\t],\n\t\"./forth/forth.js\": [\n\t\t1318,\n\t\t52\n\t],\n\t\"./fortran/fortran.js\": [\n\t\t1319,\n\t\t53\n\t],\n\t\"./gas/gas.js\": [\n\t\t1320,\n\t\t54\n\t],\n\t\"./gfm/gfm.js\": [\n\t\t1321,\n\t\t4,\n\t\t20\n\t],\n\t\"./gherkin/gherkin.js\": [\n\t\t1322,\n\t\t55\n\t],\n\t\"./go/go.js\": [\n\t\t1323,\n\t\t56\n\t],\n\t\"./groovy/groovy.js\": [\n\t\t1324,\n\t\t57\n\t],\n\t\"./haml/haml.js\": [\n\t\t1325,\n\t\t0,\n\t\t1,\n\t\t14\n\t],\n\t\"./handlebars/handlebars.js\": [\n\t\t1284,\n\t\t16\n\t],\n\t\"./haskell-literate/haskell-literate.js\": [\n\t\t1326,\n\t\t25\n\t],\n\t\"./haskell/haskell.js\": [\n\t\t1285,\n\t\t58\n\t],\n\t\"./haxe/haxe.js\": [\n\t\t1327,\n\t\t59\n\t],\n\t\"./htmlembedded/htmlembedded.js\": [\n\t\t1328,\n\t\t0,\n\t\t1,\n\t\t10\n\t],\n\t\"./htmlmixed/htmlmixed.js\": [\n\t\t1278,\n\t\t0,\n\t\t1,\n\t\t26\n\t],\n\t\"./http/http.js\": [\n\t\t1329,\n\t\t60\n\t],\n\t\"./idl/idl.js\": [\n\t\t1330,\n\t\t61\n\t],\n\t\"./javascript/javascript.js\": [\n\t\t1280,\n\t\t0\n\t],\n\t\"./jinja2/jinja2.js\": [\n\t\t1331,\n\t\t62\n\t],\n\t\"./jsx/jsx.js\": [\n\t\t1332,\n\t\t0,\n\t\t27\n\t],\n\t\"./julia/julia.js\": [\n\t\t1333,\n\t\t63\n\t],\n\t\"./livescript/livescript.js\": [\n\t\t1334,\n\t\t64\n\t],\n\t\"./lua/lua.js\": [\n\t\t1335,\n\t\t65\n\t],\n\t\"./markdown/markdown.js\": [\n\t\t1290,\n\t\t4\n\t],\n\t\"./mathematica/mathematica.js\": [\n\t\t1336,\n\t\t66\n\t],\n\t\"./mbox/mbox.js\": [\n\t\t1337,\n\t\t67\n\t],\n\t\"./meta.js\": [\n\t\t315\n\t],\n\t\"./mirc/mirc.js\": [\n\t\t1338,\n\t\t68\n\t],\n\t\"./mllike/mllike.js\": [\n\t\t1339,\n\t\t69\n\t],\n\t\"./modelica/modelica.js\": [\n\t\t1340,\n\t\t70\n\t],\n\t\"./mscgen/mscgen.js\": [\n\t\t1341,\n\t\t71\n\t],\n\t\"./mumps/mumps.js\": [\n\t\t1342,\n\t\t72\n\t],\n\t\"./nginx/nginx.js\": [\n\t\t1343,\n\t\t73\n\t],\n\t\"./nsis/nsis.js\": [\n\t\t1344,\n\t\t23\n\t],\n\t\"./ntriples/ntriples.js\": [\n\t\t1345,\n\t\t74\n\t],\n\t\"./octave/octave.js\": [\n\t\t1346,\n\t\t75\n\t],\n\t\"./oz/oz.js\": [\n\t\t1347,\n\t\t76\n\t],\n\t\"./pascal/pascal.js\": [\n\t\t1348,\n\t\t77\n\t],\n\t\"./pegjs/pegjs.js\": [\n\t\t1349,\n\t\t0,\n\t\t78\n\t],\n\t\"./perl/perl.js\": [\n\t\t1350,\n\t\t79\n\t],\n\t\"./php/php.js\": [\n\t\t1351,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t17\n\t],\n\t\"./pig/pig.js\": [\n\t\t1352,\n\t\t80\n\t],\n\t\"./powershell/powershell.js\": [\n\t\t1353,\n\t\t81\n\t],\n\t\"./properties/properties.js\": [\n\t\t1354,\n\t\t82\n\t],\n\t\"./protobuf/protobuf.js\": [\n\t\t1355,\n\t\t83\n\t],\n\t\"./pug/pug.js\": [\n\t\t1291,\n\t\t0,\n\t\t1,\n\t\t3\n\t],\n\t\"./puppet/puppet.js\": [\n\t\t1356,\n\t\t84\n\t],\n\t\"./python/python.js\": [\n\t\t1286,\n\t\t85\n\t],\n\t\"./q/q.js\": [\n\t\t1357,\n\t\t86\n\t],\n\t\"./r/r.js\": [\n\t\t1358,\n\t\t87\n\t],\n\t\"./rpm/rpm.js\": [\n\t\t1359,\n\t\t88\n\t],\n\t\"./rst/rst.js\": [\n\t\t1360,\n\t\t13\n\t],\n\t\"./ruby/ruby.js\": [\n\t\t1281,\n\t\t89\n\t],\n\t\"./rust/rust.js\": [\n\t\t1361,\n\t\t24\n\t],\n\t\"./sas/sas.js\": [\n\t\t1362,\n\t\t90\n\t],\n\t\"./sass/sass.js\": [\n\t\t1288,\n\t\t1,\n\t\t91\n\t],\n\t\"./scheme/scheme.js\": [\n\t\t1363,\n\t\t92\n\t],\n\t\"./shell/shell.js\": [\n\t\t1364,\n\t\t93\n\t],\n\t\"./sieve/sieve.js\": [\n\t\t1365,\n\t\t94\n\t],\n\t\"./slim/slim.js\": [\n\t\t1366,\n\t\t0,\n\t\t1,\n\t\t15\n\t],\n\t\"./smalltalk/smalltalk.js\": [\n\t\t1367,\n\t\t95\n\t],\n\t\"./smarty/smarty.js\": [\n\t\t1368,\n\t\t96\n\t],\n\t\"./solr/solr.js\": [\n\t\t1369,\n\t\t97\n\t],\n\t\"./soy/soy.js\": [\n\t\t1370,\n\t\t0,\n\t\t1,\n\t\t18\n\t],\n\t\"./sparql/sparql.js\": [\n\t\t1371,\n\t\t98\n\t],\n\t\"./spreadsheet/spreadsheet.js\": [\n\t\t1372,\n\t\t99\n\t],\n\t\"./sql/sql.js\": [\n\t\t1373,\n\t\t100\n\t],\n\t\"./stex/stex.js\": [\n\t\t1287,\n\t\t101\n\t],\n\t\"./stylus/stylus.js\": [\n\t\t1292,\n\t\t5\n\t],\n\t\"./swift/swift.js\": [\n\t\t1374,\n\t\t102\n\t],\n\t\"./tcl/tcl.js\": [\n\t\t1375,\n\t\t103\n\t],\n\t\"./textile/textile.js\": [\n\t\t1376,\n\t\t104\n\t],\n\t\"./tiddlywiki/tiddlywiki.js\": [\n\t\t1377,\n\t\t105\n\t],\n\t\"./tiki/tiki.js\": [\n\t\t1378,\n\t\t106\n\t],\n\t\"./toml/toml.js\": [\n\t\t1379,\n\t\t107\n\t],\n\t\"./tornado/tornado.js\": [\n\t\t1380,\n\t\t0,\n\t\t1,\n\t\t12\n\t],\n\t\"./troff/troff.js\": [\n\t\t1381,\n\t\t108\n\t],\n\t\"./ttcn-cfg/ttcn-cfg.js\": [\n\t\t1383,\n\t\t109\n\t],\n\t\"./ttcn/ttcn.js\": [\n\t\t1382,\n\t\t110\n\t],\n\t\"./turtle/turtle.js\": [\n\t\t1384,\n\t\t111\n\t],\n\t\"./twig/twig.js\": [\n\t\t1385,\n\t\t19\n\t],\n\t\"./vb/vb.js\": [\n\t\t1386,\n\t\t112\n\t],\n\t\"./vbscript/vbscript.js\": [\n\t\t1387,\n\t\t113\n\t],\n\t\"./velocity/velocity.js\": [\n\t\t1388,\n\t\t114\n\t],\n\t\"./verilog/verilog.js\": [\n\t\t1389,\n\t\t115\n\t],\n\t\"./vhdl/vhdl.js\": [\n\t\t1390,\n\t\t116\n\t],\n\t\"./vue/vue.js\": [\n\t\t1391,\n\t\t0,\n\t\t1,\n\t\t5,\n\t\t3,\n\t\t9\n\t],\n\t\"./webidl/webidl.js\": [\n\t\t1392,\n\t\t117\n\t],\n\t\"./xml/xml.js\": [\n\t\t1277,\n\t\t118\n\t],\n\t\"./xquery/xquery.js\": [\n\t\t1393,\n\t\t119\n\t],\n\t\"./yacas/yacas.js\": [\n\t\t1394,\n\t\t120\n\t],\n\t\"./yaml-frontmatter/yaml-frontmatter.js\": [\n\t\t1395,\n\t\t28\n\t],\n\t\"./yaml/yaml.js\": [\n\t\t1289,\n\t\t121\n\t],\n\t\"./z80/z80.js\": [\n\t\t1396,\n\t\t122\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 1267;\nmodule.exports = webpackAsyncContext;","var _require = require('./heap'),\n    heapSnapshot = _require.heapSnapshot;\n\nmodule.exports = {\n  insertTimePoint: function insertTimePoint(id) {\n    heapSnapshot(id);\n  },\n  watch: function watch(array) {\n    console.log('Debugging [' + array + ']');\n  }\n};","var fs = require('fs');\n\nvar compiler = require('../main');\n\nvar hasOwn = Object.prototype.hasOwnProperty; // modules\n// function require(relativeTo, id) {\n//   var dir = path.dirname(relativeTo);\n//   var absPath;\n//   if(isRelative(id)) {\n//     absPath = path.join(dir, id);\n//   }\n//   else {\n//     absPath = node.resolve(id);\n//   }\n//   VM.loadScript(absPath);\n// }\n// vm\n\nvar IDLE = 'idle';\nvar SUSPENDED = 'suspended';\nvar EXECUTING = 'executing';\n\nfunction Machine() {\n  this.debugInfo = null;\n  this.stack = null;\n  this.error = undefined;\n  this.doRestore = false;\n  this.evalResult = null;\n  this.state = IDLE;\n  this.running = false;\n  this._events = {};\n  this.stepping = false;\n  this.prevStates = [];\n  this.tryStack = [];\n  this.machineBreaks = [];\n  this.machineWatches = [];\n}\n\nMachine.prototype.loadScript = function (path) {\n  var src = fs.readFileSync(process.argv[2], \"utf-8\");\n  var output = compiler(src, {\n    includeDebug: true\n  });\n  var debugInfo = new DebugInfo(output.debugInfo);\n  this.setDebugInfo(debugInfo);\n  this.setCode(path, output.code);\n  this.run();\n};\n\nMachine.prototype.loadModule = function (path) {\n  var src = fs.readFileSync(process.argv[2], \"utf-8\");\n  var output = compiler(src, {\n    includeDebug: true\n  }); // run...\n};\n\nMachine.prototype.loadString = function (str) {\n  var output = compiler(str, {\n    includeDebug: true\n  });\n  var debugInfo = new DebugInfo(output.debugInfo);\n  this.setDebugInfo(debugInfo);\n  this.setCode('/eval', output.code);\n};\n\nMachine.prototype.execute = function (fn, thisPtr, args) {\n  // console.log('Execute(fn, thisPtr, args)', fn, thisPtr, args)\n  var prevState = this.state;\n  this.state = EXECUTING;\n  this.running = true;\n  var prevStepping = this.stepping;\n  var prevFrame = this.rootFrame;\n  this.stepping = false;\n  var ret;\n\n  try {\n    if (thisPtr || args) {\n      ret = fn.apply(thisPtr, args || []);\n    } else {\n      ret = fn();\n    }\n  } catch (e) {\n    this.stack = e.fnstack;\n    this.error = e.error;\n  }\n\n  this.stepping = prevStepping; // It's a weird case if we run code while we are suspended, but if\n  // so we try to run it and kind of ignore whatever happened (no\n  // breakpoints, etc), but we do fire an error event if it happened\n\n  if (prevState === 'suspended') {\n    if (this.error) {\n      this.fire('error', this.error);\n    }\n\n    this.state = prevState;\n  } else {\n    this.checkStatus();\n  }\n\n  return ret;\n};\n\nMachine.prototype.run = function () {\n  var path = this.path;\n  var code = this.code;\n  var module = {\n    exports: {}\n  };\n  var fn = new Function('VM', //'require',\n  'module', 'exports', '$Frame', '$ContinuationExc', 'console', code + '\\nreturn $__global;');\n  var rootFn = fn(this, //require.bind(null, path),\n  module, module.exports, Frame, ContinuationExc, {\n    log: function () {\n      var args = Array.prototype.slice.call(arguments);\n      this.output += args.join(' ') + '\\n';\n    }.bind(this)\n  });\n  this.output = '';\n  this.execute(rootFn);\n  this.globalFn = rootFn;\n};\n\nMachine.prototype.abort = function () {\n  this.output = '';\n  this.globalFn = null;\n  this.state = IDLE;\n  this.running = false;\n  this.path = '';\n  this.code = '';\n  this.invokingContinuation = null;\n  this.capturingContinuation = false;\n  this.error = null;\n};\n\nMachine.prototype.getNextStepId = function (machineId, stepId, offset) {\n  var locs = this.debugInfo.data.stepIds[machineId];\n  var idx = locs.indexOf(stepId);\n\n  if (idx + offset < locs.length) {\n    return this.debugInfo.data.stepIds[machineId][idx + offset];\n  }\n\n  return null;\n};\n\nMachine.prototype.continue = function () {\n  if (this.state === SUSPENDED) {\n    this.fire('resumed');\n    var root = this.getRootFrame();\n    var top = this.getTopFrame();\n    this.running = true;\n    this.state = EXECUTING;\n\n    if (this.machineBreaks[top.machineId][top.next]) {\n      // We need to get past this instruction that has a breakpoint, so\n      // turn off breakpoints and step past it, then turn them back on\n      // again and execute normally\n      this.stepping = true;\n      this.hasBreakpoints = false;\n      this.restore(true); // TODO: don't force this back on always\n\n      this.hasBreakpoints = true;\n      this.stepping = false;\n    }\n\n    this.running = true;\n    this.state = EXECUTING;\n    this.restore();\n  }\n};\n\nMachine.prototype.step = function () {\n  if (!this.stack) return;\n  this.fire('resumed');\n\n  var _step = function () {\n    this.running = true;\n    this.stepping = true;\n    this.hasBreakpoints = false;\n    this.restore(true);\n    this.hasBreakpoints = true;\n    this.stepping = false;\n  }.bind(this);\n\n  _step();\n\n  var top = this.getTopFrame();\n\n  while (this.state === SUSPENDED && !this.getLocation()) {\n    // Keep stepping until we hit something we know where we are\n    // located\n    _step();\n  }\n\n  if (this.state === SUSPENDED) {\n    this.running = false;\n    this.fire('paused');\n  }\n};\n\nMachine.prototype.stepOver = function () {\n  if (!this.rootFrame) return;\n  var top = this.getTopFrame();\n  var curloc = this.getLocation();\n  var finalLoc = curloc;\n  var biggest = 0;\n  var locs = this.debugInfo.data[top.machineId].locs; // find the \"biggest\" expression in the function that encloses\n  // this one\n\n  Object.keys(locs).forEach(function (k) {\n    var loc = locs[k];\n\n    if (loc.start.line <= curloc.start.line && loc.end.line >= curloc.end.line && loc.start.column <= curloc.start.column && loc.end.column >= curloc.end.column) {\n      var ldiff = curloc.start.line - loc.start.line + (loc.end.line - curloc.end.line);\n      var cdiff = curloc.start.column - loc.start.column + (loc.end.column - curloc.end.column);\n\n      if (ldiff + cdiff > biggest) {\n        finalLoc = loc;\n        biggest = ldiff + cdiff;\n      }\n    }\n  });\n\n  if (finalLoc !== curloc) {\n    while (this.getLocation() !== finalLoc) {\n      this.step();\n    }\n\n    this.step();\n  } else {\n    this.step();\n  }\n};\n\nMachine.prototype.evaluate = function (expr) {\n  if (expr === '$_') {\n    return this.evalResult;\n  } // An expression can be one of these forms:\n  //\n  // 1. foo = function() { <stmt/expr> ... }\n  // 2. function foo() { <stmt/expr> ... }\n  // 3. x = <expr>\n  // 4. var x = <expr>\n  // 5. <stmt/expr>\n  //\n  // 1-4 can change any data in the current frame, and introduce new\n  // variables that are only available for the current session (will\n  // disappear after any stepping/resume/etc). Functions in 1 and 2\n  // will be compiled, so they can be paused and debugged.\n  //\n  // 5 can run any arbitrary expression\n\n\n  if (this.stack) {\n    var top = this.getTopFrame();\n    expr = compiler(expr, {\n      asExpr: true,\n      scope: top.scope\n    }).code;\n    this.running = true;\n    this.doRestore = true;\n    this.stepping = false;\n    var res = top.evaluate(this, expr);\n    this.stepping = true;\n    this.doRestore = false;\n    this.running = false;\n  } else if (this.globalFn) {\n    expr = compiler(expr, {\n      asExpr: true\n    }).code;\n    this.evalArg = expr;\n    this.stepping = true;\n    this.withTopFrame({\n      next: -1,\n      state: {}\n    }, function () {\n      this.doRestore = true;\n\n      try {\n        (0, this).globalFn();\n      } catch (e) {\n        if (e.error) {\n          throw e.error;\n        }\n      }\n\n      this.doRestore = false;\n    }.bind(this));\n  } else {\n    throw new Error('invalid evaluation state');\n  }\n\n  return this.evalResult;\n};\n\nMachine.prototype.restore = function (suppressEvents) {\n  try {\n    this.doRestore = true;\n    this.getRootFrame().restore();\n    this.error = undefined;\n  } catch (e) {\n    this.stack = e.fnstack;\n    this.error = e.error;\n  }\n\n  this.checkStatus(suppressEvents);\n};\n\nMachine.prototype.checkStatus = function (suppressEvents) {\n  if (this.stack) {\n    if (this.capturingContinuation) {\n      this.capturingContinuation = false;\n      this.onCapture();\n      return;\n    }\n\n    if (this.invokingContinuation) {\n      var fnstack = this.invokingContinuation;\n      this.invokingContinuation = null;\n      this.onInvoke(fnstack);\n      return;\n    }\n\n    if (this.error) {\n      if (this.dispatchException()) {\n        return;\n      }\n\n      if (!suppressEvents) {\n        //this.fire('error', this.error);\n        throw this.error;\n      }\n    } else if (!suppressEvents) {\n      this.fire('paused');\n    }\n\n    this.state = SUSPENDED;\n  } else {\n    if (!suppressEvents) {\n      this.fire('finish');\n    }\n\n    this.state = IDLE;\n  }\n\n  this.running = false;\n};\n\nMachine.prototype.toggleBreakpoint = function (line) {\n  var debug = this.debugInfo;\n  var pos = debug.lineToMachinePos(line);\n\n  if (pos) {\n    this.hasBreakpoints = true;\n\n    if (this.machineBreaks[pos.machineId][pos.locId]) {\n      this.machineBreaks[pos.machineId][pos.locId] = false;\n    } else {\n      this.machineBreaks[pos.machineId][pos.locId] = true;\n    }\n  }\n};\n\nMachine.prototype.callCC = function () {\n  this.capturingContinuation = true;\n  throw new ContinuationExc();\n};\n\nMachine.prototype.onCapture = function () {\n  var fnstack = this.stack.map(function (x) {\n    return x;\n  });\n  var top = fnstack[0];\n  var tmpid = top.tmpid;\n  var next = this.getNextStepId(top.machineId, top.next, 2);\n  top.next = this.getNextStepId(top.machineId, top.next, 1);\n\n  top.state['$__t' + (top.tmpid - 1)] = function (arg) {\n    top.next = next;\n    top.state['$__t' + tmpid] = arg;\n\n    if (this.running) {\n      this.invokeContinuation(fnstack);\n    } else {\n      this.onInvoke(fnstack);\n    }\n  }.bind(this);\n\n  this.restore();\n};\n\nMachine.prototype.invokeContinuation = function (fnstack) {\n  this.invokingContinuation = fnstack;\n  throw new ContinuationExc();\n};\n\nMachine.prototype.onInvoke = function (fnstack) {\n  this.stack = fnstack.map(function (x) {\n    return x;\n  });\n  this.fire('cont-invoked');\n\n  if (!this.stepping) {\n    this.running = true;\n    this.state = EXECUTING;\n    this.restore();\n  }\n};\n\nMachine.prototype.handleWatch = function (machineId, locId, res) {\n  var id = this.machineWatches[machineId][locId].id;\n  this.fire('watched', {\n    id: id,\n    value: res\n  });\n};\n\nMachine.prototype.on = function (event, handler) {\n  var arr = this._events[event] || [];\n  arr.push(handler);\n  this._events[event] = arr;\n};\n\nMachine.prototype.off = function (event, handler) {\n  var arr = this._events[event] || [];\n\n  if (handler) {\n    var i = arr.indexOf(handler);\n\n    if (i !== -1) {\n      arr.splice(i, 1);\n    }\n  } else {\n    this._events[event] = [];\n  }\n};\n\nMachine.prototype.fire = function (event, data) {\n  setTimeout(function () {\n    var arr = this._events[event] || [];\n    arr.forEach(function (handler) {\n      handler(data);\n    });\n  }.bind(this), 0);\n};\n\nMachine.prototype.getTopFrame = function () {\n  return this.stack && this.stack[0];\n};\n\nMachine.prototype.getRootFrame = function () {\n  return this.stack && this.stack[this.stack.length - 1];\n};\n\nMachine.prototype.getFrameOffset = function (i) {\n  // TODO: this is really annoying, but it works for now. have to do\n  // two passes\n  var top = this.rootFrame;\n  var count = 0;\n\n  while (top.child) {\n    top = top.child;\n    count++;\n  }\n\n  if (i > count) {\n    return null;\n  }\n\n  var depth = count - i;\n  top = this.rootFrame;\n  count = 0;\n\n  while (top.child && count < depth) {\n    top = top.child;\n    count++;\n  }\n\n  return top;\n};\n\nMachine.prototype.setDebugInfo = function (info) {\n  this.debugInfo = info || new DebugInfo([]);\n  var machines = info.data.machines;\n  this.machineBreaks = new Array(machines.length);\n  this.machineWatches = new Array(machines.length);\n\n  for (var i = 0; i < machines.length; i++) {\n    this.machineBreaks[i] = [];\n  }\n\n  for (var i = 0; i < machines.length; i++) {\n    this.machineWatches[i] = [];\n  }\n};\n\nMachine.prototype.setCode = function (path, code) {\n  this.path = path;\n  this.code = code;\n};\n\nMachine.prototype.isStepping = function () {\n  return this.stepping;\n};\n\nMachine.prototype.getOutput = function () {\n  return this.output;\n};\n\nMachine.prototype.getState = function () {\n  return this.state;\n};\n\nMachine.prototype.getLocation = function () {\n  if (!this.stack || !this.debugInfo) return;\n  var top = this.getTopFrame();\n  return this.debugInfo.data.machines[top.machineId].locs[top.next];\n};\n\nMachine.prototype.disableBreakpoints = function () {\n  this.hasBreakpoints = false;\n};\n\nMachine.prototype.enableBreakpoints = function () {\n  this.hasBreakpoints = true;\n};\n\nMachine.prototype.pushState = function () {\n  this.prevStates.push([this.stepping, this.hasBreakpoints]);\n  this.stepping = false;\n  this.hasBreakpoints = false;\n};\n\nMachine.prototype.popState = function () {\n  var state = this.prevStates.pop();\n  this.stepping = state[0];\n  this.hasBreakpoints = state[1];\n};\n\nMachine.prototype.pushTry = function (stack, catchLoc, finallyLoc, finallyTempVar) {\n  if (finallyLoc) {\n    stack.push({\n      finallyLoc: finallyLoc,\n      finallyTempVar: finallyTempVar\n    });\n  }\n\n  if (catchLoc) {\n    stack.push({\n      catchLoc: catchLoc\n    });\n  }\n};\n\nMachine.prototype.popCatch = function (stack, catchLoc) {\n  var entry = stack[stack.length - 1];\n\n  if (entry && entry.catchLoc === catchLoc) {\n    stack.pop();\n  }\n};\n\nMachine.prototype.popFinally = function (stack, finallyLoc) {\n  var entry = stack[stack.length - 1];\n\n  if (!entry || !entry.finallyLoc) {\n    stack.pop();\n    entry = stack[stack.length - 1];\n  }\n\n  if (entry && entry.finallyLoc === finallyLoc) {\n    stack.pop();\n  }\n};\n\nMachine.prototype.dispatchException = function () {\n  if (this.error == null) {\n    return false;\n  }\n\n  var exc = this.error;\n  var dispatched = false;\n  var prevStepping = this.stepping;\n  this.stepping = false;\n\n  for (var i = 0; i < this.stack.length; i++) {\n    var frame = this.stack[i];\n\n    if (frame.dispatchException(this, exc)) {\n      // shave off the frames were walked over\n      this.stack = this.stack.slice(i);\n      dispatched = true;\n      break;\n    }\n  }\n\n  if (!prevStepping && dispatched) {\n    this.restore();\n    this.error = undefined;\n  }\n\n  return dispatched;\n};\n\nMachine.prototype.keys = function (obj) {\n  return Object.keys(obj).reverse();\n};\n\nMachine.prototype.popFrame = function () {\n  var r = this.stack.pop();\n\n  if (!this.stack.length) {\n    this.doRestore = false;\n    this.stack = null;\n  }\n\n  return r;\n};\n\nMachine.prototype.nextFrame = function () {\n  if (this.stack && this.stack.length) {\n    return this.stack[this.stack.length - 1];\n  }\n\n  return null;\n};\n\nMachine.prototype.withTopFrame = function (frame, fn) {\n  var prev = this.stack;\n  this.stack = [frame];\n\n  try {\n    var newFrame;\n\n    if (newFrame = fn()) {\n      // replace the top of the real stack with the new frame\n      prev[0] = newFrame;\n    }\n  } finally {\n    this.stack = prev;\n  }\n}; // frame\n\n\nfunction Frame(machineId, name, fn, next, state, scope, thisPtr, tryStack, tmpid) {\n  this.machineId = machineId;\n  this.name = name;\n  this.fn = fn;\n  this.next = next;\n  this.state = state;\n  this.scope = scope;\n  this.thisPtr = thisPtr;\n  this.tryStack = tryStack;\n  this.tmpid = tmpid;\n}\n\nFrame.prototype.restore = function () {\n  this.fn.call(this.thisPtr);\n};\n\nFrame.prototype.evaluate = function (machine, expr) {\n  machine.evalArg = expr;\n  machine.error = undefined;\n  machine.stepping = true;\n  machine.withTopFrame(this, function () {\n    var prevNext = this.next;\n    this.next = -1;\n\n    try {\n      this.fn.call(this.thisPtr);\n    } catch (e) {\n      if (!(e instanceof ContinuationExc)) {\n        throw e;\n      } else if (e.error) {\n        throw e.error;\n      }\n\n      var newFrame = e.fnstack[0];\n      newFrame.next = prevNext;\n      return newFrame;\n    }\n\n    throw new Error('eval did not get a frame back');\n  }.bind(this));\n  return machine.evalResult;\n};\n\nFrame.prototype.stackEach = function (func) {\n  if (this.child) {\n    this.child.stackEach(func);\n  }\n\n  func(this);\n};\n\nFrame.prototype.stackMap = function (func) {\n  var res;\n\n  if (this.child) {\n    res = this.child.stackMap(func);\n  } else {\n    res = [];\n  }\n\n  res.push(func(this));\n  return res;\n};\n\nFrame.prototype.stackReduce = function (func, acc) {\n  if (this.child) {\n    acc = this.child.stackReduce(func, acc);\n  }\n\n  return func(acc, this);\n};\n\nFrame.prototype.getLocation = function (machine) {\n  return machine.debugInfo.data[this.machineId].locs[this.next];\n};\n\nFrame.prototype.dispatchException = function (machine, exc) {\n  if (!this.tryStack) {\n    return false;\n  }\n\n  var next;\n  var hasCaught = false;\n  var hasFinally = false;\n  var finallyEntries = [];\n\n  for (var i = this.tryStack.length - 1; i >= 0; i--) {\n    var entry = this.tryStack[i];\n\n    if (entry.catchLoc) {\n      next = entry.catchLoc;\n      hasCaught = true;\n      break;\n    } else if (entry.finallyLoc) {\n      finallyEntries.push(entry);\n      hasFinally = true;\n    }\n  } // initially, `next` is undefined which will jump to the end of the\n  // function. (the default case)\n\n\n  while (entry = finallyEntries.pop()) {\n    this.state['$__t' + entry.finallyTempVar] = next;\n    next = entry.finallyLoc;\n  }\n\n  this.next = next;\n\n  if (hasFinally && !hasCaught) {\n    machine.withTopFrame(this, function () {\n      machine.doRestore = true;\n      this.restore();\n    }.bind(this));\n  }\n\n  return hasCaught;\n}; // debug info\n\n\nfunction DebugInfo(data) {\n  this.data = data;\n}\n\nDebugInfo.prototype.lineToMachinePos = function (line) {\n  if (!this.data) return null;\n  var machines = this.data.machines; // Iterate over the machines backwards because they are ordered\n  // innermost to top-level, and we want to break on the outermost\n  // function.\n\n  for (var i = machines.length - 1; i >= 0; i--) {\n    var locs = machines[i].locs;\n    var keys = Object.keys(locs);\n\n    for (var cur = 0, len = keys.length; cur < len; cur++) {\n      var loc = locs[keys[cur]];\n\n      if (loc.start.line === line) {\n        return {\n          machineId: i,\n          locId: parseInt(keys[cur])\n        };\n      }\n    }\n  }\n\n  return null;\n};\n\nDebugInfo.prototype.closestMachinePos = function (start, end) {\n  if (!this.data) return null;\n\n  for (var i = 0, l = this.data.length; i < l; i++) {\n    var locs = this.data[i].locs;\n    var keys = Object.keys(locs);\n    keys = keys.map(function (k) {\n      return parseInt(k);\n    });\n    keys.sort(function (a, b) {\n      return a - b;\n    });\n\n    for (var cur = 0, len = keys.length; cur < len; cur++) {\n      var loc = locs[keys[cur]];\n\n      if ((loc.start.line < start.line || loc.start.line === start.line && loc.start.column <= start.ch) && (loc.end.line > end.line || loc.end.line === end.line && loc.end.column >= end.ch)) {\n        return {\n          machineId: i,\n          locId: keys[cur]\n        };\n      }\n    }\n  }\n\n  return null;\n};\n\nDebugInfo.prototype.setWatch = function (pos, src) {\n  // TODO: real uuid\n  var id = Math.random() * 10000 | 0;\n  this.watches.push({\n    pos: pos,\n    src: src,\n    id: id\n  });\n  return id;\n};\n\nfunction ContinuationExc(error, initialFrame, savedFrames) {\n  this.fnstack = savedFrames ? savedFrames : initialFrame ? [initialFrame] : [];\n  this.error = error;\n  this.reuse = !!initialFrame;\n}\n\nContinuationExc.prototype.pushFrame = function (frame) {\n  // console.log('pushFrame(frame)', frame)\n  this.fnstack.push(frame);\n}; // exports\n\n\nmodule.exports.$Machine = Machine;\nmodule.exports.$Frame = Frame;\nmodule.exports.$DebugInfo = DebugInfo;\nmodule.exports.$ContinuationExc = ContinuationExc;","/**\n * Copyright (c) 2013, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nexports.guessTabWidth = function (source) {\n  var counts = []; // Sparse array.\n\n  var lastIndent = 0;\n  source.split(\"\\n\").forEach(function (line) {\n    var indent = /^\\s*/.exec(line)[0].length;\n    var diff = Math.abs(indent - lastIndent);\n    counts[diff] = ~~counts[diff] + 1;\n    lastIndent = indent;\n  });\n  var maxCount = -1;\n  var result = 2;\n\n  for (var tabWidth = 1; tabWidth < counts.length; tabWidth += 1) {\n    if (tabWidth in counts && counts[tabWidth] > maxCount) {\n      maxCount = counts[tabWidth];\n      result = tabWidth;\n    }\n  }\n\n  return result;\n};\n\nexports.defaults = function (obj) {\n  var len = arguments.length;\n  var extension;\n\n  for (var i = 1; i < len; ++i) {\n    if (extension = arguments[i]) {\n      for (var key in extension) {\n        if (hasOwn.call(extension, key) && !hasOwn.call(obj, key)) {\n          obj[key] = extension[key];\n        }\n      }\n    }\n  }\n\n  return obj;\n}; // tag nodes with source code locations\n\n\nexports.withLoc = function (node, loc) {\n  node.loc = loc;\n  return node;\n};","var babel = require('babel-core');\n\nvar _require = require(\"../src/staticAnalysis\"),\n    dependenciesVisitor = _require.dependenciesVisitor,\n    initConfigVisitor = _require.initConfigVisitor,\n    storeContinuationsVisitor = _require.storeContinuationsVisitor,\n    tryCatchVisitor = _require.tryCatchVisitor,\n    ifBlockVisitor = _require.ifBlockVisitor;\n\nfunction restoreHeap(restore) {\n  var snapshot;\n  heap.snapshots.map(function (element) {\n    if (element.TimePointId == restore) snapshot = element;\n  });\n  dependencies.map(function (key) {\n    eval(\"\".concat(key, \" = document.getElementById('input-\").concat(key, \"').value || undefined ||\\xA0snapshot.\").concat(key, \";\"));\n  });\n}\n\nmodule.exports = {\n  init: function init(inputCode) {\n    var src = require(\"../index\")(inputCode, [dependenciesVisitor, tryCatchVisitor], true).code;\n\n    var _babel$transform = babel.transform(src, {\n      plugins: [ifBlockVisitor, initConfigVisitor, storeContinuationsVisitor]\n    }),\n        code = _babel$transform.code;\n\n    code = \"function addCont(cont, continuations, originalId){\\n      let counter = 0;\\n      let id = originalId;\\n      while(continuations[id]){\\n          id = originalId + (++counter);\\n      }\\n      continuations[id] = cont;\\n    }\" + code;\n\n    var compile = require(\"../unwinder/bin/compile.js\");\n\n    var unwindedCode = compile(code);\n\n    try {\n      console.log(\"%cStart first execution\", \"background: #222; color: cyan\");\n      eval(unwindedCode);\n      console.log(\"%cFinish first execution\", \"background: #222; color: cyan\");\n    } catch (e) {\n      console.log(e, \"Error from VM\");\n    }\n  },\n  invokeContinuation: function invokeContinuation(kont) {\n    restoreHeap(kont);\n\n    try {\n      console.log(\"%cStart TimePoint \".concat(kont), \"background: #222; color: #bada55\");\n      eval(\"let kontAux = continuations.kont\".concat(kont, \"; \\n        continuations.kont\").concat(kont, \"(); \\n        continuations.kont\").concat(kont, \" = kontAux\"));\n      console.log(\"%cEnd TimePoint \".concat(kont), \"background: #222; color: #bada55\");\n    } catch (e) {\n      console.log(e, \"Error from VM\");\n    }\n  }\n};","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 376;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 390;","global.heap = {};\nheap.snapshots = [];\nmodule.exports = {\n  addDependencies: function addDependencies(dependencies) {\n    heap.dependencies = dependencies;\n  },\n  heapSnapshot: function heapSnapshot(id) {\n    var snapshot = {};\n    var counter = 0;\n    var originId = id;\n\n    while (heap.snapshots.find(function (element) {\n      return element.TimePointId == id;\n    })) {\n      id = originId + ++counter;\n    }\n\n    snapshot.TimePointId = id;\n    heap.dependencies.map(function (dependecy) {\n      snapshot[\"\".concat(dependecy)] = global[dependecy.toString()];\n    });\n    heap.snapshots.push(snapshot);\n  }\n};","/**\n * Copyright (c) 2013, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\nvar assert = require(\"assert\");\n\nvar path = require(\"path\");\n\nvar types = require(\"ast-types\");\n\nvar b = types.builders;\n\nvar transform = require(\"./lib/visit\").transform;\n\nvar utils = require(\"./lib/util\");\n\nvar recast = require(\"recast\");\n\nvar esprimaHarmony = require(\"esprima\");\n\nvar genFunExp = /\\bfunction\\s*\\*/;\nvar blockBindingExp = /\\b(let|const)\\s+/;\nassert.ok(/harmony/.test(esprimaHarmony.version), \"Bad esprima version: \" + esprimaHarmony.version);\n\nfunction regenerator(source, options) {\n  options = utils.defaults(options || {}, {\n    supportBlockBinding: true\n  });\n  var supportBlockBinding = !!options.supportBlockBinding;\n\n  if (supportBlockBinding) {\n    if (!blockBindingExp.test(source)) {\n      supportBlockBinding = false;\n    }\n  }\n\n  var recastOptions = {\n    tabWidth: utils.guessTabWidth(source),\n    // Use the harmony branch of Esprima that installs with regenerator\n    // instead of the master branch that recast provides.\n    esprima: esprimaHarmony,\n    range: supportBlockBinding,\n    loc: true\n  };\n  var recastAst = recast.parse(source, recastOptions);\n  var ast = recastAst.program; // Transpile let/const into var declarations.\n\n  if (supportBlockBinding) {\n    var defsResult = require(\"defs\")(ast, {\n      ast: true,\n      disallowUnknownReferences: false,\n      disallowDuplicated: false,\n      disallowVars: false,\n      loopClosures: \"iife\"\n    });\n\n    if (defsResult.errors) {\n      throw new Error(defsResult.errors.join(\"\\n\"));\n    }\n  }\n\n  var transformed = transform(ast, options);\n  recastAst.program = transformed.ast;\n  var appendix = '';\n\n  if (options.includeDebug) {\n    var body = recastAst.program.body;\n    body.unshift.apply(body, transformed.debugAST);\n  }\n\n  return {\n    code: recast.print(recastAst, recastOptions).code + '\\n' + appendix,\n    debugInfo: transformed.debugInfo\n  };\n} // To modify an AST directly, call require(\"regenerator\").transform(ast).\n\n\nregenerator.transform = transform;\nregenerator.runtime = {\n  dev: path.join(__dirname, \"runtime\", \"vm.js\"),\n  min: path.join(__dirname, \"runtime\", \"min.js\")\n}; // To transform a string of ES6 code, call require(\"regenerator\")(source);\n\nmodule.exports = regenerator;","/**\n * Copyright (c) 2013, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\"use strict\";\n\nvar assert = require(\"assert\");\n\nvar types = require(\"ast-types\");\n\nvar recast = require(\"recast\");\n\nvar isArray = types.builtInTypes.array;\nvar b = types.builders;\nvar n = types.namedTypes;\n\nvar leap = require(\"./leap\");\n\nvar meta = require(\"./meta\");\n\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nvar withLoc = require(\"./util\").withLoc;\n\nfunction makeASTGenerator(code) {\n  return function () {\n    // TODO: optimize it so it doesn't always have to parse it\n    var ast = b.blockStatement(recast.parse(code).program.body);\n    var args = arguments;\n    return types.traverse(ast, function (node) {\n      if (n.Identifier.check(node) && node.name[0] === '$') {\n        var idx = parseInt(node.name.slice(1));\n        return this.replace(args[idx - 1]);\n      }\n    });\n  };\n}\n\nvar makeSetBreakpointAST = makeASTGenerator('VM.hasBreakpoints = true;\\nVM.machineBreaks[$1][$2] = true;');\n\nfunction Emitter(debugId, debugInfo) {\n  assert.ok(this instanceof Emitter);\n  this.tmpId = 0;\n  this.maxTmpId = 0;\n  Object.defineProperties(this, {\n    // An append-only list of Statements that grows each time this.emit is\n    // called.\n    listing: {\n      value: []\n    },\n    // A sparse array whose keys correspond to locations in this.listing\n    // that have been marked as branch/jump targets.\n    marked: {\n      value: [true]\n    },\n    // Every location has a source location mapping\n    sourceLocations: {\n      value: [true]\n    },\n    // The last location will be marked when this.getDispatchLoop is\n    // called.\n    finalLoc: {\n      value: loc()\n    },\n    debugId: {\n      value: debugId\n    },\n    debugInfo: {\n      value: debugInfo\n    }\n  }); // The .leapManager property needs to be defined by a separate\n  // defineProperties call so that .finalLoc will be visible to the\n  // leap.LeapManager constructor.\n\n  Object.defineProperties(this, {\n    // Each time we evaluate the body of a loop, we tell this.leapManager\n    // to enter a nested loop context that determines the meaning of break\n    // and continue statements therein.\n    leapManager: {\n      value: new leap.LeapManager(this)\n    }\n  });\n}\n\nvar Ep = Emitter.prototype;\nexports.Emitter = Emitter; // Offsets into this.listing that could be used as targets for branches or\n// jumps are represented as numeric Literal nodes. This representation has\n// the amazingly convenient benefit of allowing the exact value of the\n// location to be determined at any time, even after generating code that\n// refers to the location.\n\nfunction loc() {\n  var lit = b.literal(-1); // A little hacky, but mark is as a location object so we can do\n  // some quick checking later (see resolveEmptyJumps)\n\n  lit._location = true;\n  return lit;\n} // Sets the exact value of the given location to the offset of the next\n// Statement emitted.\n\n\nEp.mark = function (loc) {\n  n.Literal.assert(loc);\n  var index = this.listing.length;\n  loc.value = index;\n  this.marked[index] = true;\n  return loc;\n};\n\nEp.getLastMark = function () {\n  var index = this.listing.length;\n\n  while (index > 0 && !this.marked[index]) {\n    index--;\n  }\n\n  return index;\n};\n\nEp.markAndBreak = function () {\n  var next = loc();\n  this.emitAssign(b.identifier('$__next'), next);\n  this.emit(b.breakStatement(null), true);\n  this.mark(next);\n};\n\nEp.emit = function (node, internal) {\n  if (n.Expression.check(node)) {\n    node = withLoc(b.expressionStatement(node), node.loc);\n  }\n\n  n.Statement.assert(node);\n  this.listing.push(node);\n\n  if (!internal) {\n    if (!node.loc) {\n      throw new Error(\"source location missing: \" + JSON.stringify(node));\n    } else {\n      this.debugInfo.addSourceLocation(this.debugId, node.loc, this.listing.length - 1);\n    }\n  }\n}; // Shorthand for emitting assignment statements. This will come in handy\n// for assignments to temporary variables.\n\n\nEp.emitAssign = function (lhs, rhs, loc) {\n  this.emit(this.assign(lhs, rhs, loc), !loc);\n  return lhs;\n}; // Shorthand for an assignment statement.\n\n\nEp.assign = function (lhs, rhs, loc) {\n  var node = b.expressionStatement(b.assignmentExpression(\"=\", lhs, rhs));\n  node.loc = loc;\n  return node;\n};\n\nEp.declareVar = function (name, init, loc) {\n  return withLoc(b.variableDeclaration('var', [b.variableDeclarator(b.identifier(name), init)]), loc);\n};\n\nEp.getProperty = function (obj, prop, computed, loc) {\n  return withLoc(b.memberExpression(typeof obj === 'string' ? b.identifier(obj) : obj, typeof prop === 'string' ? b.identifier(prop) : prop, !!computed), loc);\n};\n\nEp.vmProperty = function (name, loc) {\n  var node = b.memberExpression(b.identifier('VM'), b.identifier(name), false);\n  node.loc = loc;\n  return node;\n};\n\nEp.clearPendingException = function (assignee, loc) {\n  var cp = this.vmProperty(\"error\");\n\n  if (assignee) {\n    this.emitAssign(assignee, cp, loc);\n  }\n\n  this.emitAssign(cp, b.literal(null));\n}; // Emits code for an unconditional jump to the given location, even if the\n// exact value of the location is not yet known.\n\n\nEp.jump = function (toLoc) {\n  this.emitAssign(b.identifier('$__next'), toLoc);\n  this.emit(b.breakStatement(), true);\n}; // Conditional jump.\n\n\nEp.jumpIf = function (test, toLoc, srcLoc) {\n  n.Expression.assert(test);\n  n.Literal.assert(toLoc);\n  this.emit(withLoc(b.ifStatement(test, b.blockStatement([this.assign(b.identifier('$__next'), toLoc), b.breakStatement()])), srcLoc));\n}; // Conditional jump, with the condition negated.\n\n\nEp.jumpIfNot = function (test, toLoc, srcLoc) {\n  n.Expression.assert(test);\n  n.Literal.assert(toLoc);\n  this.emit(withLoc(b.ifStatement(b.unaryExpression(\"!\", test), b.blockStatement([this.assign(b.identifier('$__next'), toLoc), b.breakStatement()])), srcLoc));\n}; // Make temporary ids. They should be released when not needed anymore\n// so that we can generate as few of them as possible.\n\n\nEp.getTempVar = function () {\n  this.tmpId++;\n\n  if (this.tmpId > this.maxTmpId) {\n    this.maxTmpId = this.tmpId;\n  }\n\n  return b.identifier(\"$__t\" + this.tmpId);\n};\n\nEp.currentTempId = function () {\n  return this.tmpId;\n};\n\nEp.releaseTempVar = function () {\n  this.tmpId--;\n};\n\nEp.numTempVars = function () {\n  return this.maxTmpId;\n};\n\nEp.withTempVars = function (cb) {\n  var prevId = this.tmpId;\n  var res = cb();\n  this.tmpId = prevId;\n  return res;\n};\n\nEp.getMachine = function (funcName, varNames) {\n  return this.getDispatchLoop(funcName, varNames);\n};\n\nEp.resolveEmptyJumps = function () {\n  var self = this;\n  var forwards = {}; // TODO: this is actually broken now since we removed the $ctx\n  // variable\n\n  self.listing.forEach(function (stmt, i) {\n    if (self.marked.hasOwnProperty(i) && self.marked.hasOwnProperty(i + 2) && (n.ReturnStatement.check(self.listing[i + 1]) || n.BreakStatement.check(self.listing[i + 1])) && n.ExpressionStatement.check(stmt) && n.AssignmentExpression.check(stmt.expression) && n.MemberExpression.check(stmt.expression.left) && stmt.expression.left.object.name == '$ctx' && stmt.expression.left.property.name == '$__next') {\n      forwards[i] = stmt.expression.right; // TODO: actually remove these cases from the output\n    }\n  });\n  types.traverse(self.listing, function (node) {\n    if (n.Literal.check(node) && node._location && forwards.hasOwnProperty(node.value)) {\n      this.replace(forwards[node.value]);\n    }\n  });\n}; // Turns this.listing into a loop of the form\n//\n//   while (1) switch (context.next) {\n//   case 0:\n//   ...\n//   case n:\n//     return context.stop();\n//   }\n//\n// Each marked location in this.listing will correspond to one generated\n// case statement.\n\n\nEp.getDispatchLoop = function (funcName, varNames) {\n  var self = this; // If we encounter a break, continue, or return statement in a switch\n  // case, we can skip the rest of the statements until the next case.\n\n  var alreadyEnded = false,\n      current,\n      cases = []; // If a case statement will just forward to another location, make\n  // the original loc jump straight to it\n\n  self.resolveEmptyJumps();\n  self.listing.forEach(function (stmt, i) {\n    if (self.marked.hasOwnProperty(i)) {\n      cases.push(b.switchCase(b.literal(i), current = []));\n      alreadyEnded = false;\n    }\n\n    if (!alreadyEnded) {\n      current.push(stmt);\n      if (isSwitchCaseEnder(stmt)) alreadyEnded = true;\n    }\n  }); // Now that we know how many statements there will be in this.listing,\n  // we can finally resolve this.finalLoc.value.\n\n  this.finalLoc.value = this.listing.length;\n  this.debugInfo.addFinalLocation(this.debugId, this.finalLoc.value);\n  this.debugInfo.addStepIds(this.debugId, this.marked.reduce(function (acc, val, i) {\n    if (val) {\n      acc.push(i);\n    }\n\n    return acc;\n  }, []));\n  ;\n  cases.push.apply(cases, [b.switchCase(null, []), b.switchCase(this.finalLoc, [b.returnStatement(null)])]); // add an \"eval\" location\n\n  cases.push(b.switchCase(b.literal(-1), [self.assign(self.vmProperty('evalResult'), b.callExpression(b.identifier('eval'), [self.vmProperty('evalArg')])), b.throwStatement(b.newExpression(b.identifier('$ContinuationExc'), []))]));\n  return [// the state machine\n  b.whileStatement(b.literal(1), b.blockStatement([b.ifStatement(b.logicalExpression('&&', self.vmProperty('hasBreakpoints'), b.binaryExpression('!==', self.getProperty(self.getProperty(self.vmProperty('machineBreaks'), b.literal(this.debugId), true), b.identifier('$__next'), true), // is identifier right here? it doesn't seem right\n  b.identifier('undefined'))), b.throwStatement(b.newExpression(b.identifier('$ContinuationExc'), []))), b.switchStatement(b.identifier('$__next'), cases), b.ifStatement(self.vmProperty('stepping'), b.throwStatement(b.newExpression(b.identifier('$ContinuationExc'), [])))]))];\n}; // See comment above re: alreadyEnded.\n\n\nfunction isSwitchCaseEnder(stmt) {\n  return n.BreakStatement.check(stmt) || n.ContinueStatement.check(stmt) || n.ReturnStatement.check(stmt) || n.ThrowStatement.check(stmt);\n} // an \"atomic\" expression is one that should execute within one step\n// of the VM\n\n\nfunction isAtomic(expr) {\n  return n.Literal.check(expr) || n.Identifier.check(expr) || n.ThisExpression.check(expr) || n.MemberExpression.check(expr) && !expr.computed;\n} // No destructive modification of AST nodes.\n\n\nEp.explode = function (path, ignoreResult) {\n  assert.ok(path instanceof types.NodePath);\n  var node = path.value;\n  var self = this;\n  n.Node.assert(node);\n  if (n.Statement.check(node)) return self.explodeStatement(path);\n  if (n.Expression.check(node)) return self.explodeExpression(path, ignoreResult);\n  if (n.Declaration.check(node)) throw getDeclError(node);\n\n  switch (node.type) {\n    case \"Program\":\n      return path.get(\"body\").map(self.explodeStatement, self);\n\n    case \"VariableDeclarator\":\n      throw getDeclError(node);\n    // These node types should be handled by their parent nodes\n    // (ObjectExpression, SwitchStatement, and TryStatement, respectively).\n\n    case \"Property\":\n    case \"SwitchCase\":\n    case \"CatchClause\":\n      throw new Error(node.type + \" nodes should be handled by their parents\");\n\n    default:\n      throw new Error(\"unknown Node of type \" + JSON.stringify(node.type));\n  }\n};\n\nfunction getDeclError(node) {\n  return new Error(\"all declarations should have been transformed into \" + \"assignments before the Exploder began its work: \" + JSON.stringify(node));\n}\n\nEp.explodeStatement = function (path, labelId) {\n  assert.ok(path instanceof types.NodePath);\n  var stmt = path.value;\n  var self = this;\n  n.Statement.assert(stmt);\n\n  if (labelId) {\n    n.Identifier.assert(labelId);\n  } else {\n    labelId = null;\n  } // Explode BlockStatement nodes even if they do not contain a yield,\n  // because we don't want or need the curly braces.\n\n\n  if (n.BlockStatement.check(stmt)) {\n    return path.get(\"body\").each(self.explodeStatement, self);\n  } // if (!meta.containsLeap(stmt)) {\n  //   // Technically we should be able to avoid emitting the statement\n  //   // altogether if !meta.hasSideEffects(stmt), but that leads to\n  //   // confusing generated code (for instance, `while (true) {}` just\n  //   // disappears) and is probably a more appropriate job for a dedicated\n  //   // dead code elimination pass.\n  //   self.emit(stmt);\n  //   return;\n  // }\n\n\n  switch (stmt.type) {\n    case \"ExpressionStatement\":\n      self.explodeExpression(path.get(\"expression\"), true);\n      break;\n\n    case \"LabeledStatement\":\n      self.explodeStatement(path.get(\"body\"), stmt.label);\n      break;\n\n    case \"WhileStatement\":\n      var before = loc();\n      var after = loc();\n      self.mark(before);\n      self.jumpIfNot(self.explodeExpression(path.get(\"test\")), after, path.get(\"test\").node.loc);\n      self.markAndBreak();\n      self.leapManager.withEntry(new leap.LoopEntry(after, before, labelId), function () {\n        self.explodeStatement(path.get(\"body\"));\n      });\n      self.jump(before);\n      self.mark(after);\n      break;\n\n    case \"DoWhileStatement\":\n      var first = loc();\n      var test = loc();\n      var after = loc();\n      self.mark(first);\n      self.leapManager.withEntry(new leap.LoopEntry(after, test, labelId), function () {\n        self.explode(path.get(\"body\"));\n      });\n      self.mark(test);\n      self.jumpIf(self.explodeExpression(path.get(\"test\")), first, path.get(\"test\").node.loc);\n      self.emitAssign(b.identifier('$__next'), after);\n      self.emit(b.breakStatement(), true);\n      self.mark(after);\n      break;\n\n    case \"ForStatement\":\n      var head = loc();\n      var update = loc();\n      var after = loc();\n\n      if (stmt.init) {\n        // We pass true here to indicate that if stmt.init is an expression\n        // then we do not care about its result.\n        self.explode(path.get(\"init\"), true);\n      }\n\n      self.mark(head);\n\n      if (stmt.test) {\n        self.jumpIfNot(self.explodeExpression(path.get(\"test\")), after, path.get(\"test\").node.loc);\n      } else {// No test means continue unconditionally.\n      }\n\n      this.markAndBreak();\n      self.leapManager.withEntry(new leap.LoopEntry(after, update, labelId), function () {\n        self.explodeStatement(path.get(\"body\"));\n      });\n      self.mark(update);\n\n      if (stmt.update) {\n        // We pass true here to indicate that if stmt.update is an\n        // expression then we do not care about its result.\n        self.explode(path.get(\"update\"), true);\n      }\n\n      self.jump(head);\n      self.mark(after);\n      break;\n\n    case \"ForInStatement\":\n      n.Identifier.assert(stmt.left);\n      var head = loc();\n      var after = loc();\n      var keys = self.emitAssign(self.getTempVar(), b.callExpression(self.vmProperty(\"keys\"), [self.explodeExpression(path.get(\"right\"))]), path.get(\"right\").node.loc);\n      var tmpLoc = loc();\n      self.mark(tmpLoc);\n      self.mark(head);\n      self.jumpIfNot(b.memberExpression(keys, b.identifier(\"length\"), false), after, stmt.right.loc);\n      self.emitAssign(stmt.left, b.callExpression(b.memberExpression(keys, b.identifier(\"pop\"), false), []), stmt.left.loc);\n      self.markAndBreak();\n      self.leapManager.withEntry(new leap.LoopEntry(after, head, labelId), function () {\n        self.explodeStatement(path.get(\"body\"));\n      });\n      self.jump(head);\n      self.mark(after);\n      self.releaseTempVar();\n      break;\n\n    case \"BreakStatement\":\n      self.leapManager.emitBreak(stmt.label);\n      break;\n\n    case \"ContinueStatement\":\n      self.leapManager.emitContinue(stmt.label);\n      break;\n\n    case \"SwitchStatement\":\n      // Always save the discriminant into a temporary variable in case the\n      // test expressions overwrite values like context.sent.\n      var disc = self.emitAssign(self.getTempVar(), self.explodeExpression(path.get(\"discriminant\")));\n      var after = loc();\n      var defaultLoc = loc();\n      var condition = defaultLoc;\n      var caseLocs = []; // If there are no cases, .cases might be undefined.\n\n      var cases = stmt.cases || [];\n\n      for (var i = cases.length - 1; i >= 0; --i) {\n        var c = cases[i];\n        n.SwitchCase.assert(c);\n\n        if (c.test) {\n          condition = b.conditionalExpression(b.binaryExpression(\"===\", disc, c.test), caseLocs[i] = loc(), condition);\n        } else {\n          caseLocs[i] = defaultLoc;\n        }\n      }\n\n      self.jump(self.explodeExpression(new types.NodePath(condition, path, \"discriminant\")));\n      self.leapManager.withEntry(new leap.SwitchEntry(after), function () {\n        path.get(\"cases\").each(function (casePath) {\n          var c = casePath.value;\n          var i = casePath.name;\n          self.mark(caseLocs[i]);\n          casePath.get(\"consequent\").each(self.explodeStatement, self);\n        });\n      });\n      self.releaseTempVar();\n      self.mark(after);\n\n      if (defaultLoc.value === -1) {\n        self.mark(defaultLoc);\n        assert.strictEqual(after.value, defaultLoc.value);\n      }\n\n      break;\n\n    case \"IfStatement\":\n      var elseLoc = stmt.alternate && loc();\n      var after = loc();\n      self.jumpIfNot(self.explodeExpression(path.get(\"test\")), elseLoc || after, path.get(\"test\").node.loc);\n      self.markAndBreak();\n      self.explodeStatement(path.get(\"consequent\"));\n\n      if (elseLoc) {\n        self.jump(after);\n        self.mark(elseLoc);\n        self.explodeStatement(path.get(\"alternate\"));\n      }\n\n      self.mark(after);\n      break;\n\n    case \"ReturnStatement\":\n      var arg = path.get('argument');\n      var tmp = self.getTempVar();\n      var after = loc();\n      self.emitAssign(b.identifier('$__next'), after, arg.node.loc);\n      self.emitAssign(tmp, this.explodeExpression(arg)); // TODO: breaking here allowing stepping to stop on return.\n      // Not sure if that's desirable or not.\n      // self.emit(b.breakStatement(), true);\n\n      self.mark(after);\n      self.releaseTempVar();\n      self.emit(withLoc(b.returnStatement(tmp), path.node.loc));\n      break;\n\n    case \"WithStatement\":\n      throw new Error(node.type + \" not supported in generator functions.\");\n\n    case \"TryStatement\":\n      var after = loc();\n      var handler = stmt.handler;\n\n      if (!handler && stmt.handlers) {\n        handler = stmt.handlers[0] || null;\n      }\n\n      var catchLoc = handler && loc();\n      var catchEntry = catchLoc && new leap.CatchEntry(catchLoc, handler.param);\n      var finallyLoc = stmt.finalizer && loc();\n      var finallyEntry = finallyLoc && new leap.FinallyEntry(finallyLoc, self.getTempVar());\n\n      if (finallyEntry) {\n        // Finally blocks examine their .nextLocTempVar property to figure\n        // out where to jump next, so we must set that property to the\n        // fall-through location, by default.\n        self.emitAssign(finallyEntry.nextLocTempVar, after, path.node.loc);\n      }\n\n      var tryEntry = new leap.TryEntry(catchEntry, finallyEntry); // Push information about this try statement so that the runtime can\n      // figure out what to do if it gets an uncaught exception.\n\n      self.pushTry(tryEntry, path.node.loc);\n      self.markAndBreak();\n      self.leapManager.withEntry(tryEntry, function () {\n        self.explodeStatement(path.get(\"block\"));\n\n        if (catchLoc) {\n          // If execution leaves the try block normally, the associated\n          // catch block no longer applies.\n          self.popCatch(catchEntry, handler.loc);\n\n          if (finallyLoc) {\n            // If we have both a catch block and a finally block, then\n            // because we emit the catch block first, we need to jump over\n            // it to the finally block.\n            self.jump(finallyLoc);\n          } else {\n            // If there is no finally block, then we need to jump over the\n            // catch block to the fall-through location.\n            self.jump(after);\n          }\n\n          self.mark(catchLoc); // On entering a catch block, we must not have exited the\n          // associated try block normally, so we won't have called\n          // context.popCatch yet.  Call it here instead.\n\n          self.popCatch(catchEntry, handler.loc); // self.markAndBreak();\n\n          var bodyPath = path.get(\"handler\", \"body\");\n          var safeParam = self.getTempVar();\n          self.clearPendingException(safeParam, handler.loc);\n          self.markAndBreak();\n          var catchScope = bodyPath.scope;\n          var catchParamName = handler.param.name;\n          n.CatchClause.assert(catchScope.node);\n          assert.strictEqual(catchScope.lookup(catchParamName), catchScope);\n          types.traverse(bodyPath, function (node) {\n            if (n.Identifier.check(node) && node.name === catchParamName && this.scope.lookup(catchParamName) === catchScope) {\n              this.replace(safeParam);\n              return false;\n            }\n          });\n          self.leapManager.withEntry(catchEntry, function () {\n            self.explodeStatement(bodyPath);\n          });\n          self.releaseTempVar();\n        }\n\n        if (finallyLoc) {\n          self.mark(finallyLoc);\n          self.popFinally(finallyEntry, stmt.finalizer.loc);\n          self.markAndBreak();\n          self.leapManager.withEntry(finallyEntry, function () {\n            self.explodeStatement(path.get(\"finalizer\"));\n          });\n          self.jump(finallyEntry.nextLocTempVar);\n          self.releaseTempVar();\n        }\n      });\n      self.mark(after);\n      break;\n\n    case \"ThrowStatement\":\n      self.emit(withLoc(b.throwStatement(self.explodeExpression(path.get(\"argument\"))), path.node.loc));\n      break;\n\n    case \"DebuggerStatement\":\n      var after = loc();\n      self.emit(makeSetBreakpointAST(b.literal(this.debugId), after), true);\n      self.emitAssign(b.identifier('$__next'), after);\n      self.emit(b.breakStatement(), true);\n      self.mark(after);\n      after = loc();\n      self.emitAssign(b.identifier('$__next'), after, path.node.loc);\n      self.emit(b.breakStatement(), true);\n      self.mark(after);\n      break;\n\n    default:\n      throw new Error(\"unknown Statement of type \" + JSON.stringify(stmt.type));\n  }\n}; // Emit a runtime call to context.pushTry(catchLoc, finallyLoc) so that\n// the runtime wrapper can dispatch uncaught exceptions appropriately.\n\n\nEp.pushTry = function (tryEntry, loc) {\n  assert.ok(tryEntry instanceof leap.TryEntry);\n  var nil = b.literal(null);\n  var catchEntry = tryEntry.catchEntry;\n  var finallyEntry = tryEntry.finallyEntry;\n  var method = this.vmProperty(\"pushTry\");\n  var args = [b.identifier('tryStack'), catchEntry && catchEntry.firstLoc || nil, finallyEntry && finallyEntry.firstLoc || nil, finallyEntry && b.literal(parseInt(finallyEntry.nextLocTempVar.name.replace('$__t', ''))) || nil];\n  this.emit(withLoc(b.callExpression(method, args), loc));\n}; // Emit a runtime call to context.popCatch(catchLoc) so that the runtime\n// wrapper knows when a catch block reported to pushTry no longer applies.\n\n\nEp.popCatch = function (catchEntry, loc) {\n  var catchLoc;\n\n  if (catchEntry) {\n    assert.ok(catchEntry instanceof leap.CatchEntry);\n    catchLoc = catchEntry.firstLoc;\n  } else {\n    assert.strictEqual(catchEntry, null);\n    catchLoc = b.literal(null);\n  } // TODO Think about not emitting anything when catchEntry === null.  For\n  // now, emitting context.popCatch(null) is good for sanity checking.\n\n\n  this.emit(withLoc(b.callExpression(this.vmProperty(\"popCatch\"), [b.identifier('tryStack'), catchLoc]), loc));\n}; // Emit a runtime call to context.popFinally(finallyLoc) so that the\n// runtime wrapper knows when a finally block reported to pushTry no\n// longer applies.\n\n\nEp.popFinally = function (finallyEntry, loc) {\n  var finallyLoc;\n\n  if (finallyEntry) {\n    assert.ok(finallyEntry instanceof leap.FinallyEntry);\n    finallyLoc = finallyEntry.firstLoc;\n  } else {\n    assert.strictEqual(finallyEntry, null);\n    finallyLoc = b.literal(null);\n  } // TODO Think about not emitting anything when finallyEntry === null.\n  // For now, emitting context.popFinally(null) is good for sanity\n  // checking.\n\n\n  this.emit(withLoc(b.callExpression(this.vmProperty(\"popFinally\"), [b.identifier('tryStack'), finallyLoc]), loc));\n};\n\nEp.explodeExpression = function (path, ignoreResult) {\n  assert.ok(path instanceof types.NodePath);\n  var expr = path.value;\n\n  if (expr) {\n    n.Expression.assert(expr);\n  } else {\n    return expr;\n  }\n\n  var self = this;\n  var result; // Used optionally by several cases below.\n\n  function finish(expr) {\n    n.Expression.assert(expr);\n\n    if (ignoreResult) {\n      var after = loc();\n      self.emit(expr);\n      self.emitAssign(b.identifier('$__next'), after);\n      self.emit(b.breakStatement(), true);\n      self.mark(after);\n    } else {\n      return expr;\n    }\n  } // If the expression does not contain a leap, then we either emit the\n  // expression as a standalone statement or return it whole.\n  // if (!meta.containsLeap(expr)) {\n  //   return finish(expr);\n  // }\n  // If any child contains a leap (such as a yield or labeled continue or\n  // break statement), then any sibling subexpressions will almost\n  // certainly have to be exploded in order to maintain the order of their\n  // side effects relative to the leaping child(ren).\n\n\n  var hasLeapingChildren = meta.containsLeap.onlyChildren(expr); // In order to save the rest of explodeExpression from a combinatorial\n  // trainwreck of special cases, explodeViaTempVar is responsible for\n  // deciding when a subexpression needs to be \"exploded,\" which is my\n  // very technical term for emitting the subexpression as an assignment\n  // to a temporary variable and the substituting the temporary variable\n  // for the original subexpression. Think of exploded view diagrams, not\n  // Michael Bay movies. The point of exploding subexpressions is to\n  // control the precise order in which the generated code realizes the\n  // side effects of those subexpressions.\n\n  function explodeViaTempVar(tempVar, childPath, ignoreChildResult, keepTempVar) {\n    assert.ok(childPath instanceof types.NodePath);\n    assert.ok(!ignoreChildResult || !tempVar, \"Ignoring the result of a child expression but forcing it to \" + \"be assigned to a temporary variable?\");\n\n    if (isAtomic(childPath.node)) {\n      // we still explode it because only the top-level expression is\n      // atomic, sub-expressions may not be\n      return self.explodeExpression(childPath, ignoreChildResult);\n    } else if (!ignoreChildResult) {\n      var shouldRelease = !tempVar && !keepTempVar;\n      tempVar = tempVar || self.getTempVar();\n      var result = self.explodeExpression(childPath, ignoreChildResult); // always mark!\n\n      result = self.emitAssign(tempVar, result, childPath.node.loc);\n      self.markAndBreak();\n\n      if (shouldRelease) {\n        self.releaseTempVar();\n      }\n    }\n\n    return result;\n  } // If ignoreResult is true, then we must take full responsibility for\n  // emitting the expression with all its side effects, and we should not\n  // return a result.\n\n\n  switch (expr.type) {\n    case \"MemberExpression\":\n      return finish(withLoc(b.memberExpression(self.explodeExpression(path.get(\"object\")), expr.computed ? explodeViaTempVar(null, path.get(\"property\"), false, true) : expr.property, expr.computed), path.node.loc));\n\n    case \"CallExpression\":\n      var oldCalleePath = path.get(\"callee\");\n      var callArgs = path.get(\"arguments\");\n\n      if (oldCalleePath.node.type === \"Identifier\" && oldCalleePath.node.name === \"callCC\") {\n        callArgs = [new types.NodePath(withLoc(b.callExpression(b.memberExpression(b.identifier(\"VM\"), b.identifier(\"callCC\"), false), []), oldCalleePath.node.loc))];\n        oldCalleePath = path.get(\"arguments\").get(0);\n      }\n\n      var newCallee = self.explodeExpression(oldCalleePath);\n      var r = self.withTempVars(function () {\n        var after = loc();\n        var args = callArgs.map(function (argPath) {\n          return explodeViaTempVar(null, argPath, false, true);\n        });\n        var tmp = self.getTempVar();\n        var callee = newCallee;\n        self.emitAssign(b.identifier('$__next'), after, path.node.loc);\n        self.emitAssign(b.identifier('$__tmpid'), b.literal(self.currentTempId()));\n        self.emitAssign(tmp, b.callExpression(callee, args));\n        self.emit(b.breakStatement(), true);\n        self.mark(after);\n        return tmp;\n      });\n      return r;\n\n    case \"NewExpression\":\n      // TODO: this should be the last major expression type I need to\n      // fix up to be able to trace/step through. can't call native new\n      return self.withTempVars(function () {\n        return finish(b.newExpression(explodeViaTempVar(null, path.get(\"callee\"), false, true), path.get(\"arguments\").map(function (argPath) {\n          return explodeViaTempVar(null, argPath, false, true);\n        })));\n      });\n\n    case \"ObjectExpression\":\n      return self.withTempVars(function () {\n        return finish(b.objectExpression(path.get(\"properties\").map(function (propPath) {\n          return b.property(propPath.value.kind, propPath.value.key, explodeViaTempVar(null, propPath.get(\"value\"), false, true));\n        })));\n      });\n\n    case \"ArrayExpression\":\n      return self.withTempVars(function () {\n        return finish(b.arrayExpression(path.get(\"elements\").map(function (elemPath) {\n          return explodeViaTempVar(null, elemPath, false, true);\n        })));\n      });\n\n    case \"SequenceExpression\":\n      var lastIndex = expr.expressions.length - 1;\n      path.get(\"expressions\").each(function (exprPath) {\n        if (exprPath.name === lastIndex) {\n          result = self.explodeExpression(exprPath, ignoreResult);\n        } else {\n          self.explodeExpression(exprPath, true);\n        }\n      });\n      return result;\n\n    case \"LogicalExpression\":\n      var after = loc();\n      self.withTempVars(function () {\n        if (!ignoreResult) {\n          result = self.getTempVar();\n        }\n\n        var left = explodeViaTempVar(result, path.get(\"left\"), false, true);\n\n        if (expr.operator === \"&&\") {\n          self.jumpIfNot(left, after, path.get(\"left\").node.loc);\n        } else if (expr.operator === \"||\") {\n          self.jumpIf(left, after, path.get(\"left\").node.loc);\n        }\n\n        explodeViaTempVar(result, path.get(\"right\"), ignoreResult, true);\n        self.mark(after);\n      });\n      return result;\n\n    case \"ConditionalExpression\":\n      var elseLoc = loc();\n      var after = loc();\n      var test = self.explodeExpression(path.get(\"test\"));\n      self.jumpIfNot(test, elseLoc, path.get(\"test\").node.loc);\n\n      if (!ignoreResult) {\n        result = self.getTempVar();\n      }\n\n      explodeViaTempVar(result, path.get(\"consequent\"), ignoreResult);\n      self.jump(after);\n      self.mark(elseLoc);\n      explodeViaTempVar(result, path.get(\"alternate\"), ignoreResult);\n      self.mark(after);\n\n      if (!ignoreResult) {\n        self.releaseTempVar();\n      }\n\n      return result;\n\n    case \"UnaryExpression\":\n      return finish(withLoc(b.unaryExpression(expr.operator, // Can't (and don't need to) break up the syntax of the argument.\n      // Think about delete a[b].\n      self.explodeExpression(path.get(\"argument\")), !!expr.prefix), path.node.loc));\n\n    case \"BinaryExpression\":\n      return self.withTempVars(function () {\n        return finish(withLoc(b.binaryExpression(expr.operator, explodeViaTempVar(null, path.get(\"left\"), false, true), explodeViaTempVar(null, path.get(\"right\"), false, true)), path.node.loc));\n      });\n\n    case \"AssignmentExpression\":\n      return finish(withLoc(b.assignmentExpression(expr.operator, self.explodeExpression(path.get(\"left\")), self.explodeExpression(path.get(\"right\"))), path.node.loc));\n\n    case \"UpdateExpression\":\n      return finish(withLoc(b.updateExpression(expr.operator, self.explodeExpression(path.get(\"argument\")), expr.prefix), path.node.loc));\n    // case \"YieldExpression\":\n    //   var after = loc();\n    //   var arg = expr.argument && self.explodeExpression(path.get(\"argument\"));\n    //   if (arg && expr.delegate) {\n    //     var result = self.getTempVar();\n    //     self.emit(b.returnStatement(b.callExpression(\n    //       self.contextProperty(\"delegateYield\"), [\n    //         arg,\n    //         b.literal(result.property.name),\n    //         after\n    //       ]\n    //     )));\n    //     self.mark(after);\n    //     return result;\n    //   }\n    // self.emitAssign(b.identifier('$__next'), after);\n    // self.emit(b.returnStatement(arg || null));\n    // self.mark(after);\n    // return self.contextProperty(\"sent\");\n\n    case \"Identifier\":\n    case \"FunctionExpression\":\n    case \"ArrowFunctionExpression\":\n    case \"ThisExpression\":\n    case \"Literal\":\n      return finish(expr);\n      break;\n\n    default:\n      throw new Error(\"unknown Expression of type \" + JSON.stringify(expr.type));\n  }\n};","import React, { Component, createRef } from \"react\";\nimport \"./App.css\";\n\nimport debuggerDelorean from \"../../src/debugger\";\nimport Layout from \"./components/Layout\";\nimport Console from \"./components/Console\";\nimport Output from \"./components/Output\";\nimport StatusBar from \"./components/StatusBar\";\n\nimport CodeMirror from \"@uiw/react-codemirror\";\nimport \"codemirror/addon/display/autorefresh\";\nimport \"codemirror/addon/comment/comment\";\nimport \"codemirror/addon/edit/matchbrackets\";\nimport \"codemirror/keymap/sublime\";\nimport \"codemirror/theme/neo.css\";\n\nimport example1 from \"../../example/input1\";\nimport example2 from \"../../example/input2\";\nimport example3 from \"../../example/input3\";\n\nglobal.delorean = require(\"../../src/delorean.js\");\nglobal.vm = require(\"../../unwinder/runtime/vm.js\");\n\nclass App extends Component {\n  state = {\n    tabs: [\n      {\n        name: \"simpleBug.js\",\n        input: example1\n      },\n      {\n        name: \"timeWastingLoop.js\",\n        input: example2\n      },\n      {\n        name: \"differentStages.js\",\n        input: example3\n      }\n    ],\n    tabSelected: \"\",\n    snapshots: [],\n    dependencies: [],\n    code: \"// You can use Delorean here! :)\",\n    isRunning: false,\n    readOnly: false,\n    selected: false,\n    selectedTarget: \"\",\n  };\n\n  constructor(props){\n    super(props)\n    this.consoleFeed = createRef();\n    this.editor = createRef();\n  }\n\n  updateCode = ev => {\n    if(typeof ev == 'string'){\n      this.setState({\n        code: ev,\n      });\n    } else {\n      this.setState({\n        code: ev.getValue(),\n      });\n    }\n  };\n\n  selectTab = ev => {\n    if(!this.state.isRunning){\n      let example = this.state.tabs.find(\n        o => o.name === ev.currentTarget.firstChild.getAttribute(\"name\")\n      );\n      this.updateCode(example.input);\n      this.selectTabColor(ev);\n    } else {\n      alert('Sorry, you need stop this execution before change the code! :)')\n    }\n  };\n\n  selectTabColor = ev => {\n    if (this.state.selected) {\n      this.state.selectedTarget.classList.remove(\"selected\");\n    } else {\n      this.setState({\n        selected: true\n      });\n    }\n    ev.currentTarget.classList.add(\"selected\");\n    this.setState({\n      selectedTarget: ev.currentTarget\n    });\n  };\n\n  updateSnapshots = snapshots => {\n    this.setState({\n      snapshots\n    });\n  };\n\n  updateDependencies = dependencies => {\n    this.setState({\n      dependencies\n    });\n  };\n\n  toggleIsRunning = () => {\n    this.setState({\n      isRunning: !this.state.isRunning,\n      readOnly: !this.state.readOnly\n    });\n  };\n\n  executeCode = () => {\n    try {\n      this.toggleIsRunning();\n      debuggerDelorean.init(this.state.code);\n      this.updateDependencies(global.heap.dependencies);\n      this.updateSnapshots(global.heap.snapshots);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  invokeContinuation = ev => {\n    this.consoleFeed.current.state.logs = [];\n    let kont = ev.currentTarget.attributes[\"kont\"].value;\n    debuggerDelorean.invokeContinuation(kont);\n  };\n  \n  stopExecution = () => {\n    this.consoleFeed.current.state.logs = [];\n    this.editor.current.editor.setOption('readOnly', false);\n    global.heap = {\n      dependencies: {},\n      snapshots: []\n    };\n    global.continuations = {};\n    global.snapshotCounter = 0;\n    this.toggleIsRunning();\n    this.setState({\n      snapshots: [],\n      dependencies: []\n    });\n  };\n\n  render() {\n    var options = {\n      theme: \"neo\",\n      tabSize: 2,\n      keyMap: \"sublime\",\n      mode: \"js\",\n      lineNumbers: true,\n      readOnly: this.state.readOnly\n    };\n    return (\n      <Layout>\n        <StatusBar\n          tabs={this.state.tabs}\n          selectTab={this.selectTab}\n          executeCode={this.executeCode}\n          stopExecution={this.stopExecution}\n          isRunning={this.state.isRunning}\n        />\n        <div className=\"playground-container\">\n          <div className=\"left-panel\">\n            <div className=\"editor-container\">\n              <CodeMirror\n                ref={this.editor}\n                value={this.state.code}\n                options={options}\n                onChange={this.updateCode}\n              />\n            </div>\n            <Console \n              ref={this.consoleFeed} \n            />\n          </div>\n          <div className=\"right-panel\">\n            <Output\n              snapshots={this.state.snapshots}\n              dependencies={this.state.dependencies}\n              invokeContinuation={this.invokeContinuation}\n            />\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nconst Layout = (props) => {\n    return (\n        <div className=\"layout-container\">\n            {props.children}\n        </div>\n    )\n}\n\nexport default Layout;","import React, { Component } from 'react'\nimport { Hook, Console, Decode } from 'console-feed'\n\nclass ConsoleContainer extends Component {\n  state = {\n    logs: []\n  }\n\n  componentDidMount() {\n    Hook(window.console, log => {\n      this.setState(({ logs }) => ({ logs: [...logs, Decode(log)] }))\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"consolefeed-container\" style={{ backgroundColor: '#242424' }}>\n        <h2 className=\"console-title\">Output  </h2>\n        <div>\n          <Console \n            logs={this.state.logs} \n            variant=\"dark\"\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ConsoleContainer;","import React, { Component } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport { Button, TextField } from '@material-ui/core'\n\nclass Output extends Component {\n\n    render(){\n        const markdown = require('../markdown');\n        let index = 0;\n        return (\n            <div>\n                {\n                    this.props.snapshots.length !== 0 ?\n                    (\n                        <div className=\"output-container\">\n                            <div className=\"container-inputs\">\n                                <h2>Heap</h2>\n                                {\n                                    this.props.dependencies.map((dependency) => {\n                                        return (<div key={dependency}>\n                                                <TextField\n                                                    id=\"standard-name\"\n                                                    label={dependency}\n                                                    id={`input-${dependency}`}\n                                                    defaultValue={window[dependency]}\n                                                    // value={}\n                                                    // onChange={this.handleChange('name')}\n                                                    margin=\"normal\"\n                                                    style={{    \n                                                        margin: '5px',\n                                                    }}\n                                                />\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </div>\n                            <div className=\"container-buttons\">\n                                <h2>Time Points</h2>            \n                                {\n                                    this.props.snapshots.map((snapshot) => {\n                                        return (\n                                            <Button \n                                                kont={snapshot.TimePointId} \n                                                id={snapshot.TimePointId}\n                                                key={snapshot.TimePointId}\n                                                variant=\"contained\" \n                                                color=\"primary\"\n                                                size=\"small\"\n                                                style={{\n                                                    margin:'5px'\n                                                }}\n                                                onClick={this.props.invokeContinuation}\n                                            >\n                                            TimePoint {snapshot.TimePointId}\n                                            </Button>\n                                        )\n                                    })\n                                }\n                            </div>\n                        </div>\n                    ) : ( \n                    <div className=\"markdown-container\">  \n                        <ReactMarkdown\n                        source={markdown}\n                        escapeHtml={false}\n                        />\n                    </div>\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default Output;\n\n","export default \"delorean.watch(['a', 'c', 'x'])\\nconsole.log(\\\"Start Program 2\\\")\\nb = 7;\\na = b;\\n\\ndelorean.insertTimePoint('A');\\nconsole.log('First continuation', b);\\nc = 0;\\na = c;\\n\\ndelorean.insertTimePoint('B');\\nconsole.log('Second continuation', b);\\n\\nif(b == 7) {\\n    throw [\\\"throw activate in VM\\\", continuations];\\n}\\nconsole.log('End Program');\";","export default \"delorean.watch(['a', 'c', 'x']);\\n\\nfunction delay(ms){\\n    const startPoint = new Date().getTime()\\n    while (new Date().getTime() - startPoint <= ms) { /* wait */}\\n}\\n\\nconsole.log(\\\"Start Program\\\")\\n\\ndelorean.insertTimePoint('A');\\nconsole.log('First TimePoint');\\nvar b = 7;\\n\\nvar t = 0;\\nfor(i = 0; i < 5; ++i){\\n    t += i;\\n    delay(1000)\\n    delorean.insertTimePoint('C');\\n    console.log('For TimePoint', i);\\n}\\n\\nif(b == 7) {\\n    throw [\\\"throw activate in VM\\\", continuations];\\n}\\nconsole.log('End Program');\";","export default \"console.log(\\\"Start Program 3\\\")\\nb = 7;\\na = b;\\n\\ndelorean.insertTimePoint('A');\\nconsole.log('First continuation', b);\\nc = 0;\\na = c;\\n\\ndelorean.insertTimePoint('B');\\nconsole.log('Second continuation', b);\\n\\nif(b == 7) {\\n    throw [\\\"throw activate in VM\\\", continuations];\\n}\\nconsole.log('End Program');\";","import React from 'react'\n\nconst Tab = (props) => {\n    return (\n        <div className=\"tab-container\" onClick={props.selectTab}>\n            <h4 name={props.name} >{props.name}</h4>\n        </div>\n    )\n}\n\nexport default Tab;","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Tab from './Tab'\n\nconst styles = theme => ({\n    button: {\n      margin: theme.spacing.unit,\n    },\n    leftIcon: {\n      marginRight: theme.spacing.unit,\n    },\n    rightIcon: {\n      marginLeft: theme.spacing.unit,\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  });\n\nclass StatusBar extends Component {\n    render(){\n        const { classes } = this.props;\n        return(\n            <div className=\"status-bar\">\n                <div className=\"tabs-container\">\n                    {\n                        this.props.tabs.map((tab) => {\n                            return (\n                            <Tab\n                                key={tab.name}\n                                name={tab.name}\n                                input={tab.input}\n                                selectTab={this.props.selectTab}\n                            />\n                            )\n                        })\n                    }\n                </div>\n                <h3>Delorean</h3>\n                {\n                    !this.props.isRunning ? \n\n                    <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={this.props.executeCode}>\n                        RUN!\n                        <Icon className={classes.rightIcon}>play_circle_filled</Icon>\n                    </Button> : \n                    <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={this.props.stopExecution}>\n                        STOP!\n                        <Icon className={classes.rightIcon}>stop</Icon>\n                    </Button>\n                }\n            </div>\n        )\n    }\n}\n\nStatusBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\nexport default withStyles(styles)(StatusBar);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","var WatchVisitor = require('./visitors/watch');\n\nvar DeclaratorVisitor = require('./visitors/declarator');\n\nvar AssignmentVisitor = require('./visitors/assignment');\n\nvar ContinuationsConfigVisitor = require('./visitors/createContinuation');\n\nvar StoreContinuationsVisitor = require('./visitors/storeContinuations');\n\nvar RestoreHeapVisitor = require('./visitors/heapRestore');\n\nvar RestoreContinuationVisitor = require('./visitors/continuationRestore');\n\nvar TryCatchVisitor = require('./visitors/tryCatch');\n\nvar LoopVisitor = require('./visitors/loop');\n\nvar IfBlockVisitor = require('./visitors/ifBlock');\n\nvar _require = require('./heap'),\n    addDependencies = _require.addDependencies;\n\nglobal.dependencies = [];\nvar DependenciesVisitor = {\n  Program: function Program(path) {\n    dependencies = [];\n    path.traverse(WatchVisitor);\n    path.traverse(DeclaratorVisitor);\n    path.traverse(AssignmentVisitor);\n    path.traverse(LoopVisitor);\n    addDependencies(dependencies);\n  }\n};\nmodule.exports = {\n  dependenciesVisitor: function dependenciesVisitor() {\n    return {\n      visitor: DependenciesVisitor\n    };\n  },\n  initConfigVisitor: function initConfigVisitor() {\n    return {\n      visitor: ContinuationsConfigVisitor\n    };\n  },\n  storeContinuationsVisitor: function storeContinuationsVisitor() {\n    return {\n      visitor: StoreContinuationsVisitor\n    };\n  },\n  restoreHeapVisitor: function restoreHeapVisitor() {\n    return {\n      visitor: RestoreHeapVisitor\n    };\n  },\n  restoreContinuationVisitor: function restoreContinuationVisitor() {\n    return {\n      visitor: RestoreContinuationVisitor\n    };\n  },\n  tryCatchVisitor: function tryCatchVisitor() {\n    return {\n      visitor: TryCatchVisitor\n    };\n  },\n  ifBlockVisitor: function ifBlockVisitor() {\n    return {\n      visitor: IfBlockVisitor\n    };\n  }\n};","var t = require('babel-types');\n\nmodule.exports = {\n  CallExpression: function CallExpression(path) {\n    if (path.node.callee.property && path.node.callee.property.name == 'watch') {\n      path.node.arguments[0].elements.map(function (element) {\n        dependencies.push(element.value);\n      });\n    }\n  }\n};","module.exports = {\n  VariableDeclarator: function VariableDeclarator(path) {\n    var left = path.node.id.name;\n    var right = path.node.init;\n\n    if (right != null) {\n      // x = y\n      if (right.type == 'Identifier') {\n        if (dependencies.includes(left) && left != right.name && !dependencies.includes(right.name)) {\n          dependencies.push(right.name);\n        }\n      } // x = y * z\n\n\n      if (right.type == 'BinaryExpression' || right.type == 'CallExpression') {\n        path.traverse({\n          Identifier: function Identifier(path) {\n            if (dependencies.includes(left) && left != path.node.name && !dependencies.includes(path.node.name)) {\n              dependencies.push(path.node.name);\n            }\n          }\n        });\n      }\n    }\n  }\n};","module.exports = {\n  AssignmentExpression: function AssignmentExpression(path) {\n    var left = path.node.left.name;\n    var right = path.node.right.name; // left = right\n\n    if (right != undefined) {\n      if (dependencies.includes(left) && left != right && !dependencies.includes(right)) {\n        dependencies.push(right);\n      }\n    } // x = y * z\n\n\n    if (path.node.right.type == 'BinaryExpression' || path.node.right.type == 'CallExpression') {\n      path.traverse({\n        Identifier: function Identifier(path) {\n          if (dependencies.includes(left) && left != path.node.name && !dependencies.includes(path.node.name)) {\n            dependencies.push(path.node.name);\n          }\n        }\n      });\n    }\n  }\n};","var t = require('babel-types');\n\nmodule.exports = {\n  Program: function Program(path) {\n    // continuations = {};\n    path.node.body.unshift(t.expressionStatement(t.assignmentExpression('=', t.identifier('continuations'), t.objectExpression([])))); //  function createContinuation() {\n    //      return callCC(cont => cont); \n    //  }\n\n    path.node.body.unshift(t.functionDeclaration(t.identifier('createContinuation'), [], t.blockStatement([t.returnStatement(t.callExpression(t.identifier('callCC'), [t.arrowFunctionExpression([t.identifier('cont')], t.identifier('cont'), false)]))], []), false, false));\n  }\n};","var t = require('babel-types');\n\nglobal.snapshotCounter = 0;\nmodule.exports = {\n  /* continuations.kont* = createContinuation(); */\n  MemberExpression: function MemberExpression(path) {\n    if (path.node.object && path.node.property && path.node.object.name == 'delorean' && path.node.property.name == 'insertTimePoint') {\n      var snapshotCall = path.findParent(function (path) {\n        return path.isCallExpression();\n      });\n      snapshotCall.insertAfter(t.expressionStatement(t.callExpression(t.identifier('addCont'), [t.identifier('kont' + snapshotCall.container.expression.arguments[0].value), t.identifier('continuations'), t.stringLiteral('kont' + snapshotCall.container.expression.arguments[0].value)])));\n      snapshotCall.insertAfter(t.variableDeclaration('var', [t.variableDeclarator(t.identifier('kont' + snapshotCall.container.expression.arguments[0].value), t.callExpression(t.identifier('createContinuation'), []))]));\n      snapshotCounter++;\n    }\n  }\n};","var t = require('babel-types');\n\nvar snapshotCounter = 0;\n\nfunction rightType(key) {\n  switch (typeof heap.snapshots[restore][key]) {\n    case 'number':\n      return t.numericLiteral(heap.snapshots[restore][key]);\n\n    case 'string':\n      return t.stringLiteral(heap.snapshots[restore][key]);\n\n    case 'boolean':\n      return t.booleanLiteral(heap.snapshots[restore][key]);\n\n    /*case 'object':\n    let properties = [];\n        for(let property in heap.snapshots[restore][key]){\n            properties.push(t.objectProperty())\n        }\n    return t.objectExpression(properties);\n    case 'function':\n     return t.functionExpression(\n        t.identifier(heap.snapshots[restore][key].name),\n        t.arrayPattern(heap.snapshots[restore][key].arguments),\n        \n     )*/\n  }\n}\n\nmodule.exports = {\n  MemberExpression: function MemberExpression(path) {\n    if (path.node.property && path.node.property.name == 'kont' + restore && path.container.type == \"AssignmentExpression\") {\n      var continuationCall = path.findParent(function (path) {\n        return path.isAssignmentExpression();\n      });\n      Object.keys(heap.snapshots[restore]).forEach(function (key) {\n        if (heap.snapshots[restore][key]) {\n          continuationCall.insertAfter(t.expressionStatement(t.assignmentExpression('=', t.identifier(key), rightType(key))));\n        }\n      });\n    }\n  }\n};","var t = require('babel-types');\n\nmodule.exports = {\n  /* continuations.kont${restore}(); */\n  Program: function Program(path) {\n    path.node.body.unshift(t.expressionStatement(t.callExpression(t.memberExpression(t.identifier('continuations'), t.identifier(\"kont\".concat(restore))), [])));\n  }\n};","var t = require('babel-types');\n\nwindow.isTimePoint = function (element) {\n  return element && element.expression && element.expression.callee && element.expression.callee.object && element.expression.callee.property && element.expression.callee.object.name == 'delorean' && element.expression.callee.property.name == 'insertTimePoint';\n};\n\nvar catchClause = t.catchClause(t.identifier('e'), t.blockStatement([t.expressionStatement(t.callExpression(t.memberExpression(t.identifier('console'), t.identifier('log')), [t.identifier('e')]))]));\nmodule.exports = {\n  \"Program|BlockStatement\": {\n    exit: function exit(path) {\n      var block = path.node.body;\n      var splitPoints = [];\n\n      for (var i = 0; i < block.length; ++i) {\n        if (isTimePoint(block[i]) || t.isIfStatement(block[i]) || t.isDoWhileStatement(block[i]) || t.isTryStatement(block[i]) || t.isWhileStatement(block[i]) || t.isForStatement(block[i])) {\n          splitPoints.push(i);\n        }\n      }\n\n      var newBlock = [];\n      var auxBlock = [];\n\n      if (splitPoints.length != 0 && (t.isProgram(path) || !t.isTryStatement(path.getStatementParent()))) {\n        for (var _i = splitPoints.length - 1; _i >= -1; --_i) {\n          auxBlock = newBlock;\n          newBlock = [];\n          var startOfTryBlock = 0;\n          if (_i != -1) startOfTryBlock = splitPoints[_i] + 1;\n          var endOfTryBlock = block.length;\n          if (_i < splitPoints.length - 1) endOfTryBlock = splitPoints[_i + 1];\n          if (_i != -1) newBlock.push(block[splitPoints[_i]]);\n          newBlock.push(t.tryStatement(t.blockStatement(block.slice(startOfTryBlock, endOfTryBlock).concat(auxBlock), []), catchClause, null));\n        } //console.log(newBlock)                \n        //console.log(path.node)\n\n\n        while (path.get('body').length != 0) {\n          path.get('body')[0].remove();\n        }\n\n        for (var _i2 = 0; _i2 < newBlock.length; ++_i2) {\n          path.pushContainer('body', newBlock[_i2]);\n        }\n      }\n    }\n  }\n};","module.exports = {\n  \"ForStatement|DoWhileStatement|WhileStatement\": function ForStatementDoWhileStatementWhileStatement(path) {\n    var test = path.get('test');\n\n    if (test.type == 'BinaryExpression' || test.type == 'CallExpression') {\n      var hasTimepoint = false;\n      path.traverse({\n        ExpressionStatement: function ExpressionStatement(path) {\n          if (isTimePoint(path.node)) hasTimepoint = true;\n        }\n      });\n\n      if (hasTimepoint) {\n        test.traverse({\n          Identifier: function Identifier(path) {\n            if (!dependencies.includes(path.node.name)) {\n              dependencies.push(path.node.name);\n            }\n          }\n        });\n      }\n    }\n  }\n};","var t = require('babel-types');\n\nmodule.exports = {\n  IfStatement: function IfStatement(path) {\n    if (path.node.consequent.type != 'BlockStatement') {\n      var block = t.blockStatement([path.node.consequent], []);\n      path.node.consequent = block;\n    }\n  }\n};","var fs = require('fs');\n\nvar babel = require('babel-core');\n\nmodule.exports = function (originalCode, visitors, isString) {\n  var data;\n\n  if (isString) {\n    data = originalCode;\n  } else {\n    data = fs.readFileSync(__dirname + \"/example/input.js\", 'utf8');\n  }\n\n  var src = data.toString();\n\n  var _babel$transform = babel.transform(src, {\n    plugins: visitors\n  }),\n      code = _babel$transform.code;\n\n  return {\n    dependencies: dependencies,\n    code: code\n  };\n};","module.exports = function (inputCode) {\n  var compiler = require('../main');\n\n  var sweet = require('sweet.js');\n\n  var src = sweet.compile(inputCode, {\n    noBabel: true\n  }).code;\n  var output = compiler(src, {\n    includeDebug: true\n  });\n  var finalSrc = \"var $Machine = vm.$Machine;\\n\" + \"var $ContinuationExc = vm.$ContinuationExc;\\n\" + \"var $Frame = vm.$Frame;\\n\" + \"var $DebugInfo = vm.$DebugInfo;\\n\" + output.code + \"var VM = new $Machine();\\n\" + \"VM.on('paused', function() { VM.continue() });\\n\" + \"VM.on('error', function(e) { console.log('error', e) });\\n\" + \"VM.setDebugInfo(new $DebugInfo(__debugInfo));\\n\" + \"VM.execute($__global);\";\n  return finalSrc;\n};","/**\n * Copyright (c) 2013, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\nvar assert = require(\"assert\");\n\nvar types = require(\"ast-types\");\n\nvar n = types.namedTypes;\nvar b = types.builders;\n\nvar hoist = require(\"./hoist\").hoist;\n\nvar Emitter = require(\"./emit\").Emitter;\n\nvar DebugInfo = require(\"./debug\").DebugInfo;\n\nvar escope = require('escope');\n\nvar withLoc = require(\"./util\").withLoc;\n\nexports.transform = function (ast, opts) {\n  n.Program.assert(ast);\n  var debugInfo = new DebugInfo();\n  var nodes = ast.body;\n  var asExpr = opts.asExpr;\n  var originalExpr = nodes[0];\n  var boxedVars = (opts.scope || []).reduce(function (acc, v) {\n    if (v.boxed) {\n      acc.push(v.name);\n    }\n\n    return acc;\n  }, []);\n  var scopes = escope.analyze(ast).scopes; // Scan the scopes bottom-up by simply reversing the array. We need\n  // this because we need to detect if an identifier is boxed before\n  // the scope which it is declared in is scanned.\n\n  scopes.reverse();\n  scopes.forEach(function (scope) {\n    if (scope.type !== 'global' || asExpr) {\n      if (asExpr) {\n        // We need to also scan the variables to catch top-level\n        // definitions that aren't referenced but might be boxed\n        // (think function re-definitions)\n        scope.variables.forEach(function (v) {\n          if (boxedVars.indexOf(v.name) !== -1) {\n            v.defs.forEach(function (def) {\n              def.name.boxed = true;\n            });\n          }\n        });\n      }\n\n      scope.references.forEach(function (r) {\n        var defBoxed = r.resolved && r.resolved.defs.reduce(function (acc, def) {\n          return acc || def.name.boxed || boxedVars.indexOf(def.name) !== -1;\n        }, false); // Ignore catch scopes\n\n        var from = r.from;\n\n        while (from.type == 'catch' && from.upper) {\n          from = from.upper;\n        }\n\n        if (defBoxed || !r.resolved && boxedVars.indexOf(r.identifier.name) !== -1 || r.resolved && r.resolved.scope.type !== 'catch' && r.resolved.scope !== from && // completely ignore references to a named function\n        // expression, as that binding is immutable (super weird)\n        !(r.resolved.defs[0].type === 'FunctionName' && r.resolved.defs[0].node.type === 'FunctionExpression')) {\n          r.identifier.boxed = true;\n\n          if (r.resolved) {\n            r.resolved.defs.forEach(function (def) {\n              def.name.boxed = true;\n            });\n          }\n        }\n      });\n    }\n  });\n\n  if (asExpr) {\n    // If evaluating as an expression, return the last value if it's\n    // an expression\n    var last = nodes.length - 1;\n\n    if (n.ExpressionStatement.check(nodes[last])) {\n      nodes[last] = withLoc(b.returnStatement(nodes[last].expression), nodes[last].loc);\n    }\n  }\n\n  nodes = b.functionExpression(b.identifier(asExpr ? '$__eval' : '$__global'), [], b.blockStatement(nodes));\n  var rootFn = types.traverse(nodes, function (node) {\n    return visitNode.call(this, node, [], debugInfo);\n  });\n\n  if (asExpr) {\n    rootFn = rootFn.body.body;\n\n    if (opts.scope) {\n      var vars = opts.scope.map(function (v) {\n        return v.name;\n      });\n      var decl = rootFn[0];\n\n      if (n.VariableDeclaration.check(decl)) {\n        decl.declarations = decl.declarations.reduce(function (acc, v) {\n          if (vars.indexOf(v.id.name) === -1) {\n            acc.push(v);\n          }\n\n          return acc;\n        }, []);\n\n        if (!decl.declarations.length) {\n          rootFn[0] = b.expressionStatement(b.literal(null));\n        }\n      }\n    } else {\n      rootFn[0] = b.expressionStatement(b.literal(null));\n    }\n\n    rootFn.unshift(b.expressionStatement(b.callExpression(b.memberExpression(b.identifier('VM'), b.identifier('pushState'), false), [])));\n    rootFn.push(b.variableDeclaration('var', [b.variableDeclarator(b.identifier('$__rval'), b.callExpression(b.identifier('$__eval'), []))]));\n    rootFn.push(b.expressionStatement(b.callExpression(b.memberExpression(b.identifier('VM'), b.identifier('popState'), false), [])));\n    rootFn.push(b.expressionStatement(b.identifier('$__rval')));\n  } else {\n    rootFn = rootFn.body.body;\n  }\n\n  ast.body = rootFn;\n  return {\n    ast: ast,\n    debugAST: opts.includeDebug ? [debugInfo.getDebugAST()] : [],\n    debugInfo: debugInfo.getDebugInfo()\n  };\n};\n\nvar id = 1;\n\nfunction newFunctionName() {\n  return b.identifier('$anon' + id++);\n}\n\nfunction visitNode(node, scope, debugInfo) {\n  // Boxed variables need to access the box instead of used directly\n  // (foo => foo[0])\n  if (n.Identifier.check(node) && (!n.VariableDeclarator.check(this.parent.node) || this.parent.node.id !== node) && node.boxed) {\n    this.replace(withLoc(b.memberExpression(node, b.literal(0), true), node.loc));\n    return;\n  }\n\n  if (!n.Function.check(node)) {\n    // Note that because we are not returning false here the traversal\n    // will continue into the subtree rooted at this node, as desired.\n    return;\n  }\n\n  node.generator = false;\n\n  if (node.expression) {\n    // Transform expression lambdas into normal functions.\n    node.expression = false; // This feels very dirty, is it ok to change the type like this?\n    // We need to output a function that we can name so it can be\n    // captured.\n    // TODO: properly compile out arrow functions\n\n    node.type = 'FunctionExpression';\n    node.body = b.blockStatement([withLoc(b.returnStatement(node.body), node.body.loc)]);\n  } // All functions are converted with assignments (foo = function\n  // foo() {}) but with the function name. Rename the function though\n  // so that if it is referenced inside itself, it will close over the\n  // \"outside\" variable (that should be boxed)\n\n\n  node.id = node.id || newFunctionName();\n  var isGlobal = node.id.name === '$__global';\n  var isExpr = node.id.name === '$__eval';\n  var nameId = node.id;\n  var funcName = node.id.name;\n  var vars = hoist(node);\n  var localScope = !vars ? node.params : node.params.concat(vars.declarations.map(function (v) {\n    return v.id;\n  })); // It sucks to traverse the whole function again, but we need to see\n  // if we need to manage a try stack\n\n  var hasTry = false;\n  types.traverse(node.body, function (child) {\n    if (n.Function.check(child)) {\n      return false;\n    }\n\n    if (n.TryStatement.check(child)) {\n      hasTry = true;\n    }\n\n    return;\n  }); // Traverse and compile child functions first\n\n  node.body = types.traverse(node.body, function (child) {\n    return visitNode.call(this, child, scope.concat(localScope), debugInfo);\n  }); // Now compile me\n\n  var debugId = debugInfo.makeId();\n  var em = new Emitter(debugId, debugInfo);\n  var path = new types.NodePath(node);\n  em.explode(path.get(\"body\"));\n  var finalBody = em.getMachine(node.id.name, localScope); // construct the thing\n\n  var inner = [];\n\n  if (!isGlobal && !isExpr) {\n    node.params.forEach(function (arg) {\n      if (arg.boxed) {\n        inner.push(b.expressionStatement(b.assignmentExpression('=', arg, b.arrayExpression([arg]))));\n      }\n    });\n\n    if (vars) {\n      inner = inner.concat(vars);\n    }\n  }\n\n  if (!isGlobal && !isExpr) {\n    inner.push.apply(inner, [b.ifStatement(b.unaryExpression('!', em.vmProperty('running')), b.returnStatement(b.callExpression(b.memberExpression(b.identifier('VM'), b.identifier('execute'), false), [node.id, b.literal(null), b.thisExpression(), b.identifier('arguments')])))]);\n  } // internal harnesses to run the function\n\n\n  inner.push(em.declareVar('$__next', b.literal(0)));\n  inner.push(em.declareVar('$__tmpid', b.literal(0)));\n\n  for (var i = 1, l = em.numTempVars(); i <= l; i++) {\n    inner.push(em.declareVar('$__t' + i, null));\n  }\n\n  if (hasTry) {\n    inner.push(em.declareVar('tryStack', b.arrayExpression([])));\n  }\n\n  var tmpSave = [];\n\n  for (var i = 1, l = em.numTempVars(); i <= l; i++) {\n    tmpSave.push(b.property('init', b.identifier('$__t' + i), b.identifier('$__t' + i)));\n  }\n\n  inner = inner.concat([b.tryStatement(b.blockStatement(getRestoration(em, isGlobal, localScope, hasTry).concat(finalBody)), b.catchClause(b.identifier('e'), null, b.blockStatement([b.ifStatement(b.unaryExpression('!', b.binaryExpression('instanceof', b.identifier('e'), b.identifier('$ContinuationExc'))), b.expressionStatement(b.assignmentExpression('=', b.identifier('e'), b.newExpression(b.identifier('$ContinuationExc'), [b.identifier('e')])))), b.ifStatement(b.unaryExpression('!', em.getProperty('e', 'reuse')), b.expressionStatement(b.callExpression(em.getProperty('e', 'pushFrame'), [b.newExpression(b.identifier('$Frame'), [b.literal(debugId), b.literal(funcName.slice(1)), b.identifier(funcName), b.identifier('$__next'), b.objectExpression(localScope.map(function (id) {\n    return b.property('init', id, id);\n  }).concat(tmpSave)), // b.literal(null),\n  b.arrayExpression(localScope.concat(scope).map(function (id) {\n    return b.objectExpression([b.property('init', b.literal('name'), b.literal(id.name)), b.property('init', b.literal('boxed'), b.literal(!!id.boxed))]);\n  })), b.thisExpression(), hasTry ? b.identifier('tryStack') : b.literal(null), b.identifier('$__tmpid')])]))), em.assign(em.getProperty('e', 'reuse'), b.literal(false)), b.throwStatement(b.identifier('e'))])))]);\n\n  if (isGlobal || isExpr) {\n    node.body = b.blockStatement([vars ? vars : b.expressionStatement(b.literal(null)), b.functionDeclaration(nameId, [], b.blockStatement(inner))]);\n  } else {\n    node.body = b.blockStatement(inner);\n  }\n\n  return false;\n}\n\nfunction getRestoration(self, isGlobal, localScope, hasTry) {\n  // restoring a frame\n  var restoration = [];\n  restoration.push(self.declareVar('$__frame', b.callExpression(self.vmProperty('popFrame'), [])));\n\n  if (!isGlobal) {\n    restoration = restoration.concat(localScope.map(function (id) {\n      return b.expressionStatement(b.assignmentExpression('=', b.identifier(id.name), self.getProperty(self.getProperty(b.identifier('$__frame'), 'state'), id)));\n    }));\n  }\n\n  restoration.push(self.assign(b.identifier('$__next'), self.getProperty(b.identifier('$__frame'), 'next')));\n\n  if (hasTry) {\n    restoration.push(self.assign(b.identifier('tryStack'), self.getProperty(b.identifier('$__frame'), 'tryStack')));\n  }\n\n  restoration = restoration.concat([self.declareVar('$__child', b.callExpression(self.vmProperty('nextFrame'), [])), self.assign(b.identifier('$__tmpid'), self.getProperty(b.identifier('$__frame'), 'tmpid')), b.ifStatement(b.identifier('$__child'), b.blockStatement([self.assign(self.getProperty(self.getProperty('$__frame', b.identifier('state')), b.binaryExpression('+', b.literal('$__t'), self.getProperty('$__frame', 'tmpid')), true), b.callExpression(self.getProperty(self.getProperty('$__child', 'fn'), 'call'), [self.getProperty('$__child', 'thisPtr')])), // if we are stepping, stop executing here so that it\n  // pauses on the \"return\" instruction\n  b.ifStatement(self.vmProperty('stepping'), b.throwStatement(b.newExpression(b.identifier('$ContinuationExc'), [b.literal(null), b.identifier('$__frame')])))]))]);\n\n  for (var i = 1, l = self.numTempVars(); i <= l; i++) {\n    restoration.push(b.expressionStatement(b.assignmentExpression('=', b.identifier('$__t' + i), self.getProperty(self.getProperty(b.identifier('$__frame'), 'state'), '$__t' + i))));\n  }\n\n  return [b.ifStatement(self.vmProperty('doRestore'), b.blockStatement(restoration), b.ifStatement( // if we are stepping, stop executing so it is stopped at\n  // the first instruction of the new frame\n  self.vmProperty('stepping'), b.throwStatement(b.newExpression(b.identifier('$ContinuationExc'), []))))];\n}","/**\n * Copyright (c) 2013, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\nvar assert = require(\"assert\");\n\nvar types = require(\"ast-types\");\n\nvar n = types.namedTypes;\nvar b = types.builders;\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nvar withLoc = require(\"./util\").withLoc; // The hoist function takes a FunctionExpression or FunctionDeclaration\n// and replaces any Declaration nodes in its body with assignments, then\n// returns a VariableDeclaration containing just the names of the removed\n// declarations.\n\n\nexports.hoist = function (fun) {\n  n.Function.assert(fun);\n  var vars = {};\n  var funDeclsToRaise = [];\n\n  function varDeclToExpr(vdec, includeIdentifiers) {\n    n.VariableDeclaration.assert(vdec);\n    var exprs = [];\n    vdec.declarations.forEach(function (dec) {\n      vars[dec.id.name] = dec.id;\n\n      if (dec.init) {\n        var assn = b.assignmentExpression('=', dec.id, dec.init);\n        exprs.push(withLoc(assn, dec.loc));\n      } else if (includeIdentifiers) {\n        exprs.push(dec.id);\n      }\n    });\n    if (exprs.length === 0) return null;\n    if (exprs.length === 1) return exprs[0];\n    return b.sequenceExpression(exprs);\n  }\n\n  types.traverse(fun.body, function (node) {\n    if (n.VariableDeclaration.check(node)) {\n      var expr = varDeclToExpr(node, false);\n\n      if (expr === null) {\n        this.replace();\n      } else {\n        // We don't need to traverse this expression any further because\n        // there can't be any new declarations inside an expression.\n        this.replace(withLoc(b.expressionStatement(expr), node.loc));\n      } // Since the original node has been either removed or replaced,\n      // avoid traversing it any further.\n\n\n      return false;\n    } else if (n.ForStatement.check(node)) {\n      if (n.VariableDeclaration.check(node.init)) {\n        var expr = varDeclToExpr(node.init, false);\n        this.get(\"init\").replace(expr);\n      }\n    } else if (n.ForInStatement.check(node)) {\n      if (n.VariableDeclaration.check(node.left)) {\n        var expr = varDeclToExpr(node.left, true);\n        this.get(\"left\").replace(expr);\n      }\n    } else if (n.FunctionDeclaration.check(node)) {\n      vars[node.id.name] = node.id;\n      var parentNode = this.parent.node; // Prefix the name with '$' as it introduces a new scoping rule\n      // and we want the original id to be referenced within the body\n\n      var funcExpr = b.functionExpression(b.identifier('$' + node.id.name), node.params, node.body, node.generator, node.expression);\n      funcExpr.loc = node.loc;\n      var assignment = withLoc(b.expressionStatement(withLoc(b.assignmentExpression(\"=\", node.id, funcExpr), node.loc)), node.loc);\n\n      if (n.BlockStatement.check(this.parent.node)) {\n        // unshift because later it will be added in reverse, so this\n        // will keep the original order\n        funDeclsToRaise.unshift({\n          block: this.parent.node,\n          assignment: assignment\n        }); // Remove the function declaration for now, but reinsert the assignment\n        // form later, at the top of the enclosing BlockStatement.\n\n        this.replace();\n      } else {\n        this.replace(assignment);\n      } // Don't hoist variables out of inner functions.\n\n\n      return false;\n    } else if (n.FunctionExpression.check(node)) {\n      // Don't descend into nested function expressions.\n      return false;\n    }\n  });\n  funDeclsToRaise.forEach(function (entry) {\n    entry.block.body.unshift(entry.assignment);\n  });\n  var declarations = [];\n  var paramNames = {};\n  fun.params.forEach(function (param) {\n    if (n.Identifier.check(param)) {\n      paramNames[param.name] = param;\n    } else {// Variables declared by destructuring parameter patterns will be\n      // harmlessly re-declared.\n    }\n  });\n  Object.keys(vars).forEach(function (name) {\n    if (!hasOwn.call(paramNames, name)) {\n      var id = vars[name];\n      declarations.push(b.variableDeclarator(id, id.boxed ? b.arrayExpression([b.identifier('undefined')]) : null));\n    }\n  });\n\n  if (declarations.length === 0) {\n    return null; // Be sure to handle this case!\n  }\n\n  return b.variableDeclaration(\"var\", declarations);\n};","/**\n * Copyright (c) 2013, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\nvar assert = require(\"assert\");\n\nvar types = require(\"ast-types\");\n\nvar n = types.namedTypes;\nvar b = types.builders;\n\nvar inherits = require(\"util\").inherits;\n\nfunction Entry() {\n  assert.ok(this instanceof Entry);\n}\n\nfunction FunctionEntry(returnLoc) {\n  Entry.call(this);\n  n.Literal.assert(returnLoc);\n  Object.defineProperties(this, {\n    returnLoc: {\n      value: returnLoc\n    }\n  });\n}\n\ninherits(FunctionEntry, Entry);\nexports.FunctionEntry = FunctionEntry;\n\nfunction LoopEntry(breakLoc, continueLoc, label) {\n  Entry.call(this);\n  n.Literal.assert(breakLoc);\n  n.Literal.assert(continueLoc);\n\n  if (label) {\n    n.Identifier.assert(label);\n  } else {\n    label = null;\n  }\n\n  Object.defineProperties(this, {\n    breakLoc: {\n      value: breakLoc\n    },\n    continueLoc: {\n      value: continueLoc\n    },\n    label: {\n      value: label\n    }\n  });\n}\n\ninherits(LoopEntry, Entry);\nexports.LoopEntry = LoopEntry;\n\nfunction SwitchEntry(breakLoc) {\n  Entry.call(this);\n  n.Literal.assert(breakLoc);\n  Object.defineProperties(this, {\n    breakLoc: {\n      value: breakLoc\n    }\n  });\n}\n\ninherits(SwitchEntry, Entry);\nexports.SwitchEntry = SwitchEntry;\n\nfunction TryEntry(catchEntry, finallyEntry) {\n  Entry.call(this);\n\n  if (catchEntry) {\n    assert.ok(catchEntry instanceof CatchEntry);\n  } else {\n    catchEntry = null;\n  }\n\n  if (finallyEntry) {\n    assert.ok(finallyEntry instanceof FinallyEntry);\n  } else {\n    finallyEntry = null;\n  }\n\n  Object.defineProperties(this, {\n    catchEntry: {\n      value: catchEntry\n    },\n    finallyEntry: {\n      value: finallyEntry\n    }\n  });\n}\n\ninherits(TryEntry, Entry);\nexports.TryEntry = TryEntry;\n\nfunction CatchEntry(firstLoc, paramId) {\n  Entry.call(this);\n  n.Literal.assert(firstLoc);\n  n.Identifier.assert(paramId);\n  Object.defineProperties(this, {\n    firstLoc: {\n      value: firstLoc\n    },\n    paramId: {\n      value: paramId\n    }\n  });\n}\n\ninherits(CatchEntry, Entry);\nexports.CatchEntry = CatchEntry;\n\nfunction FinallyEntry(firstLoc, nextLocTempVar) {\n  Entry.call(this);\n  n.Literal.assert(firstLoc);\n  n.Identifier.assert(nextLocTempVar);\n  Object.defineProperties(this, {\n    firstLoc: {\n      value: firstLoc\n    },\n    nextLocTempVar: {\n      value: nextLocTempVar\n    }\n  });\n}\n\ninherits(FinallyEntry, Entry);\nexports.FinallyEntry = FinallyEntry;\n\nfunction LeapManager(emitter) {\n  assert.ok(this instanceof LeapManager);\n\n  var Emitter = require(\"./emit\").Emitter;\n\n  assert.ok(emitter instanceof Emitter);\n  Object.defineProperties(this, {\n    emitter: {\n      value: emitter\n    },\n    entryStack: {\n      value: [new FunctionEntry(emitter.finalLoc)]\n    }\n  });\n}\n\nvar LMp = LeapManager.prototype;\nexports.LeapManager = LeapManager;\n\nLMp.withEntry = function (entry, callback) {\n  assert.ok(entry instanceof Entry);\n  this.entryStack.push(entry);\n\n  try {\n    callback.call(this.emitter);\n  } finally {\n    var popped = this.entryStack.pop();\n    assert.strictEqual(popped, entry);\n  }\n};\n\nLMp._leapToEntry = function (predicate, defaultLoc) {\n  var entry, loc;\n  var finallyEntries = [];\n  var skipNextTryEntry = null;\n\n  for (var i = this.entryStack.length - 1; i >= 0; --i) {\n    entry = this.entryStack[i];\n\n    if (entry instanceof CatchEntry || entry instanceof FinallyEntry) {\n      // If we are inside of a catch or finally block, then we must\n      // have exited the try block already, so we shouldn't consider\n      // the next TryStatement as a handler for this throw.\n      skipNextTryEntry = entry;\n    } else if (entry instanceof TryEntry) {\n      if (skipNextTryEntry) {\n        // If an exception was thrown from inside a catch block and this\n        // try statement has a finally block, make sure we execute that\n        // finally block.\n        if (skipNextTryEntry instanceof CatchEntry && entry.finallyEntry) {\n          finallyEntries.push(entry.finallyEntry);\n        }\n\n        skipNextTryEntry = null;\n      } else if (loc = predicate.call(this, entry)) {\n        break;\n      } else if (entry.finallyEntry) {\n        finallyEntries.push(entry.finallyEntry);\n      }\n    } else if (loc = predicate.call(this, entry)) {\n      break;\n    }\n  }\n\n  if (loc) {// fall through\n  } else if (defaultLoc) {\n    loc = defaultLoc;\n  } else {\n    return null;\n  }\n\n  n.Literal.assert(loc);\n  var finallyEntry;\n\n  while (finallyEntry = finallyEntries.pop()) {\n    this.emitter.emitAssign(finallyEntry.nextLocTempVar, loc);\n    loc = finallyEntry.firstLoc;\n  }\n\n  return loc;\n};\n\nfunction getLeapLocation(entry, property, label) {\n  var loc = entry[property];\n\n  if (loc) {\n    if (label) {\n      if (entry.label && entry.label.name === label.name) {\n        return loc;\n      }\n    } else {\n      return loc;\n    }\n  }\n\n  return null;\n}\n\nLMp.emitBreak = function (label) {\n  var loc = this._leapToEntry(function (entry) {\n    return getLeapLocation(entry, \"breakLoc\", label);\n  });\n\n  if (loc === null) {\n    throw new Error(\"illegal break statement\");\n  }\n\n  this.emitter.clearPendingException();\n  this.emitter.jump(loc);\n};\n\nLMp.emitContinue = function (label) {\n  var loc = this._leapToEntry(function (entry) {\n    return getLeapLocation(entry, \"continueLoc\", label);\n  });\n\n  if (loc === null) {\n    throw new Error(\"illegal continue statement\");\n  }\n\n  this.emitter.clearPendingException();\n  this.emitter.jump(loc);\n};","/**\n * Copyright (c) 2013, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\nvar assert = require(\"assert\");\n\nvar m = require(\"private\").makeAccessor();\n\nvar types = require(\"ast-types\");\n\nvar isArray = types.builtInTypes.array;\nvar n = types.namedTypes;\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nfunction makePredicate(propertyName, knownTypes) {\n  function onlyChildren(node) {\n    n.Node.assert(node); // Assume no side effects until we find out otherwise.\n\n    var result = false;\n\n    function check(child) {\n      if (result) {// Do nothing.\n      } else if (isArray.check(child)) {\n        child.some(check);\n      } else if (n.Node.check(child)) {\n        assert.strictEqual(result, false);\n        result = predicate(child);\n      }\n\n      return result;\n    }\n\n    types.eachField(node, function (name, child) {\n      check(child);\n    });\n    return result;\n  }\n\n  function predicate(node) {\n    n.Node.assert(node);\n    var meta = m(node);\n    if (hasOwn.call(meta, propertyName)) return meta[propertyName]; // Certain types are \"opaque,\" which means they have no side\n    // effects or leaps and we don't care about their subexpressions.\n\n    if (hasOwn.call(opaqueTypes, node.type)) return meta[propertyName] = false;\n    if (hasOwn.call(knownTypes, node.type)) return meta[propertyName] = true;\n    return meta[propertyName] = onlyChildren(node);\n  }\n\n  predicate.onlyChildren = onlyChildren;\n  return predicate;\n}\n\nvar opaqueTypes = {\n  FunctionExpression: true\n}; // These types potentially have side effects regardless of what side\n// effects their subexpressions have.\n\nvar sideEffectTypes = {\n  CallExpression: true,\n  // Anything could happen!\n  ForInStatement: true,\n  // Modifies the key variable.\n  UnaryExpression: true,\n  // Think delete.\n  BinaryExpression: true,\n  // Might invoke .toString() or .valueOf().\n  AssignmentExpression: true,\n  // Side-effecting by definition.\n  UpdateExpression: true,\n  // Updates are essentially assignments.\n  NewExpression: true // Similar to CallExpression.\n\n}; // These types are the direct cause of all leaps in control flow.\n\nvar leapTypes = {\n  YieldExpression: true,\n  BreakStatement: true,\n  ContinueStatement: true,\n  ReturnStatement: true,\n  ThrowStatement: true,\n  CallExpression: true,\n  DebuggerStatement: true\n}; // All leap types are also side effect types.\n\nfor (var type in leapTypes) {\n  if (hasOwn.call(leapTypes, type)) {\n    sideEffectTypes[type] = leapTypes[type];\n  }\n}\n\nexports.hasSideEffects = makePredicate(\"hasSideEffects\", sideEffectTypes);\nexports.containsLeap = makePredicate(\"containsLeap\", leapTypes);","var types = require(\"ast-types\");\n\nvar recast = require(\"recast\");\n\nvar b = types.builders;\n\nfunction DebugInfo() {\n  this.baseId = 0;\n  this.baseIndex = 1;\n  this.machines = [];\n  this.stepIds = [];\n  this.stmts = [];\n}\n\nDebugInfo.prototype.makeId = function () {\n  var id = this.baseId++;\n  this.machines[id] = {\n    locs: {},\n    finalLoc: null\n  };\n  return id;\n};\n\nDebugInfo.prototype.addStepIds = function (machineId, ids) {\n  this.stepIds[machineId] = ids;\n};\n\nDebugInfo.prototype.addSourceLocation = function (machineId, loc, index) {\n  this.machines[machineId].locs[index] = loc;\n  return index;\n};\n\nDebugInfo.prototype.getSourceLocation = function (machineId, index) {\n  return this.machines[machineId].locs[index];\n};\n\nDebugInfo.prototype.addFinalLocation = function (machineId, loc) {\n  this.machines[machineId].finalLoc = loc;\n};\n\nDebugInfo.prototype.getDebugAST = function () {\n  var ast = recast.parse('(' + JSON.stringify({\n    machines: this.machines,\n    stepIds: this.stepIds\n  }) + ')');\n  return b.variableDeclaration('var', [b.variableDeclarator(b.identifier('__debugInfo'), ast.program.body[0].expression)]);\n};\n\nDebugInfo.prototype.getDebugInfo = function () {\n  return {\n    machines: this.machines,\n    stepIds: this.stepIds\n  };\n};\n\nexports.DebugInfo = DebugInfo;"],"sourceRoot":""}